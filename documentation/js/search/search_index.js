var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.432,1,1.22]],["body/components/AppComponent.html",[0,0.64,1,1.965,2,1.771,3,0.156,4,0.156,5,1.314,6,1.372,7,1.314,8,1.314,9,0.124,10,3.065,11,1.314,12,2.954,13,2.124,14,2.11,15,1.93,16,5.759,17,1.93,18,4.978,19,0.124,20,0.313,21,1.965,22,5.759,23,4.1,24,0.848,25,4.978,26,6.83,27,6.249,28,4.978,29,0.642,30,0.732,31,3.539,32,0.436,33,0.016,34,0.334,35,0.227,36,0.436,37,6.204,38,0.82,39,1.28,40,3.539,41,1.565,42,3.539,43,0.886,44,0.742,45,6.585,46,3.539,47,4.723,48,4.503,49,3.872,50,4.311,51,3.539,52,0.552,53,0.657,54,0.156,55,0.067,56,5.759,57,4.978,58,4.978,59,0.504,60,0.91,61,3.539,62,0.714,63,2.333,64,3.539,65,3.539,66,3.539,67,3.544,68,2.877,69,1.739,70,3.846,71,4.978,72,1.541,73,2.569,74,6.249,75,4.978,76,4.978,77,2.438,78,4.978,79,4.978,80,4.978,81,4.978,82,4.978,83,3.065,84,5.759,85,7.281,86,6.462,87,2.74,88,2.557,89,3.539,90,3.065,91,3.065,92,3.539,93,3.065,94,5.759,95,2.319,96,4.978,97,3.539,98,3.539,99,2.045,100,2.289,101,4.978,102,3.539,103,2.877,104,6.249,105,4.12,106,5.759,107,6.249,108,6.249,109,4.311,110,4.978,111,3.539,112,4.978,113,2.714,114,4.978,115,2.877,116,4.978,117,3.065,118,2.333,119,3.539,120,4.978,121,4.978,122,3.539,123,3.539,124,3.539,125,3.539,126,3.539,127,5.759,128,5.759,129,3.539,130,1.208,131,1.848,132,1.503,133,1.314,134,1.314,135,1.314,136,1.112,137,1.259,138,0.807,139,1.314,140,1.068,141,1.903,142,1.848,143,1.026,144,1.16,145,1.848,146,1.026,147,2.331,148,1.026,149,2.445,150,1.068,151,1.068,152,1.026,153,1.848,154,1.026,155,1.026,156,0.84,157,1.068,158,1.314,159,1.026,160,1.848,161,1.026,162,1.026,163,0.528,164,1.068,165,1.848,166,1.068,167,1.026,168,0.744,169,1.026,170,1.314,171,1.159,172,1.314,173,1.026,174,1.848,175,1.026,176,1.026,177,0.685,178,1.314,179,1.314,180,0.01,181,0.01]],["title/modules/AppModule.html",[182,2.56,183,2.764]],["body/modules/AppModule.html",[1,2.338,3,0.145,4,0.145,9,0.116,13,0.885,33,0.016,52,1.262,53,0.614,54,0.145,55,0.063,72,1.27,130,1.128,136,2.1,140,2.016,143,1.937,144,1.125,146,1.937,148,1.937,150,2.016,151,2.016,152,1.937,154,1.937,155,1.937,157,2.016,159,1.937,161,1.937,162,1.937,164,2.016,166,2.016,167,1.937,169,1.937,171,2.187,173,1.937,175,1.937,176,1.937,180,0.009,181,0.009,182,2.18,183,5.84,184,2.18,185,2.354,186,4.804,187,4.315,188,4.315,189,2.863,190,2.863,191,2.863,192,2.863,193,2.863,194,2.863,195,4.404,196,3.641,197,4.404,198,4.404,199,2.706,200,4.111,201,1.585,202,2.706,203,4.108,204,2.863,205,2.863,206,3.306,207,3.69,208,3.306,209,3.69,210,2.572,211,4.743,212,2.863,213,3.377,214,2.035,215,4.743,216,1.468,217,3.69,218,3.69,219,1.402,220,4.743,221,2.354,222,2.035,223,4.743,224,2.354,225,2.863,226,3.306,227,3.306,228,2.572,229,4.315,230,3.128,231,3.69,232,2.18,233,3.128,234,5.195,235,3.128,236,2.572,237,2.18,238,3.69,239,2.572,240,2.572,241,2.354,242,2.572,243,2.18,244,3.69,245,2.572,246,2.18,247,2.572,248,2.18,249,2.572,250,2.18,251,3.69,252,2.572,253,2.18,254,2.572,255,2.18,256,2.572,257,2.354,258,3.69,259,2.572,260,2.354,261,2.572,262,2.18,263,2.572,264,3.306,265,2.572,266,2.18,267,3.69,268,2.572,269,2.18,270,2.572,271,2.18,272,3.306,273,3.415,274,3.415,275,2.354,276,2.354,277,3.306,278,1.706,279,3.306,280,2.863,281,1.282,282,1.706,283,3.306]],["title/modules/AppRoutingModule.html",[182,2.56,195,2.56]],["body/modules/AppRoutingModule.html",[0,0.878,3,0.16,4,0.16,9,0.128,23,5.689,33,0.016,47,3.351,48,2.403,52,1.249,53,0.677,54,0.16,55,0.069,62,1.025,69,1.534,72,1.845,73,3.02,140,1.534,141,2.09,143,1.474,144,1.425,146,1.474,147,2.584,148,1.474,150,1.534,151,1.534,152,1.474,154,1.474,155,1.474,156,1.206,157,1.534,159,1.474,161,1.474,162,1.474,163,0.993,164,1.534,166,1.534,167,1.474,168,1.399,169,1.697,173,1.474,175,1.474,176,1.474,177,1.465,180,0.01,181,0.01,184,2.403,195,2.403,207,2.835,213,2.595,214,2.244,217,3.953,218,3.953,219,1.545,221,2.595,222,2.244,228,2.835,229,4.551,230,3.351,231,3.953,232,2.403,233,3.351,234,5.363,235,3.351,236,2.835,237,2.403,238,3.953,239,2.835,240,2.835,241,2.595,242,2.835,243,2.403,244,3.953,245,2.835,246,2.403,247,2.835,248,2.403,249,2.835,250,2.403,251,3.953,252,2.835,253,2.403,254,2.835,255,2.403,256,2.835,257,2.595,258,3.953,259,2.835,260,2.595,261,2.835,262,2.403,263,2.835,265,2.835,266,2.403,267,3.953,268,2.835,269,2.403,270,2.835,271,2.403,273,3.602,274,3.602,284,2.835,285,2.835,286,1.307,287,4.402,288,3.157,289,3.157,290,3.618,291,4.174,292,4.402,293,1.015,294,2.595,295,3.157,296,1.785,297,3.157,298,3.157,299,3.157,300,3.157,301,3.157,302,2.107,303,3.157,304,6.146,305,4.551,306,2.595,307,3.157,308,3.157,309,3.157,310,3.157,311,1.389,312,3.157,313,3.157,314,3.157,315,3.157,316,3.157,317,3.157,318,1.785]],["title/components/AsyncObservablePipeComponent.html",[0,0.432,136,1.22]],["body/components/AsyncObservablePipeComponent.html",[0,0.741,1,1.483,2,2.15,3,0.207,4,0.207,5,2.243,7,1.752,8,1.752,9,0.165,11,1.752,12,3.021,13,2.169,19,0.165,20,0.38,30,0.525,33,0.016,34,0.35,43,0.839,44,0.704,52,1.04,53,0.876,54,0.207,55,0.089,69,1.425,72,1.263,87,2.608,130,1.61,131,2.243,132,1.824,133,1.752,134,1.752,135,1.752,136,2.208,137,2.643,138,1.602,139,1.752,140,1.425,141,2.069,142,2.243,143,1.368,144,1.304,145,2.243,146,1.368,147,2.535,148,1.368,149,2.696,150,1.425,151,1.425,152,1.368,153,2.243,154,1.368,155,1.368,156,1.12,157,1.425,158,1.752,159,1.368,160,2.243,161,1.368,162,1.368,163,0.704,164,1.425,165,2.243,166,1.425,167,1.368,168,0.992,169,1.368,170,1.752,171,1.545,172,1.752,173,1.368,174,2.243,175,1.368,176,1.368,177,0.913,178,1.752,179,1.752,180,0.012,181,0.012,214,2.904,319,4.087,320,5.231,321,6.662,322,7.723,323,6.04,324,4.719,325,4.719,326,4.719,327,1.545,328,4.719]],["title/classes/Attribute.html",[55,0.073,144,0.721]],["body/classes/Attribute.html",[3,0.238,4,0.238,9,0.19,19,0.19,20,0.414,29,0.755,30,0.865,33,0.016,35,0.303,44,1.058,54,0.238,55,0.125,70,3.335,144,1.222,180,0.013,181,0.013,329,1.928,330,4.692,331,1.762,332,2.141,333,6.143,334,6.143,335,5.05,336,3.867,337,1.157,338,6.584,339,5.417,340,5.417,341,2.293,342,5.417,343,5.417,344,5.417,345,2.653,346,5.417,347,3.857,348,5.417,349,5.417,350,5.417]],["title/classes/AttributeDictionary.html",[55,0.073,351,2.244]],["body/classes/AttributeDictionary.html",[0,0.793,3,0.241,4,0.241,9,0.192,19,0.192,20,0.417,29,0.75,30,0.857,33,0.016,34,0.414,35,0.311,36,0.97,54,0.241,55,0.104,72,1.468,144,1.018,180,0.013,181,0.013,329,1.952,331,1.468,332,2.153,337,1.164,345,2.687,351,3.835,352,6.756,353,3.906,354,3.171,355,3.681,356,6.635,357,5.486,358,5.486,359,4.752,360,5.486,361,2.436,362,5.486,363,5.486,364,3.171]],["title/components/AttributeDictionaryAddComponent.html",[0,0.432,143,1.126]],["body/components/AttributeDictionaryAddComponent.html",[0,0.793,1,0.801,2,1.391,3,0.112,4,0.112,5,0.946,6,0.988,7,0.946,8,0.946,9,0.089,11,0.946,12,2.854,13,2.05,15,1.515,17,1.515,19,0.089,20,0.246,21,1.623,24,0.666,29,0.447,30,0.848,32,0.779,33,0.016,34,0.437,35,0.297,36,0.779,38,0.952,39,1.677,43,1.023,44,0.858,52,1.043,53,0.473,54,0.112,55,0.048,59,0.865,60,1.561,69,0.769,72,1.827,87,1.98,130,0.87,131,1.451,132,1.18,133,0.946,134,0.946,135,0.946,136,0.801,137,0.907,138,0.581,139,0.946,140,0.769,141,2.06,142,1.451,143,1.547,144,1.505,145,1.451,146,0.739,147,2.072,148,0.739,149,2.136,150,0.769,151,0.769,152,0.739,153,1.451,154,0.739,155,0.739,156,0.605,157,0.769,158,0.946,159,0.739,160,1.451,161,0.739,162,0.739,163,0.38,164,0.769,165,1.451,166,0.769,167,0.739,168,0.536,169,0.739,170,0.946,171,1.747,172,0.946,173,0.739,174,1.451,175,0.739,176,0.739,177,0.921,178,0.946,179,0.946,180,0.008,181,0.008,196,3.721,201,1.5,219,1.08,230,5.28,275,1.814,276,1.814,281,0.988,293,0.71,311,0.928,318,1.915,332,0.769,337,0.638,341,0.739,351,3.865,355,3.583,365,5.453,366,1.982,367,1.391,368,1.927,369,4.119,370,3.385,371,4.756,372,3.556,373,3.556,374,3.365,375,2.927,376,3.385,377,3.385,378,2.783,379,3.909,380,3.385,381,4.619,382,2.161,383,2.908,384,2.131,385,2.259,386,1.909,387,1.568,388,3.737,389,2.249,390,1.908,391,2.548,392,3.385,393,4.48,394,2.548,395,3.793,396,3.385,397,2.548,398,3.041,399,2.548,400,3.909,401,2.548,402,3.385,403,2.548,404,2.548,405,2.548,406,2.548,407,2.577,408,2.548,409,0.536,410,2.593,411,2.548,412,2.207,413,2.548,414,2.548,415,2.207,416,2.548,417,2.207,418,2.548,419,2.548,420,2.548,421,1.473,422,2.548,423,2.207,424,2.548,425,2.207,426,2.548,427,2.207,428,2.548,429,2.548,430,3.509,431,1.389,432,1.68,433,1.814,434,1.814,435,1.814,436,2.207,437,2.548,438,1.216,439,2.548,440,1.814,441,3.31,442,2.207,443,1.814,444,1.814,445,2.548,446,3.541,447,3.541,448,2.331,449,1.814,450,2.207,451,2.207,452,2.207,453,2.548,454,2.548,455,2.548,456,2.548,457,2.548,458,1.451,459,0.907,460,1.08,461,2.207,462,2.548,463,1.821,464,1.315,465,1.248,466,2.548,467,0.71,468,2.548,469,0.769,470,1.315,471,0.907,472,1.68,473,2.207,474,1.384,475,3.721,476,2.406,477,2.908,478,3.909,479,2.577,480,3.385,481,3.909,482,3.385,483,3.385,484,1.915,485,2.406]],["title/components/AttributeDictionaryEditComponent.html",[0,0.432,146,1.126]],["body/components/AttributeDictionaryEditComponent.html",[0,0.788,1,0.703,2,1.257,3,0.098,4,0.098,5,0.83,6,0.867,7,0.83,8,0.83,9,0.078,11,0.83,12,2.807,13,2.015,15,1.369,17,1.369,19,0.078,20,0.222,21,2.193,24,0.602,29,0.604,30,0.852,32,0.769,33,0.016,34,0.435,35,0.3,36,0.769,38,0.956,39,1.606,43,0.963,44,0.807,52,1.027,53,0.415,54,0.098,55,0.042,59,0.889,60,1.908,69,0.675,72,1.761,87,1.846,130,0.763,131,1.311,132,1.066,133,0.83,134,0.83,135,0.83,136,0.703,137,0.796,138,1.133,139,0.83,140,0.675,141,1.603,142,1.311,143,0.649,144,1.504,145,1.311,146,1.441,147,2.42,148,0.649,149,2.009,150,0.675,151,0.675,152,0.649,153,1.311,154,0.649,155,0.649,156,0.531,157,0.675,158,0.83,159,0.649,160,1.311,161,0.649,162,0.649,163,0.334,164,0.675,165,1.311,166,0.675,167,0.649,168,0.47,169,0.649,170,0.83,171,1.628,172,0.83,173,0.649,174,1.311,175,0.649,176,0.649,177,0.847,178,0.83,179,0.83,180,0.007,181,0.007,196,3.587,201,1.43,219,0.948,235,5.29,275,1.592,276,1.592,281,0.867,293,0.623,318,1.73,327,0.732,332,1.321,337,0.576,341,1.024,351,3.714,355,3.574,365,5.472,366,1.74,367,1.257,368,1.773,369,3.79,370,3.059,372,3.404,373,3.404,374,3.222,375,2.694,376,3.059,377,3.059,378,2.514,380,3.059,381,4.305,382,2.014,383,2.71,384,1.925,385,2.041,386,1.563,387,1.377,388,3.955,389,2.143,390,1.818,392,3.059,393,4.364,395,3.568,396,3.059,398,2.747,402,3.059,407,2.328,409,0.92,410,3.136,412,1.937,415,1.937,417,1.937,421,1.293,423,1.937,425,1.937,427,1.937,430,4.053,431,1.219,432,1.475,433,1.592,434,1.592,435,1.592,436,1.937,438,1.465,440,1.592,441,3.968,442,4.305,443,3.116,444,3.116,446,3.331,447,3.331,448,2.193,449,1.592,450,1.937,451,1.937,452,1.937,458,0.83,459,1.257,460,0.948,461,1.937,463,1.646,464,1.154,465,1.095,467,0.623,469,0.675,471,0.796,472,1.475,473,1.937,474,1.53,475,3.587,476,2.174,477,2.71,479,2.328,480,3.059,482,3.059,483,3.059,484,2.651,485,2.174,486,4.339,487,4.376,488,3.404,489,2.514,490,3.059,491,4.971,492,2.236,493,2.236,494,2.236,495,2.747,496,2.236,497,2.236,498,2.236,499,2.236,500,3.059,501,2.236,502,2.236,503,2.236,504,2.236,505,2.236,506,2.236,507,2.236,508,2.236,509,2.236,510,3.059,511,2.236,512,2.236,513,2.236,514,2.236,515,2.236,516,1.475,517,2.236,518,2.236,519,2.236,520,2.236,521,2.236,522,1.937,523,1.937,524,3.404,525,2.514,526,2.236,527,3.532,528,2.236,529,2.236,530,2.236,531,1.937,532,2.236,533,2.236,534,1.74,535,1.937,536,2.236,537,2.236,538,1.475,539,1.74,540,1.937,541,1.937,542,2.236,543,2.236,544,2.236,545,2.236,546,3.059,547,2.236,548,1.773,549,3.532]],["title/components/AttributeDictionaryListComponent.html",[0,0.432,148,1.126]],["body/components/AttributeDictionaryListComponent.html",[0,0.801,1,0.998,2,1.639,3,0.14,4,0.14,5,1.178,6,1.23,7,1.178,8,1.178,9,0.111,11,1.178,12,2.923,13,2.102,15,1.785,17,1.785,19,0.111,20,0.29,21,1.85,24,0.785,29,0.655,30,0.82,32,0.733,33,0.016,34,0.404,35,0.291,36,0.733,38,0.938,39,1.394,41,0.998,43,0.964,44,0.808,52,0.985,53,0.589,54,0.14,55,0.06,59,0.656,62,0.64,69,0.958,72,2.165,87,2.208,130,1.083,131,1.71,132,1.39,133,1.178,134,1.178,135,1.178,136,0.998,137,2.116,138,0.724,139,1.178,140,0.958,141,1.939,142,1.71,143,0.92,144,1.42,145,1.71,146,0.92,147,2.376,148,1.724,149,2.345,150,0.958,151,0.958,152,0.92,153,1.71,154,0.92,155,0.92,156,0.753,157,0.958,158,1.178,159,0.92,160,1.71,161,0.92,162,0.92,163,0.473,164,0.958,165,1.71,166,0.958,167,0.92,168,0.667,169,0.92,170,1.178,171,1.039,172,1.178,173,0.92,174,1.71,175,0.92,176,0.92,177,1.275,178,1.178,179,1.178,180,0.009,181,0.009,196,3.868,201,1.613,232,4.911,233,4.911,275,2.259,276,2.259,281,1.23,293,0.884,337,0.751,351,4.34,355,2.377,365,5.303,367,1.639,368,2.196,382,2.41,386,0.998,389,2.418,390,2.051,409,0.968,432,2.093,438,1.236,463,1.479,464,1.638,465,1.554,467,1.283,469,1.39,471,1.639,472,2.093,474,1.44,523,2.749,550,1.954,551,3.574,552,3.037,553,5.421,554,5.421,555,5.421,556,4.626,557,3.989,558,3.989,559,3.989,560,5.947,561,3.174,562,2.749,563,3.174,564,3.989,565,2.749,566,3.989,567,3.174,568,4.605,569,3.174,570,2.749,571,2.093,572,2.749,573,2.045,574,2.093,575,3.174,576,2.093,577,2.749,578,5.421,579,3.174,580,3.174,581,1.954,582,3.174,583,1.929,584,3.174,585,2.259,586,2.469,587,4.605,588,3.859,589,3.174,590,2.013,591,2.469,592,3.174,593,1.834,594,3.174,595,2.749,596,3.174,597,4.605,598,4.605,599,4.605,600,4.605]],["title/injectables/AttributeDictionaryService.html",[196,2.117,286,0.998]],["body/injectables/AttributeDictionaryService.html",[3,0.129,4,0.129,9,0.103,14,1.244,19,0.103,20,0.273,24,0.976,29,0.707,30,0.787,32,0.817,33,0.016,34,0.385,35,0.287,36,0.817,38,1.055,41,0.922,43,0.773,44,0.648,52,1.062,53,0.545,54,0.129,55,0.056,59,0.97,60,1.118,70,2.676,72,2.126,88,1.931,138,1.77,144,1.479,177,0.841,180,0.008,181,0.008,196,2.37,201,1.574,216,1.303,286,1.118,293,0.817,327,0.961,331,1.714,337,0.709,341,1.974,351,4.089,389,2.359,390,2.001,409,1.487,432,1.934,438,1.306,459,1.547,467,1.784,471,1.547,472,1.934,474,1.79,490,3.765,500,3.765,548,1.761,557,3.765,558,3.765,564,3.765,566,3.765,583,1.547,590,1.614,601,1.437,602,6.216,603,2.541,604,2.3,605,2.413,606,4.347,607,3.095,608,5.727,609,4.347,610,1.599,611,2.669,612,4.347,613,2.543,614,2.934,615,2.676,616,3.943,617,2.513,618,2.513,619,4.347,620,2.934,621,2.243,622,3.776,623,3.558,624,2.934,625,2.129,626,2.513,627,3.095,628,2.676,629,2.934,630,2.37,631,2.943,632,2.243,633,2.513,634,2.008,635,3.095,636,2.413,637,2.934,638,2.956,639,5.727,640,2.934,641,2.866,642,2.866,643,4.347,644,2.934,645,2.129,646,2.956,647,2.805,648,2.026,649,2.413,650,2.669,651,3.765,652,4.455,653,3.525,654,4.455,655,3.381,656,3.765,657,2.934,658,2.243,659,1.437,660,1.437,661,1.806,662,1.303,663,1.437,664,1.806,665,1.367,666,2.995,667,2.129,668,5.727,669,2.995,670,4.757,671,3.089,672,2.805,673,1.437,674,2.282,675,2.934,676,1.806,677,1.806,678,2.934,679,1.437,680,1.934,681,1.934,682,1.934,683,2.934,684,1.934,685,1.303,686,2.541,687,4.078,688,1.599,689,2.089,690,2.089,691,2.089,692,1.514,693,2.089,694,1.367,695,2.089]],["title/injectables/AttributeService.html",[197,2.56,286,0.998]],["body/injectables/AttributeService.html",[0,0.625,3,0.093,4,0.093,9,0.074,13,0.908,14,0.901,19,0.074,20,0.213,24,0.578,29,0.725,30,0.788,32,0.843,33,0.016,34,0.411,35,0.284,36,0.854,38,1.069,41,0.668,43,0.753,44,0.787,52,1.051,53,0.394,54,0.093,55,0.04,59,1.018,60,1.518,62,0.854,70,4.688,88,1.506,137,1.506,138,1.764,144,1.489,163,1.034,177,0.656,180,0.007,181,0.007,197,2.236,199,2.392,201,1.401,202,1.957,216,0.944,286,0.872,293,0.592,311,1.146,320,3.665,327,0.696,331,1.771,337,0.553,341,1.712,389,2.101,390,1.782,409,1.416,432,1.401,438,1.441,458,2.192,459,1.207,467,1.567,469,1.908,471,1.207,472,2.236,474,1.805,548,1.374,583,1.207,590,1.259,601,1.041,604,1.879,605,1.972,607,2.414,610,1.158,611,2.251,613,2.145,615,2.087,616,2.973,617,1.96,618,1.96,621,1.75,622,3.185,623,3.47,625,1.661,626,1.96,627,2.414,628,2.087,630,1.849,631,2.998,632,1.75,634,1.64,635,2.414,636,1.972,638,3.577,641,2.236,642,2.236,645,1.661,646,2.493,647,2.585,648,1.58,649,1.972,650,1.58,658,1.75,659,1.041,660,1.041,661,1.308,662,0.944,663,1.041,664,1.308,665,0.99,666,3.003,667,2.585,669,2.585,671,3.229,672,3.003,673,1.041,676,1.308,677,1.308,679,1.041,680,1.401,681,1.401,682,1.401,684,1.401,687,3.439,688,1.158,689,1.513,690,1.513,691,1.513,692,1.097,693,1.513,694,1.58,695,1.513,696,1.84,697,3.391,698,3.391,699,3.391,700,3.391,701,4.83,702,4.83,703,3.391,704,3.391,705,3.391,706,3.391,707,2.087,708,3.391,709,3.665,710,3.391,711,3.391,712,2.125,713,3.391,714,2.125,715,3.391,716,2.125,717,2.125,718,2.633,719,3.391,720,2.125,721,2.125,722,2.855,723,3.746,724,2.125,725,2.937,726,3.391,727,6.48,728,2.125,729,4.83,730,4.83,731,1.849,732,2.937,733,3.391,734,3.391,735,2.125,736,3.391,737,2.125,738,2.937,739,3.757,740,3.391,741,3.391,742,2.125,743,1.75,744,2.756,745,2.724,746,2.125,747,1.849,748,2.878,749,1.58,750,1.158,751,3.391,752,2.125,753,2.125,754,1.653,755,1.513,756,1.513,757,1.84,758,1.041,759,2.125,760,2.125,761,4.231,762,3.391,763,1.401,764,2.125,765,2.125,766,2.125,767,4.231,768,2.125,769,1.84,770,3.391,771,2.125,772,2.125,773,2.184,774,2.125,775,3.665,776,2.125,777,4.231,778,2.937,779,4.231,780,2.937,781,2.125,782,3.391,783,2.125,784,2.125,785,2.125,786,2.125,787,2.125,788,3.391,789,1.513,790,2.125,791,2.125,792,2.125,793,1.097,794,1.84,795,2.125,796,1.158]],["title/classes/Bug.html",[55,0.073,797,3.02]],["body/classes/Bug.html",[3,0.257,4,0.257,9,0.205,19,0.205,20,0.433,29,0.736,30,0.841,33,0.016,35,0.289,54,0.257,55,0.111,180,0.013,181,0.013,329,2.079,337,1.195,474,1.67,797,5.358,798,5.059,799,7.325,800,7.325,801,6.888,802,5.842,803,5.842,804,5.059,805,5.842,806,5.842]],["title/classes/ComponentDictionary.html",[55,0.073,372,2.117]],["body/classes/ComponentDictionary.html",[3,0.205,4,0.205,9,0.163,19,0.163,20,0.377,21,2.528,24,1.022,29,0.74,30,0.823,32,0.739,33,0.016,34,0.459,35,0.262,36,0.739,38,1.031,39,1.2,43,0.83,44,0.696,54,0.264,55,0.088,59,0.996,62,0.942,100,1.467,132,1.811,144,1.113,156,1.424,163,0.895,177,1.283,180,0.012,181,0.012,311,1.424,329,1.661,331,2.094,353,3.323,359,4.042,372,3.27,807,5.859,808,5.195,809,5.195,810,4.044,811,4.044,812,5.488,813,4.667,814,3.955,815,4.667,816,4.613,817,3.955,818,4.667,819,3.692,820,4.667,821,4.667,822,0.903,823,3.077,824,3.467,825,2.698,826,2.698,827,3.077,828,3.077,829,4.042]],["title/interfaces/ComponentDictionaryItem.html",[812,2.764,822,0.751]],["body/interfaces/ComponentDictionaryItem.html",[3,0.232,4,0.232,9,0.185,19,0.185,20,0.407,21,2.21,29,0.745,33,0.016,34,0.457,35,0.255,54,0.285,55,0.1,59,1.041,62,1.063,100,1.657,132,1.955,144,0.978,156,1.251,163,0.786,177,1.02,180,0.013,181,0.013,311,1.251,331,2.107,353,3.752,372,2.873,807,4.099,810,3.046,811,3.046,812,5.437,814,3.475,816,4.62,817,3.475,819,3.244,822,1.02,823,3.475,824,3.742,825,3.046,826,3.046,827,3.475,828,3.475,829,4.564,830,2.234]],["title/classes/Connection.html",[55,0.073,156,0.921]],["body/classes/Connection.html",[3,0.237,4,0.237,9,0.189,19,0.189,20,0.413,29,0.754,30,0.84,32,0.665,33,0.016,34,0.438,35,0.298,36,0.665,54,0.289,55,0.102,68,3.796,156,1.793,180,0.013,181,0.013,329,1.92,331,1.444,332,2.224,337,0.88,345,2.642,354,3.796,361,2.396,750,2.941,822,1.044,831,4.196,832,5.108,833,5.246,834,5.246,835,5.688,836,5.246,837,6.567,838,5.395,839,5.395,840,5.395,841,4.672,842,4.672,843,4.672,844,4.672,845,4.672,846,4.672]],["title/components/ConnectionAddComponent.html",[0,0.432,152,1.126]],["body/components/ConnectionAddComponent.html",[0,0.62,1,0.874,2,1.486,3,0.122,4,0.122,5,1.032,6,1.078,7,1.032,8,1.032,9,0.097,11,1.032,12,2.883,13,2.072,15,1.619,17,1.619,19,0.097,20,0.263,24,0.712,29,0.591,30,0.851,32,0.803,33,0.016,34,0.444,35,0.28,36,0.803,38,0.994,39,1.723,43,0.992,44,0.832,52,1.089,53,0.516,54,0.122,55,0.053,59,0.894,60,1.537,62,0.561,69,0.839,72,1.118,87,2.071,130,0.949,131,1.551,132,1.261,133,1.032,134,1.032,135,1.032,136,0.874,137,0.989,138,0.634,139,1.032,140,0.839,141,2.089,142,1.551,143,0.806,144,1.035,145,1.551,146,0.806,147,2.143,148,0.806,149,2.22,150,0.839,151,0.839,152,1.617,153,1.551,154,0.806,155,0.806,156,1.809,157,0.839,158,1.032,159,0.806,160,1.551,161,0.806,162,0.806,163,1.103,164,0.839,165,1.551,166,0.839,167,0.806,168,0.584,169,0.806,170,1.032,171,1.826,172,1.032,173,0.806,174,1.551,175,0.806,176,0.806,177,0.971,178,1.032,179,1.032,180,0.008,181,0.008,199,2.639,201,1.546,219,1.178,243,5.068,278,1.435,281,1.078,293,0.774,318,2.046,335,2.973,337,0.681,341,0.806,367,1.486,368,2.032,372,3.653,375,3.088,378,2.973,382,2.26,383,3.041,384,2.277,385,2.414,386,0.874,387,1.711,388,3.865,389,2.318,390,1.966,393,4.421,395,3.677,398,3.249,407,2.754,409,0.878,410,2.735,421,1.607,431,1.516,433,1.979,438,1.432,440,1.979,441,3.041,443,1.979,444,1.979,446,3.433,447,3.433,448,2.26,449,1.979,458,1.032,459,0.989,460,1.178,463,1.295,464,1.435,465,1.362,467,0.774,469,0.839,470,1.435,471,0.989,474,1.528,475,3.423,477,2.277,479,2.754,484,2.046,485,2.571,489,2.973,495,3.249,516,1.833,539,2.162,593,1.607,617,1.607,758,1.362,833,3.97,834,3.97,847,6.656,848,2.162,849,4.344,850,3.617,851,5.016,852,2.735,853,3.617,854,3.617,855,5.577,856,3.97,857,3.617,858,4.009,859,3.617,860,4.176,861,2.78,862,4.176,863,2.78,864,2.78,865,2.78,866,2.78,867,2.78,868,3.617,869,2.78,870,2.408,871,2.78,872,2.78,873,2.78,874,2.78,875,2.78,876,2.78,877,2.78,878,2.78,879,2.78,880,2.408,881,2.78,882,2.408,883,2.78,884,1.979,885,2.571,886,2.162,887,1.979,888,2.78,889,2.78,890,2.78,891,2.162,892,2.78,893,2.78,894,2.78,895,2.78,896,2.78,897,2.78,898,2.162,899,2.408,900,2.408,901,1.833,902,2.78,903,2.78,904,2.78,905,2.78,906,2.162,907,2.408,908,4.176,909,3.617,910,2.277,911,3.617,912,3.617,913,3.617,914,4.176]],["title/components/ConnectionEditComponent.html",[0,0.432,154,1.126]],["body/components/ConnectionEditComponent.html",[0,0.693,1,0.772,2,1.352,3,0.108,4,0.108,5,0.912,6,0.952,7,0.912,8,0.912,9,0.086,11,0.912,12,2.841,13,2.04,15,1.473,17,1.473,19,0.086,20,0.239,21,2.042,24,0.648,29,0.636,30,0.851,32,0.573,33,0.016,34,0.434,35,0.267,36,0.573,38,0.806,39,1.455,43,1.11,44,1.067,52,1.055,53,0.456,54,0.108,55,0.046,59,0.942,60,1.701,62,1.3,69,0.741,72,1.017,87,1.942,130,0.838,131,1.411,132,1.147,133,0.912,134,0.912,135,0.912,136,0.772,137,1.861,138,1.193,139,0.912,140,0.741,141,1.666,142,1.411,143,0.712,144,0.971,145,1.411,146,0.712,147,2.466,148,0.712,149,2.1,150,0.741,151,0.741,152,0.712,153,1.411,154,1.517,155,0.712,156,1.767,157,0.741,158,0.912,159,0.712,160,1.411,161,0.712,162,0.712,163,1.008,164,0.741,165,1.411,166,0.741,167,0.712,168,0.516,169,0.712,170,0.912,171,0.804,172,0.912,173,0.712,174,1.411,175,0.712,176,0.712,177,0.475,178,0.912,179,0.912,180,0.007,181,0.007,199,2.527,201,1.481,219,1.041,248,5.062,278,1.267,281,0.952,293,0.684,318,1.861,327,0.804,332,1.147,333,4.53,337,0.62,341,1.348,364,2.196,367,1.352,368,1.883,372,3.513,375,2.861,378,3.309,382,2.119,383,2.852,384,2.072,385,2.196,386,1.644,387,1.512,388,4.072,389,2.22,390,1.883,393,3.22,395,3.449,407,2.505,409,1.1,410,2.852,421,1.42,430,3.27,431,1.339,433,1.749,438,1.469,441,2.852,443,1.749,444,1.749,446,3.22,447,3.22,448,2.119,449,1.749,458,1.726,459,1.352,460,1.041,467,0.684,469,0.741,471,0.874,474,1.29,475,3.261,477,2.072,479,3.449,484,3.055,485,2.339,486,4.456,488,3.615,489,3.309,516,1.619,522,2.127,524,3.615,525,1.749,531,2.127,540,2.127,541,2.127,546,4.025,548,1.883,581,1.512,758,1.203,804,2.127,833,4.027,834,4.027,848,1.91,849,4.025,850,3.291,852,2.534,853,4.025,854,4.025,856,3.724,858,3.839,859,2.127,870,2.127,880,2.127,882,2.127,886,1.91,887,1.749,891,1.91,898,1.91,899,2.127,900,2.127,901,1.619,906,1.91,907,2.127,909,3.291,910,2.852,911,3.291,912,3.291,913,3.291,915,6.649,916,4.025,917,3.291,918,4.647,919,3.8,920,3.291,921,2.456,922,2.456,923,2.456,924,2.456,925,2.456,926,2.456,927,2.456,928,2.456,929,2.456,930,2.456,931,2.456,932,2.456,933,2.456,934,2.456,935,2.456,936,2.456,937,2.456,938,2.456,939,2.456,940,2.456,941,2.456,942,2.456,943,3.8,944,2.956,945,3.8,946,3.291,947,2.456,948,4.647,949,2.456,950,2.456,951,2.456,952,2.456,953,2.456,954,2.456,955,2.456,956,4.647,957,2.127,958,2.456,959,2.456,960,2.456,961,2.456,962,2.456,963,2.456,964,2.456,965,2.456,966,2.127,967,2.456,968,2.456,969,3.724,970,2.456,971,2.456,972,2.456,973,2.456,974,3.8,975,3.8,976,3.8,977,3.8,978,3.8,979,3.8,980,3.8,981,3.8,982,2.505]],["title/interfaces/ConnectionInterface.html",[822,0.751,836,2.764]],["body/interfaces/ConnectionInterface.html",[3,0.243,4,0.243,9,0.194,19,0.194,20,0.419,29,0.765,33,0.016,34,0.441,35,0.293,54,0.293,55,0.105,68,3.198,156,1.583,180,0.013,181,0.013,332,2.296,345,2.71,354,3.198,361,2.457,822,1.071,830,2.346,831,4.304,832,4.304,833,5.415,834,5.415,835,4.792,836,5.097,841,4.792,842,4.792,843,4.792,844,4.792,845,4.792,846,4.792]],["title/components/ConnectionListComponent.html",[0,0.432,155,1.126]],["body/components/ConnectionListComponent.html",[0,0.76,1,0.935,2,1.563,3,0.131,4,0.131,5,1.104,6,1.153,7,1.104,8,1.104,9,0.104,11,1.104,12,2.904,13,2.087,15,1.703,17,1.703,19,0.104,20,0.276,21,1.782,24,0.748,29,0.698,30,0.838,32,0.793,33,0.016,34,0.412,35,0.287,36,0.793,38,0.994,39,1.483,41,0.935,43,1.094,44,0.917,52,1.039,53,0.552,54,0.131,55,0.056,59,0.821,60,1.343,62,0.6,69,0.898,72,0.796,73,2.975,77,2.151,86,2.576,87,2.141,90,2.576,91,2.576,130,1.015,131,1.631,132,1.326,133,1.104,134,1.104,135,1.104,136,0.935,137,2.052,138,0.678,139,1.104,140,0.898,141,1.904,142,1.631,143,0.862,144,1.07,145,1.631,146,0.862,147,2.197,148,0.862,149,2.284,150,0.898,151,0.898,152,0.862,153,1.631,154,0.862,155,1.672,156,1.861,157,0.898,158,1.104,159,0.862,160,1.631,161,0.862,162,0.862,163,1.142,164,0.898,165,1.631,166,0.898,167,0.862,168,0.625,169,0.862,170,1.104,171,0.974,172,1.104,173,0.862,174,1.631,175,0.862,176,0.862,177,1.246,178,1.104,179,1.104,180,0.008,181,0.008,199,2.698,201,1.58,246,4.997,278,1.535,281,1.153,293,0.828,335,3.717,337,0.716,367,1.563,368,2.115,382,2.336,386,0.935,389,2.37,390,2.01,409,0.923,438,1.315,463,1.386,464,2.266,465,2.151,467,1.223,469,1.326,471,1.058,474,1.591,550,1.831,551,3.442,552,2.896,556,4.485,570,2.576,571,1.961,573,1.95,574,1.961,576,1.961,583,1.058,586,3.416,588,3.717,590,1.104,591,2.313,593,2.538,758,1.457,852,2.847,856,4.105,857,3.803,858,4.296,868,3.803,886,2.313,887,2.117,891,2.313,898,2.313,901,1.961,906,2.313,983,6.564,984,5.221,985,5.221,986,5.221,987,3.803,988,3.803,989,4.392,990,4.392,991,5.766,992,2.974,993,2.576,994,2.576,995,3.803,996,2.974,997,3.803,998,2.974,999,4.392,1000,2.576,1001,4.392,1002,2.974,1003,2.974,1004,2.974,1005,2.974,1006,2.313,1007,2.576,1008,2.313,1009,5.221,1010,2.974,1011,2.974,1012,2.974,1013,2.313,1014,2.576,1015,2.576,1016,4.392,1017,2.974,1018,2.974,1019,2.974,1020,2.974,1021,4.392,1022,4.392,1023,4.392,1024,4.392,1025,4.392,1026,4.392,1027,2.974,1028,2.974]],["title/injectables/ConnectionService.html",[286,0.998,858,2.39]],["body/injectables/ConnectionService.html",[3,0.126,4,0.126,9,0.1,13,1.144,14,1.215,19,0.1,20,0.269,24,0.728,29,0.713,30,0.794,32,0.852,33,0.016,34,0.408,35,0.295,36,0.867,38,1.059,41,0.901,43,0.909,44,0.903,52,1.098,53,0.532,54,0.126,55,0.054,59,1.03,60,1.099,62,0.578,73,3.566,88,1.898,138,1.79,156,1.906,177,0.827,180,0.008,181,0.008,201,1.562,216,1.273,286,1.099,293,0.798,327,0.939,331,1.761,337,0.697,341,1.239,386,0.901,389,2.341,390,1.986,409,1.52,438,1.5,459,1.521,467,1.769,469,2.124,471,1.521,474,1.786,548,1.731,583,1.521,590,1.587,601,1.404,604,2.269,605,2.38,607,3.042,610,1.563,611,2.638,613,2.515,615,2.63,616,3.485,617,2.953,618,2.47,621,2.205,622,3.733,623,3.446,625,2.093,626,2.47,627,3.042,628,2.63,630,2.33,631,3.054,632,2.205,634,2.551,635,3.042,636,2.38,638,2.922,641,2.817,642,2.817,645,2.093,646,2.922,647,2.093,648,1.991,649,2.38,650,1.991,658,2.205,659,1.404,660,1.404,661,1.764,662,1.273,663,1.404,664,1.764,665,1.336,666,2.966,667,2.093,669,2.966,670,3.324,671,3.22,672,2.773,673,1.404,676,1.764,677,1.764,679,1.404,680,1.89,681,1.89,682,1.89,684,1.89,687,4.031,688,1.563,689,2.041,690,2.041,691,2.041,692,1.479,693,2.041,694,1.991,695,2.041,707,2.63,718,2.33,743,2.205,744,3.111,745,3.125,747,2.33,748,3.087,749,1.991,750,1.563,789,2.041,793,1.479,796,1.563,858,2.63,884,2.041,885,3.145,887,2.041,917,3.701,920,3.701,987,3.701,988,3.701,995,3.701,997,3.701,1029,2.482,1030,4.273,1031,5.662,1032,4.273,1033,4.273,1034,2.866,1035,4.273,1036,2.866,1037,2.866,1038,2.866,1039,2.866,1040,2.866,1041,2.866,1042,4.273,1043,2.866,1044,2.866,1045,3.324,1046,2.866,1047,2.866,1048,4.424,1049,2.866,1050,2.482,1051,2.482,1052,2.866,1053,2.482,1054,2.866,1055,4.273,1056,2.866,1057,2.482]],["title/injectables/CustomErrorHandler.html",[198,2.56,286,0.998]],["body/injectables/CustomErrorHandler.html",[3,0.253,4,0.253,9,0.202,14,2.443,19,0.202,24,1.165,30,0.641,32,0.71,33,0.016,34,0.334,35,0.227,36,0.71,38,0.821,39,1.757,52,0.899,53,1.07,54,0.253,55,0.109,180,0.013,181,0.013,198,4.506,286,1.757,367,2.051,467,1.606,601,2.823,631,3.192,665,2.686,773,2.974,910,3.142,1058,4.992,1059,5.918,1060,4.506,1061,5.764,1062,6.833,1063,2.56,1064,5.764,1065,5.764,1066,5.764,1067,5.764,1068,5.764,1069,5.764,1070,5.764,1071,3.8,1072,3.8,1073,3.8]],["title/classes/Device.html",[55,0.073,163,0.579]],["body/classes/Device.html",[3,0.201,4,0.201,9,0.16,19,0.16,20,0.372,24,1.007,29,0.752,30,0.818,32,0.562,33,0.016,34,0.449,35,0.283,36,0.562,38,0.65,41,2.062,43,1.167,44,0.978,54,0.288,55,0.112,59,0.65,60,1.52,62,1.399,95,3.726,100,2.314,141,1.647,163,1.098,180,0.011,181,0.011,329,1.624,332,2.094,336,4.221,337,1.132,345,2.235,347,3.249,361,2.625,384,4.014,409,0.959,448,2.395,460,1.934,474,1.04,573,2.912,634,1.769,685,3.08,749,2.126,750,3.575,822,1.144,1074,3.009,1075,4.598,1076,5.911,1077,4.563,1078,4.563,1079,4.563,1080,3.397,1081,3.397,1082,4.563,1083,3.009,1084,3.549,1085,3.249,1086,3.549,1087,3.549,1088,4.209,1089,4.209,1090,3.249,1091,3.249,1092,4.598,1093,3.549,1094,3.549,1095,3.549,1096,3.898,1097,3.549,1098,3.549,1099,3.549,1100,3.249,1101,3.549,1102,3.549,1103,3.549,1104,3.549,1105,3.549,1106,3.549]],["title/components/DeviceAddComponent.html",[0,0.432,159,1.126]],["body/components/DeviceAddComponent.html",[0,0.588,1,0.789,2,1.374,3,0.11,4,0.11,5,0.931,6,0.972,7,0.931,8,0.931,9,0.088,11,0.931,12,2.848,13,2.046,15,1.497,17,1.497,19,0.088,20,0.243,21,1.607,24,0.658,29,0.363,30,0.856,32,0.775,33,0.016,34,0.44,35,0.284,36,0.775,38,0.968,39,1.712,43,1.073,44,0.9,52,1.095,53,0.466,54,0.11,55,0.047,59,0.924,60,1.966,69,0.757,72,0.671,87,1.964,95,1.8,130,0.856,131,1.434,132,1.166,133,0.931,134,0.931,135,0.931,136,0.789,137,0.893,138,0.572,139,0.931,140,0.757,141,2.054,142,1.434,143,0.727,144,0.982,145,1.434,146,0.727,147,2.059,148,0.727,149,2.121,150,0.757,151,0.757,152,0.727,153,1.434,154,0.727,155,0.727,156,0.595,157,0.757,158,0.931,159,1.534,160,1.434,161,0.727,162,0.727,163,1.047,164,0.757,165,1.434,166,0.757,167,0.727,168,0.527,169,0.727,170,0.931,171,0.821,172,0.931,173,0.727,174,1.434,175,0.727,176,0.727,177,0.748,178,0.931,179,0.931,180,0.007,181,0.007,199,2.314,201,1.492,202,2.143,219,1.063,250,5.09,278,1.294,281,0.972,282,1.294,293,0.699,311,1.687,318,1.892,336,3.114,337,0.63,341,1.366,367,1.374,368,1.908,373,3.538,374,3.348,375,2.899,382,2.143,383,2.884,384,2.106,385,2.232,386,0.789,387,1.544,388,3.714,389,2.237,390,1.898,393,4.467,395,3.766,407,2.547,409,1.112,410,3.114,421,1.45,430,3.633,431,1.368,434,1.786,435,1.786,438,1.302,441,3.706,446,3.516,447,3.516,448,2.314,459,0.893,467,0.699,469,0.757,470,1.294,471,0.893,474,1.433,475,3.706,476,2.377,477,2.106,484,1.892,489,2.75,495,3.004,516,1.654,539,1.951,573,2.679,581,1.544,636,1.8,685,3.071,709,4.079,758,1.229,982,3.105,1080,3.388,1081,3.388,1107,6.686,1108,1.951,1109,4.079,1110,3.345,1111,4.709,1112,4.067,1113,3.353,1114,3.862,1115,3.862,1116,3.862,1117,3.862,1118,5.29,1119,3.766,1120,2.508,1121,3.862,1122,2.508,1123,2.508,1124,3.862,1125,2.508,1126,3.862,1127,2.508,1128,3.862,1129,2.508,1130,2.508,1131,2.508,1132,2.172,1133,2.508,1134,4.709,1135,2.172,1136,2.75,1137,5.225,1138,6.033,1139,2.508,1140,2.508,1141,2.172,1142,2.508,1143,2.172,1144,2.172,1145,2.172,1146,2.508,1147,3.766,1148,2.508,1149,2.508,1150,2.508,1151,2.172,1152,2.508,1153,2.172,1154,2.508,1155,2.172,1156,2.508,1157,2.172,1158,2.508,1159,2.75,1160,1.786,1161,1.294,1162,2.172,1163,1.786,1164,2.508,1165,1.951,1166,2.508,1167,2.508,1168,2.508,1169,2.508,1170,2.508,1171,2.508,1172,2.508,1173,2.508,1174,2.508,1175,2.508,1176,2.508,1177,2.172,1178,2.508,1179,2.508,1180,2.508,1181,2.508,1182,2.508,1183,2.508,1184,2.508,1185,2.508,1186,2.172,1187,2.508,1188,2.508,1189,2.508,1190,2.172,1191,2.508,1192,2.172,1193,6.033,1194,3.345,1195,3.862,1196,3.004,1197,3.345]],["title/classes/DeviceCategory.html",[55,0.073,1198,2.764]],["body/classes/DeviceCategory.html",[3,0.219,4,0.219,9,0.174,19,0.174,20,0.393,21,2.331,29,0.719,30,0.695,33,0.016,34,0.443,35,0.247,43,1.112,44,0.932,54,0.275,55,0.118,59,1.02,73,3.225,113,2.715,168,1.047,177,0.964,180,0.012,181,0.012,329,1.772,331,2.046,373,2.715,409,1.583,585,3.545,810,2.878,811,2.878,824,3.948,825,2.878,826,3.612,1198,5.254,1199,3.873,1200,4.979,1201,4.979,1202,4.312,1203,5.413,1204,5.413,1205,4.312,1206,4.312,1207,4.312,1208,4.312,1209,4.312,1210,6.204,1211,4.312,1212,4.312,1213,4.312,1214,3.873,1215,4.312,1216,3.873,1217,4.312,1218,3.873,1219,4.312,1220,3.873,1221,4.312,1222,4.312,1223,4.312,1224,4.312,1225,5.916,1226,4.312,1227,4.312,1228,4.312,1229,4.312,1230,4.312,1231,4.312,1232,4.312,1233,4.312,1234,4.312,1235,4.312,1236,4.312,1237,4.312,1238,4.312,1239,4.312,1240,4.312,1241,4.312,1242,4.312,1243,4.312,1244,4.312,1245,4.312,1246,4.312,1247,4.312,1248,4.312,1249,5.413,1250,4.312]],["title/classes/DeviceCategoryDict.html",[55,0.073,373,2.117]],["body/classes/DeviceCategoryDict.html",[3,0.189,4,0.189,9,0.151,19,0.151,20,0.358,21,2.59,24,0.969,29,0.714,30,0.784,32,0.53,33,0.016,34,0.445,35,0.224,36,0.53,38,0.965,43,0.765,44,0.641,54,0.25,55,0.108,59,0.965,73,3.498,113,3.1,168,1.195,177,1.233,180,0.011,181,0.011,329,1.53,331,2.031,373,3.1,409,1.634,585,4.048,810,3.918,811,3.918,824,3.682,825,2.485,826,3.287,1013,3.345,1198,5.403,1199,3.345,1202,4.924,1203,5.871,1204,5.871,1205,4.924,1206,4.924,1207,4.924,1208,4.924,1209,4.924,1210,6.495,1211,4.924,1212,4.924,1213,4.924,1214,4.423,1215,4.924,1216,4.423,1217,4.924,1218,4.423,1219,4.924,1220,4.423,1221,4.924,1222,4.924,1223,4.924,1224,4.924,1225,6.272,1226,4.924,1227,4.924,1228,4.924,1229,4.924,1230,4.924,1231,4.924,1232,4.924,1233,4.924,1234,4.924,1235,4.924,1236,4.924,1237,4.924,1238,4.924,1239,4.924,1240,4.924,1241,4.924,1242,4.924,1243,4.924,1244,4.924,1245,4.924,1246,4.924,1247,5.871,1248,4.924,1249,5.871,1250,3.724,1251,5.686,1252,4.3,1253,4.3,1254,4.3,1255,4.3,1256,4.3]],["title/components/DeviceEditComponent.html",[0,0.432,161,1.126]],["body/components/DeviceEditComponent.html",[0,0.713,1,0.836,2,1.437,3,0.117,4,0.117,5,0.987,6,1.03,7,0.987,8,0.987,9,0.093,11,0.987,12,2.868,13,2.061,15,1.565,17,1.565,19,0.093,20,0.254,21,2.107,24,0.688,29,0.603,30,0.846,32,0.328,33,0.016,34,0.443,35,0.277,36,0.328,38,0.776,39,1.508,41,1.535,43,0.97,44,0.874,52,1.077,53,0.493,54,0.117,55,0.05,59,0.879,60,1.829,62,1.1,69,0.802,72,0.711,77,1.977,87,2.024,95,2.54,109,2.302,130,0.907,131,1.499,132,1.219,133,0.987,134,0.987,135,0.987,136,0.836,137,2.283,138,0.606,139,0.987,140,0.802,141,1.719,142,1.499,143,0.771,144,1.012,145,1.499,146,0.771,147,2.504,148,0.771,149,2.177,150,0.802,151,0.802,152,0.771,153,1.499,154,0.771,155,0.771,156,0.631,157,0.802,158,0.987,159,0.771,160,1.499,161,1.581,162,0.771,163,1.135,164,0.802,165,1.499,166,0.802,167,0.771,168,0.559,169,0.771,170,0.987,171,0.87,172,0.987,173,0.771,174,1.499,175,0.771,176,0.771,177,0.781,178,0.987,179,0.987,180,0.008,181,0.008,199,2.375,201,1.523,202,2.599,219,1.127,255,5.039,278,1.372,281,1.03,282,1.372,293,0.74,311,1.465,327,0.87,332,1.646,336,3.196,337,0.659,341,1.171,364,1.536,367,1.437,368,1.978,382,2.209,383,2.972,385,2.334,386,0.836,390,1.937,409,0.559,410,3.196,421,1.536,430,3.151,431,1.449,438,1.113,441,3.365,458,0.987,460,1.127,467,0.74,469,0.802,474,1.543,475,3.878,476,3.356,477,2.972,484,1.302,485,2.485,486,4.463,525,1.892,548,2.209,631,2.743,653,1.636,679,1.302,685,2.849,758,1.302,773,2.519,775,4.228,916,3.496,944,3.14,946,2.302,969,3.881,982,3.865,1045,2.068,1063,1.793,1080,3.142,1081,3.142,1108,2.068,1109,4.228,1110,3.496,1112,4.174,1113,3.475,1119,3.881,1132,2.302,1135,2.302,1136,1.892,1137,4.228,1141,2.302,1143,2.302,1144,2.302,1145,2.302,1147,4.07,1151,2.302,1153,2.302,1155,2.302,1157,2.302,1161,1.372,1162,2.302,1163,1.892,1165,2.068,1194,3.496,1257,6.618,1258,4.228,1259,4.228,1260,6.769,1261,4.228,1262,5.451,1263,2.658,1264,4.037,1265,2.658,1266,2.658,1267,2.658,1268,2.658,1269,2.658,1270,2.658,1271,2.658,1272,4.228,1273,2.658,1274,2.658,1275,2.658,1276,2.658,1277,2.658,1278,2.658,1279,2.658,1280,3.496,1281,2.658,1282,4.037,1283,2.658,1284,2.658,1285,2.658,1286,2.658,1287,2.658,1288,2.658,1289,2.658,1290,2.658,1291,4.721,1292,2.658,1293,4.037,1294,2.658,1295,2.658,1296,2.658,1297,2.658,1298,2.658,1299,2.658,1300,2.658,1301,2.658,1302,2.302,1303,2.658,1304,2.658,1305,2.658,1306,2.658,1307,2.658,1308,4.037,1309,2.658,1310,1.636,1311,2.658,1312,2.658,1313,2.068,1314,2.658,1315,2.658,1316,2.658,1317,2.658,1318,2.658,1319,2.658,1320,4.037,1321,4.881,1322,2.658,1323,2.658,1324,2.658,1325,2.658,1326,2.658]],["title/interfaces/DeviceInterface.html",[822,0.751,1083,2.56]],["body/interfaces/DeviceInterface.html",[3,0.214,4,0.214,9,0.17,19,0.17,20,0.387,29,0.753,33,0.016,34,0.451,35,0.28,41,2.124,54,0.297,55,0.116,59,0.692,60,1.583,62,1.433,95,3.729,100,2.124,141,1.715,163,1.093,180,0.012,181,0.012,332,2.212,336,4.233,337,1.102,345,2.381,347,3.46,361,2.734,384,3.683,409,1.022,448,2.494,460,2.06,474,1.108,573,3,634,1.884,685,3,749,2.265,822,1.191,830,2.06,1074,3.205,1075,3.781,1080,3.309,1081,3.309,1083,4.059,1084,3.781,1085,3.46,1086,3.781,1087,3.781,1088,4.382,1089,4.382,1090,3.46,1091,3.46,1092,4.788,1093,3.781,1094,3.781,1095,3.781,1096,4.059,1097,3.781,1098,3.781,1099,3.781,1100,3.46,1101,3.781,1102,3.781,1103,3.781,1104,3.781,1105,3.781,1106,3.781]],["title/classes/DeviceList.html",[55,0.073,852,2.117]],["body/classes/DeviceList.html",[3,0.247,4,0.247,9,0.197,19,0.197,20,0.423,24,1.147,30,0.831,32,0.693,33,0.016,34,0.326,35,0.266,36,0.693,38,1.027,39,1.731,43,1,44,0.838,52,0.877,54,0.247,55,0.106,59,0.801,163,1.193,180,0.013,181,0.013,329,2.001,852,4.164,901,3.707,1327,4.869,1328,7.471,1329,5.831,1330,5.622,1331,5.622,1332,5.622,1333,6.733,1334,5.622,1335,5.622,1336,5.622,1337,5.622]],["title/components/DeviceListComponent.html",[0,0.432,162,1.126]],["body/components/DeviceListComponent.html",[0,0.745,1,0.873,2,1.485,3,0.122,4,0.122,5,1.031,6,1.077,7,1.031,8,1.031,9,0.097,11,1.031,12,2.883,13,2.071,15,1.618,17,1.618,19,0.097,20,0.262,24,0.711,29,0.696,30,0.828,32,0.774,33,0.016,34,0.411,35,0.28,36,0.774,38,0.994,39,1.434,41,0.873,43,0.992,44,0.831,52,1.016,53,0.516,54,0.122,55,0.053,59,0.851,62,0.56,68,3.961,69,0.839,72,0.744,87,2.07,95,1.945,130,0.948,131,1.55,132,1.26,133,1.031,134,1.031,135,1.031,136,0.873,137,2.484,138,0.633,139,1.031,140,0.839,141,1.866,142,1.55,143,0.806,144,1.035,145,1.55,146,0.806,147,2.142,148,0.806,149,2.219,150,0.839,151,0.839,152,0.806,153,1.55,154,0.806,155,0.806,156,0.659,157,0.839,158,1.031,159,0.806,160,1.55,161,0.806,162,1.617,163,1.142,164,0.839,165,1.55,166,0.839,167,0.806,168,0.584,169,0.806,170,1.031,171,0.91,172,1.031,173,0.806,174,1.55,175,0.806,176,0.806,177,1.157,178,1.031,179,1.031,180,0.008,181,0.008,199,2.259,201,1.546,202,2.638,253,4.945,278,1.434,281,1.077,282,1.434,293,0.774,302,2.898,311,1.705,337,0.681,341,1.733,364,2.413,367,1.485,368,2.032,382,2.259,386,0.873,389,2.317,390,1.966,409,0.877,438,1.431,448,1.126,458,1.031,460,1.178,463,1.294,464,2.154,465,2.044,467,1.163,469,1.26,471,0.989,474,1.656,486,3.676,550,1.71,551,3.306,552,2.752,556,4.336,559,3.615,565,2.406,571,1.832,573,1.854,574,1.832,576,1.832,583,0.989,588,1.978,590,1.031,593,1.606,626,1.606,631,1.691,634,2.161,679,2.044,744,1.361,758,1.361,769,2.406,773,1.434,778,4.828,780,4.828,819,1.71,852,2.734,856,3.969,901,2.752,969,3.969,993,2.406,994,2.406,1000,2.406,1006,2.161,1007,2.406,1008,2.161,1014,2.406,1063,1.234,1112,2.972,1113,3.57,1119,3.969,1161,1.434,1163,2.972,1165,2.161,1192,2.406,1291,3.615,1302,2.406,1310,1.71,1338,6.495,1339,5.014,1340,5.014,1341,4.342,1342,3.615,1343,4.174,1344,5.575,1345,4.174,1346,2.406,1347,3.57,1348,3.615,1349,2.778,1350,3.615,1351,4.174,1352,4.174,1353,2.778,1354,2.778,1355,2.406,1356,2.778,1357,4.174,1358,2.778,1359,5.014,1360,2.778,1361,2.778,1362,2.406,1363,2.778,1364,4.174,1365,2.778,1366,2.778,1367,4.828,1368,2.778,1369,4.174,1370,2.778,1371,2.778,1372,2.778,1373,2.778,1374,2.778,1375,2.778,1376,2.778,1377,2.778,1378,2.778,1379,2.778,1380,2.778,1381,2.778,1382,2.778,1383,4.174,1384,4.174,1385,4.174,1386,4.174,1387,4.174]],["title/injectables/DeviceService.html",[199,1.573,286,0.998]],["body/injectables/DeviceService.html",[0,0.35,3,0.138,4,0.138,9,0.11,14,1.333,19,0.11,20,0.288,24,1.009,29,0.719,30,0.827,32,0.886,33,0.016,34,0.417,35,0.296,36,0.872,38,1.008,43,0.959,44,0.883,52,1.083,53,0.584,54,0.138,55,0.06,59,1.049,60,1.177,62,1.088,68,3.423,77,2.241,88,2.032,95,1.466,100,1.695,138,1.742,141,0.876,163,1.145,180,0.009,181,0.009,199,1.854,216,1.397,286,1.177,296,1.541,302,1.818,327,1.03,332,1.628,336,1.715,337,0.513,341,2.013,386,0.989,409,1.38,438,1.497,458,1.699,459,2.107,463,1.466,467,0.876,469,1.788,474,1.583,534,3.559,583,1.119,590,1.699,601,1.541,604,2.395,605,2.513,610,1.715,611,2.759,613,2.032,618,1.818,631,2.66,634,2.091,647,2.901,648,2.132,649,2.513,650,2.759,651,3.963,652,4.606,653,3.645,654,4.606,655,3.559,656,3.963,658,2.361,659,1.541,660,1.541,661,1.936,662,1.397,663,1.541,664,1.936,665,1.466,666,3.216,667,1.541,669,3.082,672,3.082,673,1.541,674,2.447,677,1.936,679,1.541,685,1.397,686,2.724,694,1.466,707,2.816,743,2.361,744,2.901,745,3.056,750,1.715,754,2.447,755,2.239,756,2.239,757,2.724,758,1.541,793,1.623,966,2.724,1057,2.724,1063,2.63,1080,1.541,1081,1.541,1190,2.724,1341,3.963,1342,3.963,1348,3.963,1350,3.963,1388,2.724,1389,5.393,1390,4.576,1391,5.922,1392,4.576,1393,4.576,1394,4.576,1395,4.576,1396,4.576,1397,3.145,1398,4.576,1399,3.145,1400,3.145,1401,3.145,1402,4.576,1403,3.145,1404,4.576,1405,3.145,1406,5.393,1407,3.145,1408,4.576,1409,3.145,1410,4.576,1411,3.145,1412,3.145,1413,3.145,1414,3.145,1415,6.292,1416,3.145,1417,3.145,1418,2.724,1419,1.936,1420,3.145,1421,3.145,1422,3.145,1423,3.145,1424,3.145,1425,3.145,1426,3.145,1427,5.393,1428,3.145,1429,3.145,1430,3.145,1431,3.145,1432,3.145,1433,3.145,1434,3.145,1435,3.145,1436,3.145,1437,3.145,1438,2.074,1439,1.936,1440,2.074,1441,2.074,1442,3.963,1443,3.145,1444,4.576,1445,3.145,1446,3.145,1447,3.145,1448,2.447,1449,2.724,1450,2.724,1451,2.724,1452,2.724,1453,2.724]],["title/classes/DeviceType.html",[55,0.073,1454,2.56]],["body/classes/DeviceType.html",[3,0.19,4,0.19,9,0.151,19,0.151,20,0.358,21,1.943,29,0.721,30,0.709,32,0.531,33,0.016,34,0.472,35,0.268,36,0.531,39,1.108,54,0.298,55,0.108,59,0.966,62,0.869,100,1.355,105,2.841,132,1.719,163,0.643,177,0.834,180,0.011,181,0.011,329,1.534,331,2.177,337,0.703,361,1.914,374,2.224,390,1.301,438,0.983,718,2.35,810,2.491,811,2.491,814,2.841,816,3.755,817,2.841,819,2.653,822,0.834,823,2.841,824,3.291,825,2.491,826,2.491,827,2.841,828,2.841,1454,4.873,1455,2.841,1456,4.429,1457,4.83,1458,5.694,1459,4.309,1460,3.505,1461,3.352,1462,3.352,1463,3.352,1464,3.352,1465,3.352,1466,3.352,1467,3.352,1468,3.352,1469,3.352,1470,3.352,1471,3.352,1472,3.352,1473,3.352,1474,3.352,1475,3.352,1476,4.429,1477,3.352,1478,3.352,1479,3.352,1480,3.352,1481,3.352,1482,3.352,1483,3.068,1484,3.352,1485,3.352,1486,3.352,1487,3.352,1488,3.352]],["title/classes/DeviceTypeDict.html",[55,0.073,374,2.003]],["body/classes/DeviceTypeDict.html",[3,0.154,4,0.154,9,0.122,19,0.122,20,0.31,21,2.322,24,0.841,29,0.717,30,0.756,32,0.608,33,0.016,34,0.475,35,0.245,36,0.608,38,0.933,39,1.269,43,0.622,44,0.521,54,0.273,55,0.093,59,0.885,62,0.705,100,1.098,105,3.253,132,1.489,163,0.736,177,1.107,180,0.01,181,0.01,329,1.243,331,2.189,361,1.552,374,2.546,390,1.489,438,1.304,718,2.69,808,4.273,809,4.273,810,3.592,811,3.592,814,3.253,816,3.771,817,3.253,819,3.037,822,0.676,823,2.304,824,2.852,825,2.02,826,2.02,827,2.304,828,2.304,1454,4.787,1455,2.304,1456,2.718,1457,3.512,1460,3.037,1461,2.718,1462,2.718,1463,2.718,1464,3.838,1465,3.838,1466,3.838,1467,3.838,1468,3.838,1469,3.838,1470,3.838,1471,3.838,1472,3.838,1473,3.838,1474,3.838,1475,3.838,1476,4.833,1477,3.838,1478,3.838,1479,3.838,1480,3.838,1481,3.838,1482,3.838,1483,3.512,1484,3.838,1485,3.838,1486,3.838,1487,3.838,1488,3.838,1489,3.494,1490,3.494,1491,3.494,1492,3.494,1493,3.494,1494,3.494]],["title/interfaces/DeviceTypeInterface.html",[822,0.751,1460,2.39]],["body/interfaces/DeviceTypeInterface.html",[3,0.192,4,0.192,9,0.153,19,0.153,20,0.361,21,1.961,29,0.733,33,0.016,34,0.473,35,0.253,39,1.123,54,0.3,55,0.109,59,0.971,62,0.881,100,1.373,105,2.88,132,1.734,163,0.651,177,0.845,180,0.011,181,0.011,331,2.181,361,1.94,374,2.254,390,1.319,438,0.996,718,2.381,810,2.525,811,2.525,814,2.88,816,3.788,817,2.88,819,2.689,822,0.845,823,2.88,824,3.321,825,2.525,826,2.525,827,2.88,828,2.88,830,1.852,1454,4.672,1455,2.88,1456,3.397,1457,4.09,1460,3.952,1461,3.397,1462,3.397,1463,3.397,1464,3.397,1465,3.397,1466,3.397,1467,3.397,1468,3.397,1469,3.397,1470,3.397,1471,3.397,1472,3.397,1473,3.397,1474,3.397,1475,3.397,1476,4.469,1477,3.397,1478,3.397,1479,3.397,1480,3.397,1481,3.397,1482,3.397,1483,3.11,1484,3.397,1485,3.397,1486,3.397,1487,3.397,1488,3.397]],["title/interfaces/Dimension.html",[822,0.751,1495,1.901]],["body/interfaces/Dimension.html",[3,0.241,4,0.241,9,0.192,19,0.192,20,0.417,29,0.734,33,0.016,34,0.318,35,0.281,41,2.491,54,0.241,55,0.104,99,3.835,100,2.242,103,3.835,113,4.137,115,4.386,180,0.013,181,0.013,311,1.302,332,1.656,337,0.895,345,2.687,361,2.436,822,1.284,830,2.326,1495,3.63,1496,3.906,1497,5.003,1498,4.123,1499,4.084,1500,4.084,1501,4.084,1502,4.268,1503,4.268]],["title/interfaces/Floor.html",[168,0.816,822,0.751]],["body/interfaces/Floor.html",[3,0.248,4,0.248,9,0.198,19,0.198,20,0.424,29,0.767,33,0.016,34,0.434,35,0.306,54,0.297,168,1.419,180,0.013,181,0.013,331,1.511,332,2.259,628,4.155,685,2.507,822,1.307,830,2.393,1080,2.766,1081,2.766,1495,3.665,1504,4.392,1505,6.48,1506,5.327,1507,4.89,1508,4.89,1509,4.89,1510,4.89,1511,4.89,1512,4.89,1513,4.89]],["title/interfaces/FloorDimension.html",[822,0.751,1506,2.764]],["body/interfaces/FloorDimension.html",[3,0.242,4,0.242,9,0.192,19,0.192,20,0.418,29,0.774,33,0.016,34,0.319,35,0.308,54,0.292,168,1.155,180,0.013,181,0.013,331,1.984,332,1.659,685,3.292,822,1.285,830,2.329,1080,3.631,1081,3.631,1495,2.691,1504,4.274,1505,4.758,1506,5.081,1507,6.421,1508,6.421,1509,6.421,1510,4.758,1511,4.758,1512,4.758,1513,4.758]],["title/components/FloorListComponent.html",[0,0.432,167,1.126]],["body/components/FloorListComponent.html",[0,0.779,1,1.022,2,1.668,3,0.143,4,0.143,5,1.207,6,1.26,7,1.207,8,1.207,9,0.114,11,1.207,12,2.93,13,2.107,15,1.817,17,1.817,19,0.114,20,0.295,24,0.799,29,0.682,30,0.816,32,0.741,33,0.016,34,0.385,35,0.276,36,0.741,38,0.946,39,1.546,41,1.473,43,0.978,44,0.82,52,0.995,53,0.603,54,0.143,55,0.062,59,0.667,62,0.945,67,4.281,69,0.981,72,0.87,87,2.233,130,1.109,131,1.74,132,1.415,133,1.207,134,1.207,135,1.207,136,1.022,137,1.157,138,0.741,139,1.207,140,0.981,141,1.952,142,1.74,143,0.943,144,1.116,145,1.74,146,0.943,147,2.391,148,0.943,149,2.367,150,0.981,151,0.981,152,0.943,153,1.74,154,0.943,155,0.943,156,0.772,157,0.981,158,1.207,159,0.943,160,1.74,161,0.943,162,0.943,163,0.485,164,0.981,165,1.74,166,0.981,167,1.744,168,1.646,169,0.943,170,1.207,171,1.065,172,1.207,173,0.943,174,1.74,175,0.943,176,0.943,177,1.234,178,1.207,179,1.207,180,0.009,181,0.009,200,4.088,201,1.625,262,4.888,280,2.815,281,1.26,293,0.906,337,0.764,364,2.709,367,1.668,368,2.226,382,2.437,386,1.473,389,2.436,390,2.066,409,0.683,438,1.371,463,1.515,464,1.678,465,1.592,467,1.305,469,1.415,471,1.157,474,1.514,550,2.001,551,3.623,552,3.09,562,2.815,571,2.143,572,2.815,573,2.081,574,2.143,576,2.143,577,2.815,581,2.001,583,1.955,586,2.529,588,3.912,590,2.04,591,2.529,593,1.879,1355,2.815,1495,2.295,1514,6.421,1515,5.495,1516,5.495,1517,5.495,1518,6.014,1519,4.058,1520,4.058,1521,4.686,1522,6.014,1523,3.251,1524,3.251,1525,4.058,1526,3.251,1527,4.058,1528,4.686,1529,2.815,1530,3.251,1531,2.815,1532,5.495,1533,3.251,1534,3.251,1535,5.495,1536,2.815,1537,3.251,1538,3.251,1539,3.251,1540,2.815,1541,3.251,1542,3.251,1543,4.686,1544,4.686,1545,4.686,1546,4.686,1547,4.686,1548,4.686,1549,4.686,1550,4.686,1551,4.686,1552,4.686,1553,4.686,1554,4.686,1555,4.686]],["title/injectables/FloorService.html",[200,2.39,286,0.998]],["body/injectables/FloorService.html",[3,0.128,4,0.128,9,0.102,14,1.237,19,0.102,20,0.272,24,0.738,29,0.718,30,0.797,32,0.838,33,0.016,34,0.394,35,0.289,36,0.838,38,1.07,43,0.77,44,0.646,52,1.103,53,0.542,54,0.128,55,0.055,59,0.989,60,1.569,62,0.589,67,3.676,88,1.923,138,1.78,168,1.704,177,1.106,180,0.008,181,0.008,200,2.665,201,1.571,216,1.296,286,1.114,293,0.813,327,0.956,331,1.771,337,0.706,341,1.971,389,2.355,390,1.998,409,1.485,438,1.302,458,1.083,459,1.541,467,1.781,471,1.541,474,1.813,548,1.754,583,1.541,590,1.608,601,1.429,604,2.293,605,2.406,607,3.083,610,1.591,611,2.662,613,1.923,615,2.665,616,2.665,617,2.984,618,2.503,621,2.235,622,3.766,623,3.554,625,2.121,626,2.503,627,3.083,628,2.665,630,2.361,631,2.94,632,2.235,633,1.687,634,2.366,635,3.083,636,2.406,638,3.299,641,3.766,642,2.855,645,2.121,646,2.948,647,2.121,648,2.018,649,2.406,650,2.018,658,2.235,659,1.429,660,1.429,661,1.796,662,1.296,663,1.429,664,1.796,665,1.36,666,2.798,667,1.429,669,2.798,670,4.746,671,3.167,672,2.798,673,1.429,676,1.796,677,1.796,679,1.429,680,1.924,681,1.924,682,1.924,684,1.924,687,4.067,688,1.591,689,2.078,690,2.078,691,2.078,692,1.506,693,2.078,694,1.36,695,2.078,722,1.836,723,2.503,725,3.75,754,2.27,755,2.078,756,2.078,789,2.078,793,1.506,884,2.078,885,1.796,957,4.472,1048,4.472,1050,2.527,1051,3.75,1053,2.527,1063,1.923,1418,2.527,1419,1.796,1519,3.75,1520,3.75,1525,3.75,1527,3.75,1531,2.527,1540,3.75,1556,2.527,1557,4.33,1558,4.33,1559,5.712,1560,4.33,1561,4.33,1562,4.33,1563,2.918,1564,4.33,1565,2.918,1566,2.918,1567,2.918,1568,2.855,1569,4.33,1570,2.918,1571,2.918,1572,4.33,1573,2.918,1574,4.33,1575,2.918,1576,2.918,1577,2.918,1578,2.918,1579,2.918,1580,2.918]],["title/components/HomeComponent.html",[0,0.432,169,1.126]],["body/components/HomeComponent.html",[0,0.612,1,1.025,2,1.671,3,0.143,4,0.143,5,1.21,6,1.263,7,1.21,8,1.21,9,0.114,11,1.21,12,2.931,13,2.108,14,1.382,15,1.82,17,1.82,19,0.114,20,0.295,23,2.32,24,1.026,29,0.682,30,0.816,32,0.678,33,0.016,34,0.37,35,0.295,36,0.678,38,0.784,39,1.207,43,1.182,44,0.991,48,3.095,49,3.652,52,0.859,53,0.605,54,0.143,55,0.062,60,1.415,62,0.947,69,0.984,72,0.872,87,2.235,88,2.674,93,2.823,115,1.884,130,1.112,131,1.743,132,1.417,133,1.21,134,1.21,135,1.21,136,1.025,137,2.271,138,0.743,139,1.21,140,0.984,141,1.852,142,1.743,143,0.945,144,1.118,145,1.743,146,0.945,147,2.268,148,0.945,149,2.369,150,0.984,151,0.984,152,0.945,153,1.743,154,0.945,155,0.945,156,0.774,157,0.984,158,1.21,159,0.945,160,1.743,161,0.945,162,0.945,163,0.486,164,0.984,165,1.743,166,0.984,167,0.945,168,0.685,169,1.746,170,1.21,171,1.067,172,1.21,173,0.945,174,1.743,175,0.945,176,0.945,177,0.631,178,1.21,179,1.21,180,0.009,181,0.009,209,2.535,210,3.652,216,1.447,296,1.596,302,2.714,305,3.652,337,0.532,341,1.361,367,1.671,368,2.23,382,2.439,409,1.44,458,1.743,459,1.671,583,1.671,604,2.444,605,2.564,610,1.777,611,2.805,613,2.085,628,2.006,632,1.682,648,3.192,649,2.805,650,2.187,652,5.555,653,4.316,654,5.453,655,3.652,674,3.652,676,2.89,685,2.085,722,1.382,731,2.56,739,3.652,969,2.32,1015,2.823,1581,2.823,1582,5.503,1583,4.695,1584,5.503,1585,5.503,1586,5.503,1587,5.756,1588,5.503,1589,4.695,1590,4.695,1591,4.695,1592,3.259,1593,4.695,1594,3.259,1595,4.695,1596,3.259,1597,3.259,1598,6.021,1599,3.259,1600,4.695,1601,4.066,1602,4.695,1603,3.259,1604,4.695,1605,3.259,1606,4.695,1607,6.021,1608,4.695,1609,4.695,1610,4.695,1611,3.259,1612,3.259,1613,3.259,1614,3.259,1615,3.259,1616,3.259,1617,3.259,1618,3.259,1619,3.259,1620,3.259,1621,4.695,1622,3.259,1623,5.214,1624,3.259,1625,3.259,1626,3.259,1627,3.259,1628,3.259,1629,3.259,1630,3.259,1631,3.259,1632,3.259,1633,3.259,1634,3.259,1635,3.259,1636,3.259,1637,3.259,1638,3.259,1639,3.259,1640,3.259,1641,3.259,1642,3.259]],["title/interfaces/Log.html",[822,0.751,1063,1.724]],["body/interfaces/Log.html",[0,0.791,3,0.132,4,0.132,9,0.105,13,0.806,14,1.276,19,0.105,20,0.279,29,0.742,32,0.371,33,0.016,34,0.257,35,0.264,36,0.648,38,1.028,44,0.449,52,0.905,53,0.559,54,0.255,55,0.057,59,1.06,60,1.352,62,1.304,63,2.922,77,3.028,88,1.337,100,1.393,118,3.824,138,1.775,144,0.823,163,0.784,168,0.633,180,0.009,181,0.009,201,0.715,216,1.337,286,1.14,296,1.475,311,0.715,327,0.986,331,0.806,332,1.751,341,1.682,354,3.353,355,1.554,386,2.269,409,1.359,438,1.01,458,1.118,459,1.072,467,1.862,469,2.179,470,1.554,474,1.775,538,1.985,548,1.22,583,1.072,590,1.118,604,1.337,605,1.403,611,2.065,613,2.335,621,1.554,623,3.429,625,1.475,630,1.642,631,2.884,632,1.554,633,1.74,634,2.86,636,2.065,638,3.336,645,1.475,646,1.554,647,3.028,648,1.403,649,2.065,650,1.403,658,2.287,659,1.475,660,1.475,662,1.337,663,1.475,665,1.403,666,2.841,667,1.475,669,2.841,671,3.403,672,2.841,673,1.475,688,2.416,692,1.554,694,1.403,722,2.621,723,3.573,731,2.416,743,1.554,744,2.576,745,2.287,747,1.642,748,2.867,749,1.403,763,4.522,773,1.554,793,1.554,796,1.642,822,1.018,830,1.276,910,1.642,1060,1.985,1063,3.487,1071,1.985,1072,1.985,1073,1.985,1310,1.853,1419,1.853,1438,1.985,1439,1.853,1440,1.985,1441,1.985,1643,1.985,1644,4.401,1645,3.57,1646,3.744,1647,2.144,1648,4.815,1649,1.853,1650,1.853,1651,1.985,1652,2.144,1653,2.144,1654,2.144,1655,4.603,1656,4.129,1657,2.144,1658,2.144,1659,3.155,1660,2.144,1661,3.744,1662,2.144,1663,2.144,1664,2.144,1665,2.144,1666,2.144,1667,2.144,1668,2.144,1669,2.144,1670,2.144,1671,2.144,1672,2.144,1673,2.144,1674,2.144,1675,2.144,1676,2.144,1677,2.144,1678,2.144,1679,3.155,1680,2.144,1681,2.144,1682,3.155,1683,3.155,1684,2.144,1685,2.144,1686,2.144,1687,2.144,1688,2.144,1689,2.144,1690,2.144]],["title/interfaces/LogIn.html",[77,1.901,822,0.751]],["body/interfaces/LogIn.html",[0,0.793,3,0.134,4,0.134,9,0.106,13,0.813,14,1.288,19,0.106,20,0.281,29,0.735,32,0.375,33,0.016,34,0.259,35,0.245,36,0.652,38,1.03,44,0.453,52,0.909,53,0.564,54,0.256,55,0.058,59,1.062,60,1.36,62,1.309,63,2.942,77,3.177,88,1.35,100,1.403,118,4.092,138,1.777,144,0.828,163,0.789,168,0.639,180,0.009,181,0.009,201,0.721,216,1.35,286,1.148,296,1.489,311,0.721,327,0.995,331,0.813,332,0.918,341,1.689,354,3.368,355,1.568,386,2.274,409,1.364,438,1.017,458,1.128,459,1.082,467,1.868,469,2.184,470,1.568,474,1.777,538,2.004,548,1.231,583,1.082,590,1.128,604,1.35,605,1.416,611,2.079,613,2.348,621,1.568,623,3.437,625,1.489,630,1.657,631,2.891,632,1.568,633,1.757,634,2.865,636,2.079,638,3.348,645,1.489,646,1.568,647,3.039,648,1.416,649,2.079,650,1.416,658,2.303,659,1.489,660,1.489,662,1.35,663,1.489,665,1.416,666,2.854,667,1.489,669,2.854,671,3.409,672,2.854,673,1.489,688,2.433,692,1.568,694,1.416,722,2.631,723,3.587,731,2.433,743,1.568,744,2.59,745,2.303,747,1.657,748,2.883,749,1.416,763,4.534,773,1.568,793,1.568,796,1.657,822,1.023,830,1.288,910,1.657,1060,2.004,1063,3.481,1071,2.004,1072,2.004,1073,2.004,1310,2.747,1419,1.871,1438,2.004,1439,1.871,1440,2.004,1441,2.004,1643,2.004,1644,4.418,1645,1.871,1646,3.764,1647,2.164,1648,4.825,1649,1.871,1650,1.871,1651,2.004,1652,2.164,1653,2.164,1654,2.164,1655,4.619,1656,4.148,1657,2.164,1658,2.164,1659,3.177,1660,2.164,1661,3.764,1662,2.164,1663,2.164,1664,2.164,1665,2.164,1666,2.164,1667,2.164,1668,2.164,1669,2.164,1670,2.164,1671,2.164,1672,2.164,1673,2.164,1674,2.164,1675,2.164,1676,2.164,1677,2.164,1678,2.164,1679,3.177,1680,2.164,1681,2.164,1682,3.177,1683,3.177,1684,2.164,1685,2.164,1686,2.164,1687,2.164,1688,2.164,1689,2.164,1690,2.164]],["title/interfaces/LogParamteres.html",[822,0.751,1649,2.39]],["body/interfaces/LogParamteres.html",[0,0.796,3,0.135,4,0.135,9,0.108,13,0.824,14,1.306,19,0.108,20,0.283,29,0.732,32,0.555,33,0.016,34,0.261,35,0.21,36,0.38,38,1.033,44,0.459,52,0.915,53,0.572,54,0.258,55,0.058,59,1.064,60,1.37,62,1.315,63,2.971,77,3.056,88,1.368,100,1.417,118,3.866,138,1.78,144,0.836,163,0.795,168,0.648,180,0.009,181,0.009,201,0.731,216,1.368,286,1.159,296,1.509,311,0.731,327,1.009,331,0.824,332,0.93,341,1.7,354,3.389,355,1.59,386,2.17,409,1.37,438,1.027,458,1.144,459,1.096,467,1.633,469,2.084,470,1.59,474,1.794,538,2.031,548,1.248,583,1.096,590,1.144,604,1.368,605,1.435,611,2.1,613,2.366,621,1.59,623,3.449,625,1.509,630,1.679,631,2.9,632,1.59,633,1.781,634,2.812,636,2.1,638,3.364,645,1.509,646,1.59,647,3.056,648,1.435,649,2.1,650,1.435,658,2.325,659,1.509,660,1.509,662,1.368,663,1.509,665,1.435,666,2.872,667,1.509,669,2.872,671,3.419,672,2.872,673,1.509,688,2.457,692,1.59,694,1.435,722,2.645,723,3.607,731,2.457,743,1.59,744,2.61,745,2.325,747,1.679,748,2.905,749,1.435,763,4.552,773,1.59,793,1.59,796,1.679,822,1.031,830,1.306,910,1.679,1060,2.031,1063,3.477,1071,2.031,1072,2.031,1073,2.031,1310,1.896,1419,1.896,1438,2.031,1439,1.896,1440,2.031,1441,2.031,1643,2.031,1644,4.175,1645,1.896,1646,3.794,1647,3.208,1648,4.885,1649,2.774,1650,1.896,1651,2.031,1652,2.193,1653,2.193,1654,2.193,1655,4.641,1656,4.175,1657,2.193,1658,2.193,1659,3.208,1660,2.193,1661,3.794,1662,2.193,1663,2.193,1664,2.193,1665,2.193,1666,2.193,1667,2.193,1668,2.193,1669,2.193,1670,2.193,1671,2.193,1672,2.193,1673,2.193,1674,2.193,1675,2.193,1676,2.193,1677,2.193,1678,2.193,1679,3.208,1680,2.193,1681,2.193,1682,3.208,1683,3.208,1684,2.193,1685,2.193,1686,2.193,1687,2.193,1688,2.193,1689,2.193,1690,2.193]],["title/injectables/LogService.html",[201,0.921,286,0.998]],["body/injectables/LogService.html",[0,0.746,3,0.105,4,0.105,9,0.084,13,0.998,14,1.017,19,0.084,20,0.235,24,0.636,29,0.735,30,0.792,32,0.867,33,0.016,34,0.417,35,0.284,36,0.867,38,1.078,43,0.814,44,0.834,52,0.806,53,0.445,54,0.227,55,0.045,59,1.024,60,1.439,62,1.195,63,3.018,77,3.132,88,1.657,100,1.439,118,3.689,138,1.812,144,0.959,163,0.834,168,0.504,180,0.007,181,0.007,201,0.885,216,1.065,286,0.959,296,1.175,311,0.569,327,0.785,331,1.797,332,0.724,337,0.391,341,1.718,354,2.646,355,1.238,386,2.065,409,1.437,438,1.351,458,0.89,459,0.853,465,1.827,467,1.559,469,2.097,470,1.238,474,1.789,538,1.581,548,0.972,583,0.853,590,0.89,601,1.175,604,2.033,605,2.133,610,1.308,611,2.406,613,2.631,621,1.925,623,3.609,625,1.827,630,2.034,631,3.005,632,1.925,633,2.156,634,2.875,636,2.406,638,3.584,645,1.827,646,1.925,647,2.902,648,1.738,649,2.133,650,1.738,658,1.925,659,1.175,660,1.175,662,1.065,663,1.175,665,1.117,666,2.53,667,1.175,669,2.53,671,3.236,672,2.53,673,1.175,688,2.034,692,1.238,694,1.117,707,2.296,722,2.846,723,3.88,731,2.816,743,1.925,744,2.902,745,2.887,747,2.034,748,3.05,749,1.738,750,1.308,763,4.216,773,1.238,793,1.238,796,1.308,822,0.886,910,1.308,1059,3.231,1060,2.46,1063,3.517,1071,1.581,1072,1.581,1073,1.581,1310,1.476,1419,1.476,1438,1.581,1439,1.476,1440,1.581,1441,1.581,1643,1.581,1644,4.218,1645,1.476,1646,4.218,1647,1.707,1648,4.889,1649,1.476,1650,1.476,1651,1.581,1652,1.707,1653,3.677,1654,1.707,1655,4.218,1656,4.552,1657,2.656,1658,1.707,1659,2.656,1660,1.707,1661,3.259,1662,2.656,1663,1.707,1664,1.707,1665,2.656,1666,1.707,1667,1.707,1668,2.656,1669,1.707,1670,1.707,1671,1.707,1672,2.656,1673,2.656,1674,2.656,1675,1.707,1676,1.707,1677,1.707,1678,2.656,1679,2.656,1680,1.707,1681,2.656,1682,3.677,1683,2.656,1684,1.707,1685,1.707,1686,1.707,1687,1.707,1688,1.707,1689,1.707,1690,1.707,1691,3.73,1692,3.73,1693,3.73,1694,3.73,1695,3.73,1696,3.73,1697,3.73,1698,2.398,1699,2.398,1700,2.398,1701,2.398,1702,2.398,1703,2.398,1704,2.398,1705,2.398,1706,2.398,1707,2.398,1708,2.398,1709,2.398,1710,2.398,1711,2.398]],["title/classes/Model.html",[55,0.073,311,0.921]],["body/classes/Model.html",[3,0.238,4,0.238,9,0.189,19,0.189,20,0.413,29,0.744,30,0.84,33,0.016,34,0.411,35,0.291,41,2.227,54,0.238,55,0.102,99,3.799,100,2.227,103,3.799,113,3.584,115,3.799,180,0.013,181,0.013,311,1.56,329,1.923,332,2.139,337,1.156,345,2.646,361,2.399,822,1.272,1495,3.763,1496,3.846,1497,4.334,1498,4.441,1499,4.046,1500,4.046,1501,4.046,1502,4.202,1503,4.202,1712,6.573,1713,5.402,1714,5.402,1715,5.402]],["title/components/ModelAddComponent.html",[0,0.432,173,1.126]],["body/components/ModelAddComponent.html",[0,0.591,1,0.796,2,1.384,3,0.111,4,0.111,5,0.94,6,0.981,7,0.94,8,0.94,9,0.089,11,0.94,12,2.851,13,2.048,15,1.508,17,1.508,19,0.089,20,0.245,21,1.617,24,0.663,29,0.628,30,0.782,32,0.584,33,0.016,34,0.413,35,0.274,36,0.584,38,0.817,39,1.475,41,2.305,43,0.946,44,0.995,52,1.041,53,0.47,54,0.111,55,0.048,59,0.361,60,2.024,62,0.511,69,0.764,72,0.678,87,1.973,99,3.762,103,3.762,113,3.548,115,4.066,130,0.864,131,1.444,132,1.174,133,0.94,134,0.94,135,0.94,136,0.796,137,0.901,138,0.577,139,0.94,140,0.764,141,2.057,142,1.444,143,0.734,144,0.987,145,1.444,146,0.734,147,2.067,148,0.734,149,2.13,150,0.764,151,0.764,152,0.734,153,1.444,154,0.734,155,0.734,156,0.601,157,0.764,158,0.94,159,0.734,160,1.444,161,0.734,162,0.734,163,0.378,164,0.764,165,1.444,166,0.764,167,0.734,168,0.532,169,0.734,170,0.94,171,0.829,172,0.94,173,1.541,174,1.444,175,0.734,176,0.734,177,0.753,178,0.94,179,0.94,180,0.008,181,0.008,201,1.497,202,2.761,219,1.073,266,4.696,281,0.981,282,1.306,293,0.705,302,1.463,311,1.725,318,1.905,337,0.634,341,2.065,355,3.125,367,1.384,368,1.919,373,3.301,374,3.125,375,2.915,382,2.154,383,2.898,386,0.796,389,2.155,390,1.904,409,0.818,410,3.438,430,4.439,431,1.38,434,1.802,435,1.802,438,1.08,441,3.835,447,1.558,448,1.919,460,1.649,463,1.179,464,1.306,465,1.24,467,0.705,469,0.764,470,1.306,471,0.901,474,0.887,475,4.053,476,2.394,477,2.898,484,2.966,485,2.394,573,3.198,636,1.812,653,2.394,731,2.12,982,3.992,1136,2.769,1159,2.769,1160,1.802,1161,1.306,1177,2.192,1186,2.192,1196,3.025,1197,3.368,1495,1.905,1497,4.291,1498,2.248,1499,3.272,1500,4.006,1501,4.194,1716,6.169,1717,1.969,1718,4.102,1719,3.368,1720,4.736,1721,3.889,1722,5.315,1723,3.889,1724,2.531,1725,3.889,1726,3.889,1727,2.531,1728,3.368,1729,2.531,1730,3.889,1731,2.531,1732,2.531,1733,2.531,1734,5.244,1735,5.244,1736,5.244,1737,4.71,1738,2.531,1739,2.531,1740,2.531,1741,2.531,1742,2.531,1743,2.192,1744,2.531,1745,2.531,1746,2.531,1747,3.889,1748,2.531,1749,2.531,1750,2.531,1751,2.531,1752,2.531,1753,2.531,1754,2.531,1755,2.531,1756,2.531,1757,2.531,1758,2.531,1759,2.531,1760,2.531,1761,2.531,1762,2.531,1763,1.802,1764,5.315,1765,3.889,1766,5.315,1767,3.889,1768,3.889]],["title/components/ModelEditComponent.html",[0,0.432,175,1.126]],["body/components/ModelEditComponent.html",[0,0.734,1,0.833,2,1.433,3,0.116,4,0.116,5,0.984,6,1.027,7,0.984,8,0.984,9,0.093,11,0.984,12,2.867,13,2.06,15,1.561,17,1.561,19,0.093,20,0.253,21,2.104,24,0.686,29,0.621,30,0.827,32,0.496,33,0.016,34,0.417,35,0.272,36,0.496,38,0.834,39,1.399,41,2.284,43,0.968,44,0.873,52,1.03,53,0.492,54,0.116,55,0.05,59,0.694,62,0.812,69,0.8,72,0.709,87,2.021,99,3.563,103,3.563,113,3.599,115,3.816,130,0.904,131,1.495,132,1.216,133,0.984,134,0.984,135,0.984,136,0.833,137,0.943,138,0.604,139,0.984,140,0.8,141,1.717,142,1.495,143,0.768,144,1.01,145,1.495,146,0.768,147,2.502,148,0.768,149,2.173,150,0.8,151,0.8,152,0.768,153,1.495,154,0.768,155,0.768,156,0.629,157,0.8,158,0.984,159,0.768,160,1.495,161,0.768,162,0.768,163,0.395,164,0.8,165,1.495,166,0.8,167,0.768,168,0.557,169,0.768,170,0.984,171,0.868,172,0.984,173,0.768,174,1.495,175,1.578,176,0.768,177,0.943,178,0.984,179,0.984,180,0.008,181,0.008,188,3.132,201,1.521,202,2.794,213,3.468,214,1.631,219,1.123,269,4.938,281,1.027,282,1.367,293,0.738,311,1.754,318,1.972,327,0.868,337,0.657,341,1.787,364,1.531,367,1.433,368,1.974,382,2.205,383,2.967,385,2.328,386,1.266,387,1.631,388,3.794,389,2.28,390,1.934,393,3.35,409,0.557,410,2.656,421,1.531,430,2.816,431,1.444,438,1.461,440,3.468,441,3.191,446,1.631,448,1.073,458,0.984,459,0.943,460,1.707,463,1.234,467,1.122,469,1.216,471,1.433,474,1.572,475,4.127,476,3.794,477,3.361,479,3.588,484,2.665,486,4.547,488,3.789,510,2.294,516,1.747,524,2.06,525,1.886,534,2.06,535,2.294,548,1.974,573,3.227,581,1.631,583,1.734,593,1.531,636,1.876,982,2.655,1063,1.176,1136,1.886,1161,1.367,1258,4.219,1259,4.219,1439,1.631,1495,1.972,1497,4.353,1498,2.328,1499,3.794,1500,3.794,1501,4.064,1717,2.06,1718,4.219,1719,3.487,1734,4.219,1735,4.219,1736,4.219,1737,3.789,1743,2.294,1763,2.867,1769,6.486,1770,4.871,1771,4.871,1772,5.442,1773,4.713,1774,4.027,1775,4.027,1776,2.649,1777,2.649,1778,4.871,1779,2.649,1780,4.027,1781,2.649,1782,2.649,1783,2.649,1784,2.649,1785,2.649,1786,2.649,1787,2.649,1788,2.649,1789,2.649,1790,2.649,1791,2.649,1792,2.649,1793,2.649,1794,2.649,1795,2.649,1796,2.649,1797,2.649,1798,2.649,1799,2.649,1800,2.649,1801,2.649,1802,2.649,1803,2.649,1804,2.649,1805,2.649,1806,2.649,1807,4.027,1808,2.649,1809,2.649,1810,2.649,1811,2.649,1812,2.649,1813,4.027,1814,4.871,1815,2.649,1816,2.649,1817,2.649,1818,2.649,1819,2.649,1820,2.649,1821,2.649,1822,2.649,1823,2.649,1824,6.164,1825,6.164,1826,4.027]],["title/classes/ModelsList.html",[55,0.073,1827,2.764]],["body/classes/ModelsList.html",[3,0.246,4,0.246,9,0.196,19,0.196,20,0.423,24,1.145,30,0.83,32,0.691,33,0.016,34,0.325,35,0.265,36,0.691,38,1.025,39,1.441,43,0.997,44,0.836,52,0.875,54,0.246,55,0.106,59,0.957,180,0.013,181,0.013,302,3.885,311,1.913,329,1.995,1329,5.821,1827,5.434,1828,4.855,1829,7.464,1830,5.605,1831,5.605,1832,5.605,1833,6.721,1834,5.605,1835,4.855,1836,5.605,1837,5.605]],["title/components/ModelsListComponent.html",[0,0.432,176,1.126]],["body/components/ModelsListComponent.html",[0,0.774,1,0.863,2,1.472,3,0.121,4,0.121,5,1.019,6,1.064,7,1.019,8,1.019,9,0.096,11,1.019,12,2.879,13,2.081,15,1.604,17,1.604,19,0.096,20,0.26,21,1.699,24,0.705,29,0.655,30,0.805,32,0.77,33,0.016,34,0.41,35,0.279,36,0.799,38,0.991,39,1.607,41,0.863,43,0.986,44,0.932,52,0.975,53,0.509,54,0.121,55,0.052,59,0.924,62,0.554,69,2.187,72,0.735,87,2.057,99,2.391,103,2.391,130,0.937,131,1.536,132,1.249,133,1.019,134,1.019,135,1.019,136,0.863,137,1.972,138,1.652,139,1.019,140,0.829,141,1.939,142,1.536,143,0.796,144,1.029,145,1.536,146,0.796,147,2.133,148,0.796,149,2.207,150,0.829,151,0.829,152,0.796,153,1.536,154,0.796,155,0.796,156,0.651,157,0.829,158,1.019,159,0.796,160,1.536,161,0.796,162,0.796,163,0.409,164,0.829,165,1.536,166,0.829,167,0.796,168,0.577,169,0.796,170,1.019,171,0.899,172,1.019,173,0.796,174,1.536,175,0.796,176,1.607,177,1.209,178,1.019,179,1.019,180,0.008,181,0.008,201,1.539,202,2.767,271,4.824,281,1.064,282,1.416,293,0.765,311,1.878,327,0.899,331,1.483,337,0.675,364,1.586,367,1.472,368,2.017,382,2.245,386,0.863,389,2.308,390,1.958,409,1.046,438,1.425,463,1.279,464,1.416,465,1.344,467,1.152,469,2.134,471,1.472,474,1.726,550,1.689,551,3.282,552,2.727,571,2.727,573,1.837,574,1.81,576,1.81,581,1.689,583,1.771,590,1.848,593,1.586,595,2.377,613,1.837,615,2.546,616,3.846,618,2.391,623,2.026,625,2.026,626,1.586,631,2.532,671,2.77,694,1.279,707,2.546,722,1.753,739,3.217,743,2.134,744,3.269,745,3.068,747,2.255,748,3.241,749,1.927,750,1.496,796,1.496,1006,2.135,1008,2.135,1089,2.945,1119,3.945,1161,1.416,1163,1.954,1347,2.945,1362,2.377,1499,2.546,1500,2.546,1501,2.546,1529,2.377,1763,1.954,1827,3.544,1835,2.377,1838,6.336,1839,4.977,1840,4.977,1841,5.541,1842,3.582,1843,3.582,1844,4.136,1845,2.377,1846,2.745,1847,4.136,1848,3.582,1849,4.136,1850,3.582,1851,2.745,1852,4.136,1853,2.745,1854,4.136,1855,4.136,1856,2.745,1857,2.745,1858,4.136,1859,4.136,1860,3.582,1861,4.136,1862,4.136,1863,2.745,1864,4.136,1865,2.377,1866,2.745,1867,2.745,1868,2.745,1869,4.136,1870,4.977,1871,2.745,1872,2.745,1873,2.745,1874,2.745,1875,4.977,1876,2.745,1877,2.745,1878,4.136,1879,4.136,1880,4.136,1881,4.136,1882,4.136,1883,4.136]],["title/injectables/ModelsService.html",[202,1.573,286,0.998]],["body/injectables/ModelsService.html",[3,0.13,4,0.13,9,0.104,13,1.171,14,1.255,19,0.104,20,0.275,24,0.746,29,0.712,30,0.8,32,0.841,33,0.016,34,0.404,35,0.287,36,0.859,38,1.047,43,1.023,44,0.992,52,1.065,53,0.55,54,0.13,55,0.056,59,1.01,60,1.479,69,2.007,88,1.944,138,1.782,177,0.847,180,0.008,181,0.008,201,1.578,202,1.773,216,1.315,286,1.126,293,0.825,311,1.926,327,0.97,331,1.72,337,0.714,341,1.979,386,0.931,389,2.366,390,2.007,409,1.53,438,1.516,458,1.625,459,2.047,469,2.104,471,1.558,474,1.795,548,1.773,583,1.558,590,1.625,601,1.45,604,2.312,605,2.426,610,1.614,611,2.68,613,2.555,615,2.694,616,3.541,617,2.53,618,2.53,621,2.259,622,3.793,623,3.473,625,2.144,626,2.53,631,2.604,634,1.148,638,2.969,641,2.886,642,2.886,645,2.144,646,2.969,647,2.144,648,2.039,649,2.426,650,2.039,659,1.45,660,1.45,661,1.822,662,1.315,663,1.45,664,1.822,665,1.379,666,3.007,667,2.144,669,3.007,671,3.18,672,2.818,673,1.45,676,2.694,677,1.822,679,1.45,680,1.952,681,1.952,682,1.952,684,1.952,694,1.379,707,2.694,718,2.386,722,1.855,723,2.53,743,2.259,744,3.148,745,3.168,747,2.386,748,3.347,749,2.039,750,1.614,789,2.108,793,1.528,794,2.564,796,1.614,1161,1.528,1367,3.79,1536,2.564,1763,3.116,1773,3.79,1842,3.79,1843,3.79,1848,3.79,1850,3.79,1860,4.982,1884,2.564,1885,4.377,1886,4.377,1887,4.377,1888,2.96,1889,4.377,1890,2.96,1891,2.96,1892,4.377,1893,2.96,1894,2.96,1895,2.96,1896,4.377,1897,2.96,1898,2.96,1899,2.96,1900,4.377,1901,2.96,1902,2.96,1903,2.96,1904,2.96,1905,2.96,1906,2.96,1907,5.207,1908,2.96,1909,2.96,1910,2.96,1911,2.96,1912,2.96,1913,2.96,1914,2.96,1915,2.96,1916,2.96,1917,2.96]],["title/interfaces/Position.html",[95,1.809,822,0.751]],["body/interfaces/Position.html",[3,0.21,4,0.21,9,0.167,19,0.167,20,0.383,29,0.728,33,0.016,34,0.439,35,0.264,41,2.433,54,0.295,55,0.134,59,0.68,60,1.566,62,1.424,95,3.678,100,2.107,141,1.696,163,1.129,180,0.012,181,0.012,311,1.134,331,1.278,332,1.838,336,4.062,337,1.093,345,2.34,347,3.401,361,2.704,384,3.653,409,1.28,448,2.467,460,2.025,474,1.528,573,2.976,634,1.852,685,3.309,749,2.226,822,1.178,830,2.025,1074,3.149,1075,3.716,1080,3.65,1081,3.65,1083,3.149,1084,3.716,1085,3.401,1086,3.716,1087,3.716,1088,4.334,1089,4.334,1090,3.401,1091,3.401,1092,4.735,1093,3.716,1094,3.716,1095,3.716,1096,4.014,1097,3.716,1098,3.716,1099,3.716,1100,3.401,1101,3.716,1102,3.716,1103,3.716,1104,3.716,1105,3.716,1106,3.716,1918,4.777,1919,4.777,1920,4.777,1921,4.777,1922,4.777,1923,4.137,1924,4.777,1925,4.777,1926,4.137,1927,4.777]],["title/classes/Rack.html",[55,0.073,1928,2.764]],["body/classes/Rack.html",[3,0.232,4,0.232,9,0.185,19,0.185,20,0.407,24,1.104,30,0.813,32,0.798,33,0.016,34,0.376,35,0.289,36,0.798,38,0.752,39,1.357,43,1.153,44,0.966,52,1.141,54,0.232,55,0.1,60,1.666,163,1.197,180,0.013,181,0.013,199,2.963,201,1.837,202,3.136,278,2.723,281,2.046,282,2.723,329,1.878,337,1.057,438,1.742,474,1.203,722,2.747,1112,4.613,1346,4.57,1928,4.613,1929,4.57,1930,7.012,1931,6.479,1932,6.479,1933,5.277,1934,6.479,1935,5.277,1936,5.277,1937,5.277,1938,5.277]],["title/guards/ResolverDevice.html",[273,2.39,1939,3.02]],["body/guards/ResolverDevice.html",[3,0.242,4,0.242,9,0.192,19,0.192,24,1.132,30,0.738,32,0.818,33,0.016,34,0.385,35,0.262,36,0.818,38,0.782,52,1.184,53,1.02,54,0.242,55,0.104,59,0.782,138,1.627,163,0.819,180,0.013,181,0.013,199,3.004,273,4.087,278,2.835,286,1.708,290,5.278,293,1.531,296,2.691,306,5.278,327,1.799,337,0.896,367,1.955,679,2.691,758,2.691,1347,3.912,1442,4.758,1448,4.274,1449,4.758,1450,4.758,1451,4.758,1452,4.758,1453,4.758,1568,4.378,1940,4.274,1941,4.758,1942,5.494,1943,5.494,1944,5.751,1945,6.421,1946,7.137,1947,5.494,1948,5.494,1949,5.494]],["title/guards/ResolverModel.html",[274,2.39,1939,3.02]],["body/guards/ResolverModel.html",[3,0.245,4,0.245,9,0.195,19,0.195,24,1.14,30,0.744,32,0.825,33,0.016,34,0.388,35,0.264,36,0.825,38,0.793,52,1.189,53,1.033,54,0.245,55,0.105,59,0.793,138,1.636,180,0.013,181,0.013,202,3.135,274,4.119,282,2.872,286,1.721,290,5.301,293,1.55,296,2.726,306,5.301,311,1.321,327,1.823,337,0.908,367,1.98,1161,2.872,1347,3.962,1845,4.82,1865,4.82,1940,4.329,1944,5.796,1945,6.449,1950,4.82,1951,5.565,1952,7.176,1953,5.565,1954,5.565]],["title/injectables/TemplatePageTitleStrategy.html",[286,0.998,294,2.764]],["body/injectables/TemplatePageTitleStrategy.html",[0,0.875,3,0.155,4,0.155,9,0.124,19,0.124,23,5.703,24,0.847,30,0.552,32,0.612,33,0.016,34,0.288,35,0.196,36,0.612,38,0.503,39,0.908,47,3.276,48,2.327,52,1.246,53,0.655,54,0.155,55,0.067,62,1.002,69,1.5,72,1.826,73,2.967,140,1.5,141,2.077,143,1.441,144,1.418,146,1.441,147,2.569,148,1.441,150,1.5,151,1.5,152,1.441,154,1.441,155,1.441,156,1.179,157,1.5,159,1.441,161,1.441,162,1.441,163,0.981,164,1.5,166,1.5,167,1.441,168,1.383,169,1.667,173,1.441,175,1.441,176,1.441,177,1.457,180,0.01,181,0.01,207,2.745,213,2.512,214,2.172,217,3.865,218,3.865,219,1.496,221,2.512,222,2.172,228,2.745,229,4.473,230,3.276,231,3.865,232,2.327,233,3.276,234,5.308,235,3.276,236,2.745,237,2.327,238,3.865,239,2.745,240,2.745,241,2.512,242,2.745,243,2.327,244,3.865,245,2.745,246,2.327,247,2.745,248,2.327,249,2.745,250,2.327,251,3.865,252,2.745,253,2.327,254,2.745,255,2.327,256,2.745,257,2.512,258,3.865,259,2.745,260,2.512,261,2.745,262,2.327,263,2.745,265,2.745,266,2.327,267,3.865,268,2.745,269,2.327,270,2.745,271,2.327,273,3.539,274,3.539,284,4.473,285,2.745,286,1.278,287,4.303,288,3.056,289,3.056,290,4.443,291,4.115,292,4.98,293,0.983,294,3.537,295,4.303,296,1.728,297,3.056,298,3.056,299,3.056,300,4.303,301,3.056,302,2.04,303,3.056,304,6.125,305,4.473,306,2.512,307,3.056,308,3.056,309,3.056,310,3.056,311,1.365,312,3.056,313,3.056,314,3.056,315,3.056,316,3.056,317,3.056,318,1.728,337,0.576,601,1.728,1955,4.968,1956,3.529,1957,3.529,1958,3.529,1959,3.529]],["title/interfaces/Texture.html",[822,0.751,1498,2.244]],["body/interfaces/Texture.html",[3,0.237,4,0.237,9,0.188,19,0.188,20,0.412,29,0.764,33,0.016,34,0.312,35,0.298,41,2.223,54,0.237,55,0.102,99,4.362,100,2.223,103,4.362,113,3.574,115,3.79,180,0.013,181,0.013,311,1.277,332,1.624,337,0.878,345,2.635,361,2.389,822,1.269,830,2.281,1495,3.464,1496,3.83,1497,4.323,1498,4.255,1499,4.645,1500,4.645,1501,4.645,1502,4.185,1503,4.185]],["title/classes/Tools3D.html",[55,0.073,1960,3.02]],["body/classes/Tools3D.html",[3,0.199,4,0.199,9,0.159,19,0.159,20,0.37,24,1.004,30,0.852,32,0.559,33,0.016,34,0.263,35,0.273,36,0.559,38,0.931,39,1.682,41,2.255,43,1.308,44,1.096,52,1.08,55,0.086,100,1.851,163,1.032,180,0.011,181,0.011,311,1.552,329,1.614,438,1.748,448,2.386,460,2.934,617,2.622,685,2.615,722,2.496,758,2.222,852,3.565,884,3.23,885,2.792,1080,2.884,1081,2.222,1113,4.655,1159,4.193,1160,3.23,1161,2.341,1218,5.086,1928,3.23,1960,4.581,1961,3.929,1962,6.539,1963,6.539,1964,6.539,1965,6.921,1966,5.889,1967,6.539,1968,4.536,1969,4.536,1970,4.536,1971,4.536,1972,4.536,1973,4.536,1974,4.536,1975,4.536,1976,4.536,1977,4.536,1978,4.536,1979,6.921,1980,5.889,1981,5.1,1982,5.889,1983,4.536,1984,4.536,1985,5.889,1986,5.889,1987,4.536,1988,5.889,1989,4.536,1990,5.889,1991,4.536,1992,4.536,1993,5.889,1994,4.536,1995,4.536,1996,4.536]],["title/classes/Validation.html",[55,0.073,1147,2.56]],["body/classes/Validation.html",[3,0.196,4,0.196,9,0.156,19,0.156,20,0.366,24,0.991,29,0.688,30,0.72,32,0.798,33,0.016,34,0.376,35,0.281,36,0.548,38,0.633,41,2.241,43,1.152,44,1.024,52,0.694,54,0.256,55,0.11,59,1.088,62,1.307,100,1.828,180,0.011,181,0.013,182,2.933,219,1.886,329,1.583,331,1.556,334,5.035,335,4.139,336,3.17,341,2.12,448,2.888,484,2.179,573,2.582,653,4.584,671,2.709,944,5.687,1147,4.82,1216,4.522,1261,5.609,1272,6.615,1280,5.609,1650,3.579,1728,3.852,1997,3.852,1998,7.127,1999,6.477,2000,4.448,2001,5.814,2002,4.448,2003,5.814,2004,6.477,2005,4.448,2006,4.448,2007,4.448,2008,4.448,2009,4.448,2010,4.448,2011,4.448,2012,4.448,2013,4.448,2014,5.814,2015,4.448,2016,4.448,2017,5.814,2018,4.448,2019,4.448,2020,4.448,2021,4.448,2022,4.448,2023,3.852,2024,4.448,2025,4.448]],["title/coverage.html",[2026,4.597]],["body/coverage.html",[0,0.881,1,1.121,9,0.125,10,3.087,33,0.016,35,0.141,55,0.146,60,0.917,72,1.339,77,1.746,95,1.661,100,2.568,117,3.087,136,1.121,140,1.076,143,1.034,144,1.226,146,1.034,148,1.034,150,1.076,151,1.076,152,1.034,154,1.034,155,1.034,156,0.846,157,1.076,159,1.034,161,1.034,162,1.034,163,0.532,164,1.076,166,1.076,167,1.034,168,0.749,169,1.034,171,1.167,173,1.034,175,1.034,176,1.034,180,0.01,181,0.01,196,1.943,197,2.35,198,2.35,199,1.444,200,2.194,201,0.846,202,1.444,230,3.299,232,2.35,233,3.299,235,3.299,237,3.299,241,2.538,243,2.35,246,2.35,248,2.35,250,2.35,253,2.35,255,2.35,257,2.538,260,2.538,262,2.35,266,2.35,269,2.35,271,2.35,273,2.194,274,2.194,284,2.773,285,2.773,286,1.876,294,2.538,311,0.846,319,3.087,330,3.087,351,2.06,352,3.087,353,4.116,365,4.116,366,3.892,372,1.943,373,1.943,374,1.839,550,4.214,602,3.087,603,3.087,662,2.222,696,3.087,797,2.773,798,3.087,807,3.892,812,2.538,822,1.46,831,3.892,836,2.538,847,3.087,848,3.892,852,1.943,858,2.194,885,2.194,915,3.087,983,3.087,1029,3.087,1045,4.876,1058,3.087,1063,1.583,1074,4.133,1083,2.35,1096,2.35,1100,3.562,1107,3.087,1108,3.892,1147,2.35,1198,2.538,1199,3.892,1257,3.087,1327,3.087,1338,3.087,1388,3.087,1454,2.35,1455,3.812,1460,2.194,1495,1.746,1496,4.116,1498,2.06,1504,3.892,1506,2.538,1514,3.087,1556,3.087,1568,2.35,1581,3.087,1643,4.133,1649,2.194,1716,3.087,1717,3.892,1769,3.087,1827,2.538,1828,3.087,1838,3.087,1884,3.087,1928,2.538,1929,3.087,1939,3.892,1941,3.087,1950,3.087,1960,2.773,1961,3.087,1981,3.087,1997,3.087,2026,3.087,2027,3.087,2028,3.565,2029,3.565,2030,6.846,2031,6.269,2032,3.565,2033,3.565,2034,3.565,2035,3.565,2036,5.004,2037,3.565,2038,4.333,2039,5.007,2040,3.565,2041,6.846,2042,3.565,2043,3.565,2044,3.565,2045,3.565,2046,3.565,2047,5.782,2048,5.004,2049,3.565,2050,5.004,2051,3.565,2052,3.565,2053,3.565,2054,5.004,2055,4.876,2056,3.565,2057,3.565,2058,3.087,2059,3.087,2060,6.269,2061,3.565,2062,3.565,2063,5.004,2064,3.565,2065,3.565,2066,3.565,2067,3.565,2068,5.004,2069,5.004,2070,3.565,2071,3.565,2072,3.565,2073,5.004,2074,5.004,2075,3.565,2076,3.565,2077,3.565,2078,3.565,2079,3.565,2080,3.087,2081,3.565,2082,7.031,2083,5.782,2084,3.087,2085,3.565,2086,5.004,2087,5.004,2088,5.004,2089,3.565,2090,3.087,2091,3.087,2092,5.004,2093,5.004,2094,3.087,2095,3.087,2096,3.565,2097,3.565]],["title/dependencies.html",[185,3.326,2098,2.804]],["body/dependencies.html",[33,0.016,53,0.915,180,0.012,181,0.012,185,3.509,187,4.84,209,4.83,210,3.834,212,4.268,214,3.034,219,2.089,221,4.84,222,3.822,224,3.509,225,4.268,293,1.373,304,3.834,327,1.614,633,2.849,645,2.414,718,2.687,755,4.421,756,3.509,1159,3.509,1160,3.509,1448,3.834,1623,4.268,1645,3.034,2023,4.268,2099,4.928,2100,7.783,2101,4.928,2102,4.928,2103,4.928,2104,4.928,2105,4.928,2106,4.928,2107,4.928,2108,4.928,2109,4.928,2110,4.928,2111,4.928,2112,4.928,2113,4.928,2114,7.357,2115,4.928,2116,4.928,2117,4.928,2118,4.928,2119,4.928,2120,4.928,2121,4.928,2122,4.928,2123,4.928,2124,4.928,2125,4.928,2126,4.928,2127,4.928,2128,4.928,2129,4.928,2130,4.928,2131,4.268,2132,4.928,2133,4.928,2134,4.928,2135,4.928,2136,4.928,2137,4.928,2138,4.928,2139,4.928,2140,4.928,2141,4.928,2142,4.928,2143,4.928,2144,4.928,2145,4.928,2146,4.928,2147,4.928,2148,6.21,2149,4.928,2150,4.928,2151,4.928,2152,4.928,2153,4.268,2154,4.928,2155,4.928,2156,4.928,2157,4.928,2158,4.928,2159,4.928,2160,4.928,2161,4.928,2162,4.928,2163,4.928,2164,6.21,2165,4.928,2166,4.928,2167,4.268,2168,4.928,2169,4.928,2170,6.21,2171,4.928,2172,4.928,2173,4.928,2174,4.928,2175,4.928,2176,4.928,2177,4.928,2178,4.928,2179,4.928]],["title/miscellaneous/functions.html",[2180,1.993,2181,4.046]],["body/miscellaneous/functions.html",[0,0.648,19,0.204,29,0.735,32,0.847,33,0.015,34,0.399,35,0.271,36,0.847,38,1.042,54,0.256,180,0.013,181,0.013,237,3.84,732,5.044,885,4.503,1013,5.348,1645,4.232,2038,5.044,2039,5.955,2055,4.53,2058,5.955,2059,5.955,2090,5.044,2091,6.336,2180,3.585,2181,5.044,2182,5.824,2183,5.955,2184,5.824,2185,6.876,2186,6.876,2187,5.824,2188,5.824,2189,5.824]],["title/index.html",[19,0.113,2190,3.237,2191,3.237]],["body/index.html",[30,0.728,32,0.661,33,0.015,37,3.417,47,5.018,48,5.058,49,5.721,50,5.931,55,0.075,68,4.083,69,1.976,70,4.449,72,1.833,73,3.534,83,3.417,95,1.838,105,2.601,141,1.495,144,1.215,156,0.937,168,0.829,177,1.039,180,0.01,181,0.01,187,2.809,222,2.429,224,2.809,311,1.77,409,1.546,470,3.148,484,1.933,548,1.599,585,2.809,590,1.465,679,2.629,685,1.752,692,2.77,718,2.926,722,1.673,731,2.926,773,2.77,832,3.069,910,2.926,1080,1.933,1081,1.933,1085,3.821,1088,2.809,1090,2.809,1091,2.809,1196,3.069,1214,5.327,1220,3.069,1313,3.069,1483,2.809,1568,4.658,1587,3.417,1601,5.67,1650,2.429,1651,3.539,1923,3.417,1926,5.283,2027,3.417,2131,3.417,2153,6.118,2167,3.417,2192,7.355,2193,5.367,2194,5.367,2195,6.1,2196,5.367,2197,5.367,2198,7.228,2199,5.367,2200,5.367,2201,6.1,2202,5.367,2203,6.1,2204,5.367,2205,5.367,2206,3.945,2207,6.118,2208,3.945,2209,5.367,2210,5.367,2211,3.945,2212,3.945,2213,3.945,2214,3.945,2215,3.945,2216,3.945,2217,3.945,2218,3.945,2219,3.945,2220,3.945,2221,3.945,2222,3.945,2223,3.945,2224,3.945,2225,5.367,2226,6.547,2227,6.848,2228,3.945,2229,3.945,2230,6.1,2231,3.945,2232,3.945,2233,3.945,2234,3.945,2235,3.945,2236,3.945,2237,3.417,2238,3.945,2239,3.945,2240,5.367,2241,3.945,2242,3.945,2243,5.367,2244,5.367,2245,3.945,2246,3.945,2247,7.457,2248,3.945,2249,3.945,2250,3.945,2251,6.1,2252,3.945,2253,3.945,2254,3.945,2255,3.945,2256,3.945,2257,3.945,2258,5.367,2259,3.945,2260,3.945,2261,3.945,2262,3.945,2263,3.945,2264,3.945,2265,3.945,2266,3.945,2267,3.945,2268,3.945,2269,3.945,2270,3.945,2271,3.945,2272,3.945,2273,3.945,2274,3.945,2275,5.367,2276,3.945,2277,3.945,2278,3.945,2279,3.945,2280,5.367,2281,3.945,2282,3.945,2283,3.945,2284,3.945,2285,3.945,2286,3.945,2287,3.945,2288,3.945,2289,3.945,2290,3.945,2291,3.945,2292,3.945,2293,3.945,2294,3.945,2295,3.945,2296,3.945,2297,3.945,2298,3.945,2299,3.945,2300,3.945,2301,3.945,2302,3.945,2303,3.945,2304,6.547,2305,5.367,2306,3.945,2307,3.945,2308,3.945,2309,3.945,2310,3.945,2311,3.945,2312,3.945,2313,3.945,2314,3.945,2315,3.945,2316,3.945,2317,3.945,2318,3.945,2319,3.945,2320,3.945,2321,3.945,2322,3.945,2323,3.945,2324,3.945]],["title/modules.html",[184,3.5]],["body/modules.html",[33,0.014,180,0.014,181,0.014,183,4.476,184,4.145,195,4.145,222,3.87,2237,5.445,2325,6.287,2326,6.287,2327,7.188,2328,6.287]],["title/overview.html",[2329,4.597]],["body/overview.html",[1,2.367,2,1.659,33,0.016,130,1.591,136,2.083,140,2,143,1.921,146,1.921,148,1.921,150,2,151,2,152,1.921,154,1.921,155,1.921,157,2,159,1.921,161,1.921,162,1.921,164,2,166,2,167,1.921,169,1.921,171,2.17,173,1.921,175,1.921,176,1.921,180,0.012,181,0.012,182,3.074,183,5.901,184,3.074,185,3.319,186,4.037,187,3.319,188,3.626,189,4.037,190,4.037,191,4.037,192,4.037,193,4.037,194,4.037,195,4.368,196,3.612,197,4.368,198,4.368,199,2.684,200,4.078,201,1.572,202,2.684,203,5.191,204,4.037,205,4.037,291,3.074,329,1.659,460,2.541,601,2.283,830,1.976,1737,3.626,1940,3.626,2080,4.037,2084,4.037,2329,4.037,2330,4.662,2331,4.662]],["title/properties.html",[20,0.294,2098,2.804]],["body/properties.html",[20,0.399,33,0.015,180,0.014,181,0.014,2332,6.349,2333,6.349]],["title/routes.html",[291,3.5]],["body/routes.html",[33,0.014,180,0.014,181,0.014,291,4.207]],["title/miscellaneous/typealiases.html",[2180,1.993,2334,4.672]],["body/miscellaneous/typealiases.html",[19,0.22,33,0.014,35,0.248,180,0.014,181,0.014,1455,4.152,1457,5.122,1460,3.876,2180,3.876,2335,6.297,2336,6.297]],["title/miscellaneous/variables.html",[2180,1.993,2337,4.046]],["body/miscellaneous/variables.html",[0,0.875,9,0.227,19,0.185,33,0.016,35,0.277,43,1.301,44,1.091,47,4.272,67,4.613,68,3.745,69,1.956,70,3.988,72,1.734,73,3.618,144,1.203,156,1.253,177,1.022,180,0.013,181,0.013,224,3.757,318,2.585,448,2.625,604,2.877,634,2.512,662,3.247,722,2.237,738,4.57,1074,3.48,1096,4.272,1313,4.105,1568,5.251,1648,4.272,2055,4.105,2094,4.57,2095,4.57,2180,3.248,2183,4.57,2207,5.612,2337,4.57,2338,5.277,2339,5.277,2340,5.277,2341,6.479,2342,6.479,2343,5.277,2344,5.277,2345,5.277,2346,5.277,2347,5.277,2348,5.277,2349,5.277,2350,5.277]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["0.0.3",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["0.11.10",{"_index":2160,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["0.14.10",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["0.37.22",{"_index":2333,"title":{},"body":{"properties.html":{}}}],["0.4s",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2070,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2088,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2082,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2083,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2089,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":573,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"classes/Validation.html":{}}}],["1.0.0",{"_index":2130,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["1.1.25",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["1.11.3",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["1.29.0",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":2124,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2077,"title":{},"body":{"coverage.html":{}}}],["1/30",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["1/33",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2087,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2075,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2085,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2074,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2081,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1982,"title":{},"body":{"classes/Tools3D.html":{}}}],["10.2.0",{"_index":2150,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":2072,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2080,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["13/17",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2073,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2084,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["163",{"_index":2235,"title":{},"body":{"index.html":{}}}],["17",{"_index":2228,"title":{},"body":{"index.html":{}}}],["17.0.0",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["17.0.6",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["18.0.0",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["18.2.0",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["19/41",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":460,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{},"overview.html":{}}}],["2.0.12",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1981,"title":{},"body":{"classes/Tools3D.html":{},"coverage.html":{}}}],["200px",{"_index":1642,"title":{},"body":{"components/HomeComponent.html":{}}}],["2022",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["21",{"_index":2331,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2330,"title":{},"body":{"overview.html":{}}}],["24.1.1",{"_index":2136,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":2086,"title":{},"body":{"coverage.html":{}}}],["26px",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["29.7.0",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["2:30min",{"_index":1086,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["2px",{"_index":1324,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["3",{"_index":1100,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["3.0.0",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["3.14.2",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":2122,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2134,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":2076,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["36",{"_index":1050,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["3d",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3f6ea8fc22b0",{"_index":2324,"title":{},"body":{"index.html":{}}}],["4",{"_index":476,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["4.0.2",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2138,"title":{},"body":{"dependencies.html":{}}}],["4.19.2",{"_index":2128,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1980,"title":{},"body":{"classes/Tools3D.html":{}}}],["46",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["5.3",{"_index":2231,"title":{},"body":{"index.html":{}}}],["5.3.0",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["5.3.3",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["58",{"_index":2078,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":479,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["6.0.1",{"_index":2162,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":2142,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2068,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2163,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":2065,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":2079,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["73",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":2066,"title":{},"body":{"coverage.html":{}}}],["8.0.2",{"_index":2126,"title":{},"body":{"dependencies.html":{}}}],["8.4.1",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["8/12",{"_index":2069,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1737,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"overview.html":{}}}],["9.0.0",{"_index":2152,"title":{},"body":{"dependencies.html":{}}}],["9a9aa7",{"_index":1027,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["_id",{"_index":332,"title":{},"body":{"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"classes/Connection.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}}}],["_result",{"_index":1406,"title":{},"body":{"injectables/DeviceService.html":{}}}],["_state",{"_index":1946,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["absolute",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":944,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["accept",{"_index":651,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{}}}],["access",{"_index":652,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{}}}],["accessed",{"_index":1924,"title":{},"body":{"interfaces/Position.html":{}}}],["accessors",{"_index":385,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["activatedroute",{"_index":486,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":1945,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["actual",{"_index":2313,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["add",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{}}}],["addattributedictionaryform",{"_index":371,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["addconnectionform",{"_index":851,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["adddeviceform",{"_index":1111,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.status",{"_index":1195,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["added",{"_index":1185,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["addfloor",{"_index":1518,"title":{},"body":{"components/FloorListComponent.html":{}}}],["addform",{"_index":556,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["addmodel",{"_index":1841,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["addmodelform",{"_index":1720,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.status",{"_index":1767,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.value",{"_index":1768,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["address",{"_index":1505,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["addunit",{"_index":1931,"title":{},"body":{"classes/Rack.html":{}}}],["addunit(device",{"_index":1934,"title":{},"body":{"classes/Rack.html":{}}}],["again",{"_index":1072,"title":{},"body":{"injectables/CustomErrorHandler.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["alert('an",{"_index":1069,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["alias",{"_index":2277,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":2335,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":654,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{}}}],["allows",{"_index":2206,"title":{},"body":{"index.html":{}}}],["angular",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["angular.json",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/ModelEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["angular/compiler",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["angular/router",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["ans",{"_index":2295,"title":{},"body":{"index.html":{}}}],["api",{"_index":1568,"title":{},"body":{"injectables/FloorService.html":{},"guards/ResolverDevice.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apiname",{"_index":2189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apis",{"_index":2202,"title":{},"body":{"index.html":{}}}],["aplication",{"_index":2197,"title":{},"body":{"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["app.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2303,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":650,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["appmodule",{"_index":183,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":585,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"index.html":{}}}],["approutingmodule",{"_index":195,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":1095,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["array",{"_index":722,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"classes/Tools3D.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["arrow",{"_index":1283,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["async",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["asyncobservablepipecomponent",{"_index":136,"title":{"components/AsyncObservablePipeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["asyncpipe",{"_index":328,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["atlas",{"_index":2280,"title":{},"body":{"index.html":{}}}],["atleastonevalidator",{"_index":1998,"title":{},"body":{"classes/Validation.html":{}}}],["attr",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["attribute",{"_index":144,"title":{"classes/Attribute.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["attribute'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["attribute.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["attribute.component.ts",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["attribute/:id",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["attribute/add",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["attribute/edit",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributeaddcomponent",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["attributecomponent",{"_index":1258,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["attributecomponentid",{"_index":1652,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["attributecomponentobject",{"_index":1259,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["attributedictionary",{"_index":351,"title":{"classes/AttributeDictionary.html":{}},"body":{"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"coverage.html":{}}}],["attributedictionary.category",{"_index":598,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionary.component",{"_index":600,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionary.name",{"_index":597,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionary.type",{"_index":599,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionaryaddcomponent",{"_index":143,"title":{"components/AttributeDictionaryAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["attributedictionaryeditcomponent",{"_index":146,"title":{"components/AttributeDictionaryEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["attributedictionaryid",{"_index":333,"title":{},"body":{"classes/Attribute.html":{},"components/ConnectionEditComponent.html":{}}}],["attributedictionarylist",{"_index":553,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionarylistcomponent",{"_index":148,"title":{"components/AttributeDictionaryListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["attributedictionarypage",{"_index":554,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionaryservice",{"_index":196,"title":{"injectables/AttributeDictionaryService.html":{}},"body":{"modules/AppModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"coverage.html":{},"overview.html":{}}}],["attributeeditcomponent",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["attributelistcomponent",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["attributes",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["attributes.push(...new",{"_index":783,"title":{},"body":{"injectables/AttributeService.html":{}}}],["attributes/device",{"_index":767,"title":{},"body":{"injectables/AttributeService.html":{}}}],["attributes/model",{"_index":770,"title":{},"body":{"injectables/AttributeService.html":{}}}],["attributesdictionary",{"_index":668,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["attributeservice",{"_index":197,"title":{"injectables/AttributeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttributeService.html":{},"coverage.html":{},"overview.html":{}}}],["auth",{"_index":1624,"title":{},"body":{"components/HomeComponent.html":{}}}],["authorization",{"_index":1607,"title":{},"body":{"components/HomeComponent.html":{}}}],["authtoken",{"_index":1584,"title":{},"body":{"components/HomeComponent.html":{}}}],["available",{"_index":2328,"title":{},"body":{"modules.html":{}}}],["await",{"_index":969,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/HomeComponent.html":{}}}],["aws",{"_index":2306,"title":{},"body":{"index.html":{}}}],["back",{"_index":1500,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["background",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["bad",{"_index":1688,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["balancer",{"_index":1472,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["bar",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["baseurl",{"_index":604,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":1609,"title":{},"body":{"components/HomeComponent.html":{}}}],["before",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":2236,"title":{},"body":{"index.html":{}}}],["between",{"_index":832,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"index.html":{}}}],["blog",{"_index":2318,"title":{},"body":{"index.html":{}}}],["body",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["body.setattribute('data",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":1013,"title":{},"body":{"components/ConnectionListComponent.html":{},"classes/DeviceCategoryDict.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DeviceEditComponent.html":{}}}],["bottom",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["box",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["bridge",{"_index":1464,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["browse",{"_index":2327,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browserify",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["bug",{"_index":797,"title":{"classes/Bug.html":{}},"body":{"classes/Bug.html":{},"coverage.html":{}}}],["build",{"_index":2207,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildgoogle",{"_index":2278,"title":{},"body":{"index.html":{}}}],["building",{"_index":1224,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["buildings",{"_index":1211,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["call",{"_index":1051,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["called",{"_index":1094,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["calling",{"_index":1859,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["carriers",{"_index":1208,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["case",{"_index":1093,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["cases",{"_index":1221,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["catch",{"_index":775,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceEditComponent.html":{}}}],["catcherror",{"_index":659,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["catcherror(this.errorhandl",{"_index":670,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["catcherror(this.handleerror",{"_index":1655,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["catcherror(this.handleerrortemplate('clonemodel",{"_index":1914,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('createattribute",{"_index":790,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('createconnection",{"_index":1047,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["catcherror(this.handleerrortemplate('createdevice",{"_index":1424,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('createlog",{"_index":1441,"title":{},"body":{"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["catcherror(this.handleerrortemplate('createmodel",{"_index":1904,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('deleteattribute",{"_index":788,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('deleteconnection",{"_index":1046,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["catcherror(this.handleerrortemplate('deletedevice",{"_index":1423,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('deletemodel",{"_index":1902,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('getdeviceattributes",{"_index":762,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('getdeviceattributespromise",{"_index":768,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('getdevices",{"_index":1416,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('getdevicesynchro",{"_index":1422,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('getmodel",{"_index":1900,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('getmodelattributes",{"_index":771,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('postdevice",{"_index":1447,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('updateconnection",{"_index":1056,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["catcherror(this.handleerrortemplate('updatelog",{"_index":1680,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["catcherror(this.handleerrortemplate('updatemodel",{"_index":794,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ModelsService.html":{}}}],["category",{"_index":355,"title":{},"body":{"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{}}}],["categoryobj.name",{"_index":482,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["cd",{"_index":2268,"title":{},"body":{"index.html":{}}}],["ceilings",{"_index":1215,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["center",{"_index":1210,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["centers",{"_index":1203,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["chalk",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["change",{"_index":2289,"title":{},"body":{"index.html":{}}}],["changecategory",{"_index":376,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["changecategory(e",{"_index":392,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["changecomponent",{"_index":377,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["changecomponent(e",{"_index":396,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["changed",{"_index":1810,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["changedevicefrom",{"_index":853,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["changedevicefrom(e",{"_index":860,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["changedeviceto",{"_index":854,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["changedeviceto(e",{"_index":862,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["changeh",{"_index":1114,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changeh(e",{"_index":1121,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changeid",{"_index":489,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["changeid(e",{"_index":495,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/DeviceAddComponent.html":{}}}],["changemodelid",{"_index":1115,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changemodelid(e",{"_index":1124,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changename",{"_index":378,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["changename(e",{"_index":398,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{}}}],["changeobjectid",{"_index":379,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changeobjectid(e",{"_index":400,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changes",{"_index":2285,"title":{},"body":{"index.html":{}}}],["changetheme",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["changetheme(theme",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["changetype",{"_index":380,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["changetype(e",{"_index":402,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["changevalue",{"_index":1721,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["changevalue(controlname",{"_index":1726,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["changex",{"_index":1116,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changex(e",{"_index":1126,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changey",{"_index":1117,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changey(e",{"_index":1128,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["char",{"_index":978,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["character",{"_index":1193,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["characters",{"_index":477,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["check",{"_index":2023,"title":{},"body":{"classes/Validation.html":{},"dependencies.html":{}}}],["checkcontrol",{"_index":2010,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":2013,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":2012,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":2015,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":2004,"title":{},"body":{"classes/Validation.html":{}}}],["checkdistanceindevicelist",{"_index":1965,"title":{},"body":{"classes/Tools3D.html":{}}}],["checked",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":977,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["ci/di",{"_index":2312,"title":{},"body":{"index.html":{}}}],["city",{"_index":1511,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["class",{"_index":55,"title":{"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"classes/Device.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceList.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"classes/Model.html":{},"classes/ModelsList.html":{},"classes/Rack.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":329,"title":{},"body":{"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"classes/Device.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceList.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"classes/Model.html":{},"classes/ModelsList.html":{},"classes/Rack.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"overview.html":{}}}],["climates",{"_index":1243,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["clone",{"_index":590,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"index.html":{}}}],["cloneattribute",{"_index":697,"title":{},"body":{"injectables/AttributeService.html":{}}}],["cloneattribute(id",{"_index":711,"title":{},"body":{"injectables/AttributeService.html":{}}}],["cloneattributedictionary",{"_index":557,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["cloneattributedictionary(id",{"_index":564,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["cloneconnection",{"_index":987,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["cloneconnection(id",{"_index":995,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["cloned",{"_index":618,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["clonedevice",{"_index":1341,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["clonedevice(id",{"_index":1348,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["clonefloor",{"_index":1519,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["clonefloor(id",{"_index":1525,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["clonemodel",{"_index":1842,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["clonemodel(id",{"_index":1848,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["clones",{"_index":615,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["cloud",{"_index":2201,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":692,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"index.html":{}}}],["cold",{"_index":1242,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["color",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{}}}],["commonmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModelEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["complete",{"_index":684,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["compodoc/compodoc",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["component.tolowercase",{"_index":1659,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["component_template",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["componentdictionary",{"_index":372,"title":{"classes/ComponentDictionary.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"coverage.html":{}}}],["componentdictionaryitem",{"_index":812,"title":{"interfaces/ComponentDictionaryItem.html":{}},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"coverage.html":{}}}],["componentobj.name",{"_index":483,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"overview.html":{}}}],["components/3d/3d.component",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute/add",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute/attribute",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute/edit",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/connection/add",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/connection/connection",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/connection/edit",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/devices/add",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/devices/devices",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/devices/edit",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/floors/add",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/floors/edit",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/floors/floor",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/home/home.component",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/log/log.component",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["components/models/add",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/models/edit",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/models/model",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["connection",{"_index":156,"title":{"classes/Connection.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["connection'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["connection).subscribe",{"_index":903,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["connection.component.html",{"_index":850,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.scss",{"_index":849,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.ts",{"_index":848,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"coverage.html":{}}}],["connection.component.ts:101",{"_index":938,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:105",{"_index":939,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:109",{"_index":940,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:113",{"_index":942,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:117",{"_index":924,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:121",{"_index":922,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:129",{"_index":921,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:140",{"_index":923,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:20",{"_index":873,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:21",{"_index":875,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:22",{"_index":876,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:23",{"_index":877,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:24",{"_index":874,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:25",{"_index":859,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:26",{"_index":934,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:27",{"_index":931,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:28",{"_index":933,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:29",{"_index":936,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:30",{"_index":930,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:31",{"_index":919,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:34",{"_index":935,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:36",{"_index":866,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:37",{"_index":925,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:45",{"_index":870,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:49",{"_index":864,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:52",{"_index":865,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:55",{"_index":863,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:58",{"_index":861,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:62",{"_index":878,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:64",{"_index":932,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:65",{"_index":879,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:68",{"_index":881,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:71",{"_index":883,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:73",{"_index":928,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:74",{"_index":872,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:77",{"_index":867,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:81",{"_index":929,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:84",{"_index":869,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:85",{"_index":926,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:87",{"_index":871,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:91",{"_index":927,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:97",{"_index":937,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection/:id",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["connection/add",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConnectionAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connection/edit",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConnectionEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connection?._id",{"_index":841,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connection?.deviceidfrom",{"_index":846,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connection?.deviceidto",{"_index":844,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connection?.name",{"_index":842,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connectionaddcomponent",{"_index":152,"title":{"components/ConnectionAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["connectioneditcomponent",{"_index":154,"title":{"components/ConnectionEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["connectioneditcomponent.connectionservice.getconnection",{"_index":967,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connectionid",{"_index":334,"title":{},"body":{"classes/Attribute.html":{},"classes/Validation.html":{}}}],["connectioninterface",{"_index":836,"title":{"interfaces/ConnectionInterface.html":{}},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"coverage.html":{}}}],["connectionlist",{"_index":984,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionlistcomponent",{"_index":155,"title":{"components/ConnectionListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["connectionlistpage",{"_index":985,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj._id",{"_index":1022,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj.deviceidfrom",{"_index":1024,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj.deviceidto",{"_index":1026,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj.name",{"_index":1021,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connections",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["connectionservice",{"_index":858,"title":{"injectables/ConnectionService.html":{}},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"coverage.html":{}}}],["connectivity",{"_index":1202,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["console",{"_index":1064,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["console.error('an",{"_index":1684,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.error('error",{"_index":1291,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["console.error('json.parse(item",{"_index":776,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error('syncrequestclient().get",{"_index":782,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error(`attribute.service.handleerrortemplate",{"_index":795,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error(`backend",{"_index":1685,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.error(`deviceservice.handleerrortemplate",{"_index":1057,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{}}}],["console.error(`logservice.handleerrortemplate",{"_index":1690,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.error(`modelslistcomponent.handleerrortemplate",{"_index":1877,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["console.error(`modelsservice.handleerrortemplate",{"_index":1917,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.error(err",{"_index":1911,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.error(error",{"_index":1065,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["console.info('[findmodelname",{"_index":1378,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.info('clone",{"_index":1429,"title":{},"body":{"injectables/DeviceService.html":{}}}],["console.info('cloned",{"_index":1371,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.info('create",{"_index":1435,"title":{},"body":{"injectables/DeviceService.html":{}}}],["console.info('get",{"_index":1426,"title":{},"body":{"injectables/DeviceService.html":{}}}],["console.log",{"_index":966,"title":{},"body":{"components/ConnectionEditComponent.html":{},"injectables/DeviceService.html":{}}}],["console.log('connectioneditcomponent.ngoninit",{"_index":949,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["console.log('count",{"_index":2021,"title":{},"body":{"classes/Validation.html":{}}}],["console.log('create",{"_index":681,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["console.log('device",{"_index":1184,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["console.log('device.id",{"_index":785,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('device.modelid",{"_index":786,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('deviceeditcomponent.submitform",{"_index":1306,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["console.log('generate",{"_index":1987,"title":{},"body":{"classes/Tools3D.html":{}}}],["console.log('get",{"_index":676,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/ModelsService.html":{}}}],["console.log('getattributedictionary",{"_index":532,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["console.log('getattributessync.attributes",{"_index":765,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('getcontextattributes.attributes",{"_index":787,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('getmodel",{"_index":1797,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["console.log('input",{"_index":1809,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["console.log('logcomponent.getattributelogs",{"_index":1667,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.log('logcomponent.getcomponentlogs",{"_index":1660,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.log('logcomponent.getdevicelogs",{"_index":1664,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.log('logservice.createlog",{"_index":1438,"title":{},"body":{"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.log('logservice.createlog(log",{"_index":1820,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["console.log('logservice.getobjectlogs",{"_index":1670,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["console.log('resolver",{"_index":1948,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["console.log('resolvermodel",{"_index":1954,"title":{},"body":{"guards/ResolverModel.html":{}}}],["console.log('service.createmodel",{"_index":1903,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.log('submit",{"_index":1759,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["console.log('theme",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`modelservice.clonemodel",{"_index":1905,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.log(`modelservice.updatemodel",{"_index":1916,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.log(d1.tostring",{"_index":1098,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["console.log(data",{"_index":586,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["console.log(element.tostring",{"_index":1336,"title":{},"body":{"classes/DeviceList.html":{}}}],["console.log(id",{"_index":1362,"title":{},"body":{"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["console.log(json.stringify(errormessage",{"_index":695,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["console.log(root",{"_index":1628,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.md",{"_index":1621,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.warn('[devicelistcomponent",{"_index":1376,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.warn('json.parse(item",{"_index":772,"title":{},"body":{"injectables/AttributeService.html":{}}}],["const",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Validation.html":{}}}],["constructor",{"_index":337,"title":{},"body":{"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{}}}],["constructor(activatedroute",{"_index":1263,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["constructor(api",{"_index":1942,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["constructor(attributedictionaryservice",{"_index":561,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["constructor(connection",{"_index":835,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["constructor(connectionservice",{"_index":992,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["constructor(devicesservice",{"_index":1346,"title":{},"body":{"components/DeviceListComponent.html":{},"classes/Rack.html":{}}}],["constructor(devicetype",{"_index":1456,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["constructor(floorservice",{"_index":1523,"title":{},"body":{"components/FloorListComponent.html":{}}}],["constructor(formbuilder",{"_index":387,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["constructor(http",{"_index":610,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["constructor(modelsservice",{"_index":1845,"title":{},"body":{"components/ModelsListComponent.html":{},"guards/ResolverModel.html":{}}}],["constructor(name",{"_index":1075,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["constructor(ngzone",{"_index":1724,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["constructor(private",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["constructor(title",{"_index":1956,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["contain",{"_index":2225,"title":{},"body":{"index.html":{}}}],["container",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["containers",{"_index":2250,"title":{},"body":{"index.html":{}}}],["containing",{"_index":635,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["content",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["context",{"_index":729,"title":{},"body":{"injectables/AttributeService.html":{}}}],["continue",{"_index":749,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{}}}],["contributing",{"_index":2204,"title":{},"body":{"index.html":{}}}],["control",{"_index":653,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/DeviceEditComponent.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"classes/Validation.html":{}}}],["control.get('connectionid')?.value",{"_index":2020,"title":{},"body":{"classes/Validation.html":{}}}],["control.get('deviceid')?.value",{"_index":2018,"title":{},"body":{"classes/Validation.html":{}}}],["control.get('modelid')?.value",{"_index":2019,"title":{},"body":{"classes/Validation.html":{}}}],["control.setvalue(value",{"_index":1745,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["control.value",{"_index":1284,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["control?.value",{"_index":2014,"title":{},"body":{"classes/Validation.html":{}}}],["controlname",{"_index":1728,"title":{},"body":{"components/ModelAddComponent.html":{},"classes/Validation.html":{}}}],["controls",{"_index":2008,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":2011,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":2016,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":2009,"title":{},"body":{"classes/Validation.html":{}}}],["convert",{"_index":1536,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/ModelsService.html":{}}}],["coolair",{"_index":1465,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["cooling",{"_index":1245,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["copier",{"_index":1466,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["copyright",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["corp",{"_index":2229,"title":{},"body":{"index.html":{}}}],["cors",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["costs",{"_index":1246,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["count",{"_index":1977,"title":{},"body":{"classes/Tools3D.html":{}}}],["counter",{"_index":1986,"title":{},"body":{"classes/Tools3D.html":{}}}],["country",{"_index":1512,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["coverage",{"_index":2026,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covers",{"_index":2218,"title":{},"body":{"index.html":{}}}],["create",{"_index":470,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/DeviceAddComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"index.html":{}}}],["createattribute",{"_index":698,"title":{},"body":{"injectables/AttributeService.html":{}}}],["createattribute(data",{"_index":713,"title":{},"body":{"injectables/AttributeService.html":{}}}],["createattributedictionary",{"_index":606,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["createattributedictionary(data",{"_index":619,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["createattributedictionary(this.addattributedictionaryform.value",{"_index":462,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["createconnection",{"_index":1030,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["createconnection(data",{"_index":1035,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["created",{"_index":622,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["createddevice",{"_index":1434,"title":{},"body":{"injectables/DeviceService.html":{}}}],["createdevice",{"_index":1390,"title":{},"body":{"injectables/DeviceService.html":{}}}],["createdevice(data",{"_index":1398,"title":{},"body":{"injectables/DeviceService.html":{}}}],["createfloor",{"_index":1557,"title":{},"body":{"injectables/FloorService.html":{}}}],["createfloor(data",{"_index":1564,"title":{},"body":{"injectables/FloorService.html":{}}}],["createformgroup",{"_index":916,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{}}}],["createlog",{"_index":465,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelsListComponent.html":{}}}],["createlog(data",{"_index":1674,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["createmodel",{"_index":1885,"title":{},"body":{"injectables/ModelsService.html":{}}}],["createmodel(data",{"_index":1889,"title":{},"body":{"injectables/ModelsService.html":{}}}],["createrack3d(floor_x",{"_index":1995,"title":{},"body":{"classes/Tools3D.html":{}}}],["creates",{"_index":621,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["creating",{"_index":1310,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["cube'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["cubecomponent",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["currentyearlong",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":2006,"title":{},"body":{"classes/Validation.html":{}}}],["customerrorhandler",{"_index":198,"title":{"injectables/CustomErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomErrorHandler.html":{},"coverage.html":{},"overview.html":{}}}],["customers",{"_index":1235,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["d.description",{"_index":1549,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.h",{"_index":1552,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.hpos",{"_index":1555,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.x",{"_index":1550,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.xpos",{"_index":1553,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.y",{"_index":1551,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.ypos",{"_index":1554,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d1",{"_index":1097,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["d1.tostring",{"_index":1105,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["d2",{"_index":1101,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["d2.tostring",{"_index":1106,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["d2data",{"_index":1099,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["d2data.modelid",{"_index":1103,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["d2data.position",{"_index":1104,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["dark",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":409,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"index.html":{}}}],["data._id",{"_index":534,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"injectables/DeviceService.html":{},"components/ModelEditComponent.html":{}}}],["data.category",{"_index":537,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["data.component",{"_index":538,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["data.dimension.depth.tostring",{"_index":1801,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.dimension.height.tostring",{"_index":1800,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.dimension.width.tostring",{"_index":1799,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.message",{"_index":1677,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["data.name",{"_index":535,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["data.objectid",{"_index":1675,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["data.operation",{"_index":1676,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["data.replaceall('src",{"_index":1617,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.texture.back",{"_index":1803,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.bottom",{"_index":1806,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.front",{"_index":1802,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.side",{"_index":1804,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.top",{"_index":1805,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.type",{"_index":536,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["data.unshift(tmp",{"_index":900,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["database",{"_index":2209,"title":{},"body":{"index.html":{}}}],["datacenters",{"_index":2212,"title":{},"body":{"index.html":{}}}],["datamodels",{"_index":2242,"title":{},"body":{"index.html":{}}}],["date",{"_index":1645,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["date().getfullyear",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["db/mongo",{"_index":1927,"title":{},"body":{"interfaces/Position.html":{}}}],["debug",{"_index":1096,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":1281,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["default",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"index.html":{}}}],["delete",{"_index":583,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["delete(environment.baseurl",{"_index":673,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["deleteattribute",{"_index":699,"title":{},"body":{"injectables/AttributeService.html":{}}}],["deleteattribute(id",{"_index":715,"title":{},"body":{"injectables/AttributeService.html":{}}}],["deleteattributedictionary",{"_index":558,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["deleteattributedictionary(id",{"_index":566,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["deleteconnection",{"_index":988,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["deleteconnection(id",{"_index":997,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["deleted",{"_index":626,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deletedevice",{"_index":1342,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["deletedevice(id",{"_index":1350,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["deletefloor",{"_index":1520,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["deletefloor(id",{"_index":1527,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["deleteform",{"_index":1772,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["deletelog",{"_index":1691,"title":{},"body":{"injectables/LogService.html":{}}}],["deletelog(id",{"_index":1673,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["deletemodel",{"_index":1843,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deletemodel(id",{"_index":1850,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deletes",{"_index":625,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deleting",{"_index":1368,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["demo",{"_index":2195,"title":{},"body":{"index.html":{}}}],["depcheck",{"_index":2123,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2199,"title":{},"body":{"index.html":{}}}],["depth",{"_index":1497,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{}}}],["description",{"_index":331,"title":{},"body":{"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"injectables/ConnectionService.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Validation.html":{}}}],["designed",{"_index":1213,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["desktop",{"_index":1467,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["dev",{"_index":2308,"title":{},"body":{"index.html":{}}}],["development",{"_index":2309,"title":{},"body":{"index.html":{}}}],["device",{"_index":163,"title":{"classes/Device.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"coverage.html":{}}}],["device'},{'name",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["device(d2data.name",{"_index":1102,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["device._id",{"_index":780,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceListComponent.html":{}}}],["device.component",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["device.component.html",{"_index":1110,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.scss",{"_index":1109,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts",{"_index":1108,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"coverage.html":{}}}],["device.component.ts:101",{"_index":1267,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:106",{"_index":1133,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:132",{"_index":1274,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:136",{"_index":1275,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:140",{"_index":1276,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:144",{"_index":1277,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:148",{"_index":1278,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:21",{"_index":1140,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:22",{"_index":1144,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:23",{"_index":1143,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:24",{"_index":1141,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:25",{"_index":1145,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:26",{"_index":1146,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:27",{"_index":1148,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:28",{"_index":1273,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:29",{"_index":1139,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:36",{"_index":1270,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:38",{"_index":1120,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:44",{"_index":1142,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:49",{"_index":1132,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:50",{"_index":1269,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:51",{"_index":1264,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:52",{"_index":1131,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:54",{"_index":1268,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:55",{"_index":1271,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:57",{"_index":1123,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:60",{"_index":1127,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:61",{"_index":1266,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:63",{"_index":1129,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:66",{"_index":1122,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:69",{"_index":1125,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:73",{"_index":1149,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:76",{"_index":1150,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:79",{"_index":1152,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:82",{"_index":1154,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:85",{"_index":1156,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:88",{"_index":1158,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:92",{"_index":1135,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:96",{"_index":1130,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:97",{"_index":1265,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.modelid",{"_index":778,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceListComponent.html":{}}}],["device.name",{"_index":1383,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.position.h",{"_index":1386,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.position.x",{"_index":1384,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.position.y",{"_index":1385,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.service",{"_index":759,"title":{},"body":{"injectables/AttributeService.html":{}}}],["device.service.updatedevice",{"_index":1443,"title":{},"body":{"injectables/DeviceService.html":{}}}],["device/${id",{"_index":596,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["device/:id",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["device/add",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeviceAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["device/edit",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeviceEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["deviceaddcomponent",{"_index":159,"title":{"components/DeviceAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["devicecategory",{"_index":1198,"title":{"classes/DeviceCategory.html":{}},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"coverage.html":{}}}],["devicecategory.name",{"_index":1250,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["devicecategorydict",{"_index":373,"title":{"classes/DeviceCategoryDict.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/ModelAddComponent.html":{},"coverage.html":{}}}],["devicecreate",{"_index":1430,"title":{},"body":{"injectables/DeviceService.html":{}}}],["deviceeditcomponent",{"_index":161,"title":{"components/DeviceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["devicefromobj.name",{"_index":912,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["deviceid",{"_index":335,"title":{},"body":{"classes/Attribute.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Validation.html":{}}}],["deviceidfrom",{"_index":833,"title":{},"body":{"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{}}}],["deviceidto",{"_index":834,"title":{},"body":{"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{}}}],["deviceinterface",{"_index":1083,"title":{"interfaces/DeviceInterface.html":{}},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["devicelist",{"_index":852,"title":{"classes/DeviceList.html":{}},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"classes/Tools3D.html":{},"coverage.html":{}}}],["devicelistcomponent",{"_index":162,"title":{"components/DeviceListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["devicelistpage",{"_index":1339,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["devices",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["deviceservice",{"_index":199,"title":{"injectables/DeviceService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"coverage.html":{},"overview.html":{}}}],["devicesservice",{"_index":1112,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/Rack.html":{}}}],["devicetocreate",{"_index":1427,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devicetocreate._id",{"_index":1428,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devicetocreate.name",{"_index":1432,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devicetoobj.name",{"_index":913,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["devicetype",{"_index":1454,"title":{"classes/DeviceType.html":{}},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"coverage.html":{}}}],["devicetype.description",{"_index":1463,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype.name",{"_index":1461,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetypedict",{"_index":374,"title":{"classes/DeviceTypeDict.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/ModelAddComponent.html":{},"coverage.html":{}}}],["devicetypeinterface",{"_index":1460,"title":{"interfaces/DeviceTypeInterface.html":{}},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetypelisttype",{"_index":1457,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"miscellaneous/typealiases.html":{}}}],["dictionaries",{"_index":639,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dictionary'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["dictionary.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["dictionary.component.html",{"_index":370,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.scss",{"_index":369,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts",{"_index":366,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"coverage.html":{}}}],["dictionary.component.ts:100",{"_index":406,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:102",{"_index":494,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:106",{"_index":517,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:110",{"_index":518,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:114",{"_index":519,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:117",{"_index":520,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:120",{"_index":521,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:123",{"_index":504,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:126",{"_index":503,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:18",{"_index":411,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:20",{"_index":514,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:21",{"_index":512,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:22",{"_index":506,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:23",{"_index":515,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:24",{"_index":509,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:25",{"_index":508,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:26",{"_index":412,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:27",{"_index":417,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:28",{"_index":416,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:29",{"_index":415,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:30",{"_index":414,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:31",{"_index":418,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:33",{"_index":405,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:35",{"_index":391,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:38",{"_index":511,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:41",{"_index":413,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:45",{"_index":404,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:46",{"_index":499,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:56",{"_index":401,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:57",{"_index":502,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:60",{"_index":399,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:61",{"_index":501,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:64",{"_index":403,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:68",{"_index":394,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:72",{"_index":397,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:75",{"_index":492,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:76",{"_index":420,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:78",{"_index":513,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:80",{"_index":422,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:81",{"_index":505,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:82",{"_index":507,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:84",{"_index":424,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:86",{"_index":496,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:88",{"_index":426,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:90",{"_index":497,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:92",{"_index":428,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:94",{"_index":498,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.component.ts:96",{"_index":408,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:98",{"_index":493,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["dictionary.service",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{}}}],["dictionary.service.ts",{"_index":603,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"coverage.html":{}}}],["dictionary.service.ts:100",{"_index":644,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:114",{"_index":629,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:16",{"_index":612,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:23",{"_index":657,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:35",{"_index":637,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:46",{"_index":640,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:56",{"_index":624,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:66",{"_index":620,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:81",{"_index":614,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.ts",{"_index":353,"title":{},"body":{"classes/AttributeDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"coverage.html":{}}}],["dictionary.ts:10",{"_index":356,"title":{},"body":{"classes/AttributeDictionary.html":{}}}],["dictionary.ts:12",{"_index":813,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["dictionary.ts:20",{"_index":359,"title":{},"body":{"classes/AttributeDictionary.html":{},"classes/ComponentDictionary.html":{}}}],["dictionary.ts:21",{"_index":357,"title":{},"body":{"classes/AttributeDictionary.html":{}}}],["dictionary.ts:22",{"_index":360,"title":{},"body":{"classes/AttributeDictionary.html":{}}}],["dictionary.ts:23",{"_index":358,"title":{},"body":{"classes/AttributeDictionary.html":{}}}],["dictionary.ts:24",{"_index":820,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["dictionary.ts:28",{"_index":821,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["dictionary.ts:32",{"_index":815,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["dictionary.ts:37",{"_index":818,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["dictionary/:id",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["dictionary/add",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["dictionary/attribute",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["dictionary/edit",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["different",{"_index":2240,"title":{},"body":{"index.html":{}}}],["dimension",{"_index":1495,"title":{"interfaces/Dimension.html":{}},"body":{"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["dimensions",{"_index":1878,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["directive",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["directives",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["disable",{"_index":1449,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{}}}],["discuss",{"_index":2288,"title":{},"body":{"index.html":{}}}],["display",{"_index":1066,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["distance",{"_index":1985,"title":{},"body":{"classes/Tools3D.html":{}}}],["docker",{"_index":2301,"title":{},"body":{"index.html":{}}}],["document",{"_index":2321,"title":{},"body":{"index.html":{}}}],["document.body",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2027,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["during",{"_index":1313,"title":{},"body":{"components/DeviceEditComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2102,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":395,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["e._id",{"_index":1014,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["e.name",{"_index":828,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["e.target",{"_index":956,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["ec2",{"_index":2307,"title":{},"body":{"index.html":{}}}],["edit",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["editattributedictionaryform",{"_index":487,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["editconnection",{"_index":989,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["editconnection(connection",{"_index":999,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["editdeviceform",{"_index":1260,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["edited",{"_index":1855,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["editfloor",{"_index":1521,"title":{},"body":{"components/FloorListComponent.html":{}}}],["editfloor(floor",{"_index":1528,"title":{},"body":{"components/FloorListComponent.html":{}}}],["editform",{"_index":559,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/DeviceListComponent.html":{}}}],["editform(attributedictionary",{"_index":568,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["editform(device",{"_index":1351,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["editmodel",{"_index":1844,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["editmodel(model",{"_index":1852,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["editmodelform",{"_index":1770,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.status",{"_index":1826,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["edits",{"_index":1854,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["efficient",{"_index":2223,"title":{},"body":{"index.html":{}}}],["element",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["element.position.x",{"_index":1992,"title":{},"body":{"classes/Tools3D.html":{}}}],["element.position.y",{"_index":1993,"title":{},"body":{"classes/Tools3D.html":{}}}],["element.x",{"_index":1989,"title":{},"body":{"classes/Tools3D.html":{}}}],["element.y",{"_index":1991,"title":{},"body":{"classes/Tools3D.html":{}}}],["element?.devicetype",{"_index":829,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["emits",{"_index":623,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["employees",{"_index":1236,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["enabletracing",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["entities",{"_index":2262,"title":{},"body":{"index.html":{}}}],["entry",{"_index":1644,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["environment",{"_index":662,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":647,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["environment.prod.ts",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":663,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["err",{"_index":1367,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/ModelsService.html":{}}}],["error",{"_index":631,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["error('something",{"_index":1687,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["error.error",{"_index":688,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["error.error.message",{"_index":691,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["error.message",{"_index":694,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["error.status",{"_index":1683,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["error.status}\\nmessage",{"_index":693,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorevent",{"_index":690,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorhandl",{"_index":607,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorhandl(error",{"_index":627,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorhandler",{"_index":1062,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["errormessage",{"_index":687,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["eslint",{"_index":1448,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{},"dependencies.html":{}}}],["eslint/no",{"_index":1451,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{}}}],["event",{"_index":393,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["event.target",{"_index":1808,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["example",{"_index":1214,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"index.html":{}}}],["existing",{"_index":1223,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["export",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["exports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":2127,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["f",{"_index":918,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["facility",{"_index":1209,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["failed",{"_index":748,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["faker",{"_index":1159,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{},"classes/Tools3D.html":{},"dependencies.html":{}}}],["faker.company.buzzphrase",{"_index":1177,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["false",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":1292,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["fiber",{"_index":1205,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereplacements",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1379,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findcategory",{"_index":1251,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["findcategory(devicecategory",{"_index":1248,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["finddevice",{"_index":990,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["finddevice(id",{"_index":1001,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["findmodelname",{"_index":1343,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findmodelname(device.modelid",{"_index":1387,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findmodelname(id",{"_index":1352,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findtype",{"_index":808,"title":{},"body":{"classes/ComponentDictionary.html":{},"classes/DeviceTypeDict.html":{}}}],["findtype(search",{"_index":814,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["findtypebyname",{"_index":809,"title":{},"body":{"classes/ComponentDictionary.html":{},"classes/DeviceTypeDict.html":{}}}],["findtypebyname(obj",{"_index":817,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["firewall",{"_index":1468,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["first",{"_index":2275,"title":{},"body":{"index.html":{}}}],["firstvaluefrom",{"_index":943,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["firstvaluefrom(this.connectionservice.updateconnection(this.inputid",{"_index":970,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["fix",{"_index":1912,"title":{},"body":{"injectables/ModelsService.html":{}}}],["floor",{"_index":168,"title":{"interfaces/Floor.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"index.html":{}}}],["floor'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["floor._id",{"_index":1542,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.city",{"_index":1546,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.country",{"_index":1548,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.postcode",{"_index":1547,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.street",{"_index":1545,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.component",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["floor.component.ts",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["floor.name",{"_index":1544,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor/:id",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["floor/add",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floor/edit",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floor_y",{"_index":1996,"title":{},"body":{"classes/Tools3D.html":{}}}],["flooraddcomponent",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["floordimension",{"_index":1506,"title":{"interfaces/FloorDimension.html":{}},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"coverage.html":{}}}],["flooreditcomponent",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["floorlist",{"_index":1515,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floorlistcomponent",{"_index":167,"title":{"components/FloorListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["floorlistpage",{"_index":1516,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floors",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"miscellaneous/variables.html":{}}}],["floors/').pipe(retry(1",{"_index":1577,"title":{},"body":{"injectables/FloorService.html":{}}}],["floorservice",{"_index":200,"title":{"injectables/FloorService.html":{}},"body":{"modules/AppModule.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"coverage.html":{},"overview.html":{}}}],["fns",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["font",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{}}}],["forget",{"_index":2290,"title":{},"body":{"index.html":{}}}],["form",{"_index":484,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/Validation.html":{},"index.html":{}}}],["format",{"_index":732,"title":{},"body":{"injectables/AttributeService.html":{},"miscellaneous/functions.html":{}}}],["formattributedictionary",{"_index":381,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["formbuilder",{"_index":388,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["formconnection",{"_index":855,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["formcontrol",{"_index":430,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["formcontrol(0",{"_index":1137,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["formgroup",{"_index":410,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["formsmodule",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["formvalue",{"_index":968,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["formvalue._id",{"_index":971,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["found",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":2230,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":1067,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["front",{"_index":1499,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["function",{"_index":1045,"title":{},"body":{"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"coverage.html":{}}}],["functions",{"_index":2181,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":1469,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["generate",{"_index":1196,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{},"index.html":{}}}],["generatedevice",{"_index":1118,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["generatemodel",{"_index":1722,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["generaterackslist",{"_index":1966,"title":{},"body":{"classes/Tools3D.html":{}}}],["generaterackslist(count",{"_index":1975,"title":{},"body":{"classes/Tools3D.html":{}}}],["generaterandomdevicerack",{"_index":1967,"title":{},"body":{"classes/Tools3D.html":{}}}],["generic",{"_index":2257,"title":{},"body":{"index.html":{}}}],["get(environment.baseurl",{"_index":667,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["get,post,options,delete,put",{"_index":656,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{}}}],["getattribute",{"_index":700,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getattribute(id",{"_index":719,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getattributedictionaries",{"_index":608,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["getattributedictionary",{"_index":490,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["getattributedictionary(id",{"_index":500,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["getattributelogs",{"_index":1692,"title":{},"body":{"injectables/LogService.html":{}}}],["getattributelogs(id",{"_index":1665,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["getattributes",{"_index":701,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getattributessync",{"_index":702,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getcategory",{"_index":425,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["getcomponent",{"_index":427,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["getcomponentlogs",{"_index":1693,"title":{},"body":{"injectables/LogService.html":{}}}],["getcomponentlogs(component",{"_index":1657,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["getconnection",{"_index":917,"title":{},"body":{"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{}}}],["getconnection(id",{"_index":920,"title":{},"body":{"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{}}}],["getconnections",{"_index":1031,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getcontextattributes",{"_index":703,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getcontextattributes(component",{"_index":726,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getcontrol",{"_index":1723,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["getcontrol(controlname",{"_index":1730,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["getdatestring",{"_index":2091,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdeviceattributes",{"_index":704,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceattributes(id",{"_index":734,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceattributespromise",{"_index":705,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceattributespromise(id",{"_index":736,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceidfrom",{"_index":882,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["getdeviceidto",{"_index":880,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["getdevicelist",{"_index":856,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["getdevicelogs",{"_index":1694,"title":{},"body":{"injectables/LogService.html":{}}}],["getdevicelogs(id",{"_index":1662,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["getdevices",{"_index":1391,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchro",{"_index":1392,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchro(id",{"_index":1402,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchronize",{"_index":1393,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchronize(id",{"_index":1404,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getf",{"_index":941,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["getfloor",{"_index":1558,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloor(id",{"_index":1569,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloors",{"_index":1559,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloorsynchronize",{"_index":1560,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloorsynchronize(id",{"_index":1572,"title":{},"body":{"injectables/FloorService.html":{}}}],["geth",{"_index":1157,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getid",{"_index":516,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["getinput",{"_index":491,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["getissues",{"_index":1622,"title":{},"body":{"components/HomeComponent.html":{}}}],["getlogid",{"_index":1695,"title":{},"body":{"injectables/LogService.html":{}}}],["getlogid(id",{"_index":1672,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["getlogs",{"_index":1653,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["getmodel",{"_index":1773,"title":{},"body":{"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{}}}],["getmodel(id",{"_index":1892,"title":{},"body":{"injectables/ModelsService.html":{}}}],["getmodelattributes",{"_index":706,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getmodelattributes(id",{"_index":741,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getmodelid",{"_index":1151,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getmodels",{"_index":1860,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["getname",{"_index":421,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["getobjectid",{"_index":419,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["getobjectlogs",{"_index":1696,"title":{},"body":{"injectables/LogService.html":{}}}],["getobjectlogs(objectid",{"_index":1668,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["getrandom",{"_index":810,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["getrandomcategory",{"_index":1247,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["getrandomh",{"_index":1962,"title":{},"body":{"classes/Tools3D.html":{}}}],["getrandomname",{"_index":811,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["getrandomx",{"_index":1963,"title":{},"body":{"classes/Tools3D.html":{}}}],["getrandomy",{"_index":1964,"title":{},"body":{"classes/Tools3D.html":{}}}],["getting",{"_index":2190,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":423,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["getx",{"_index":1153,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["gety",{"_index":1155,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["git",{"_index":2266,"title":{},"body":{"index.html":{}}}],["github",{"_index":2304,"title":{},"body":{"index.html":{}}}],["githubissuesurl",{"_index":1585,"title":{},"body":{"components/HomeComponent.html":{}}}],["githubissuesurl2",{"_index":1586,"title":{},"body":{"components/HomeComponent.html":{}}}],["given",{"_index":730,"title":{},"body":{"injectables/AttributeService.html":{}}}],["good",{"_index":976,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["google",{"_index":2200,"title":{},"body":{"index.html":{}}}],["gotodevice",{"_index":857,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{}}}],["gotodevice(deviceid",{"_index":868,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{}}}],["graph",{"_index":2237,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphics",{"_index":2252,"title":{},"body":{"index.html":{}}}],["grids",{"_index":1227,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["grunt/glup",{"_index":2311,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1939,"title":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1940,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"overview.html":{}}}],["guide",{"_index":2291,"title":{},"body":{"index.html":{}}}],["gyp",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["h",{"_index":1081,"title":{},"body":{"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{},"index.html":{}}}],["h1",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["handle",{"_index":747,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["handleerror",{"_index":1059,"title":{},"body":{"injectables/CustomErrorHandler.html":{},"injectables/LogService.html":{}}}],["handleerror(error",{"_index":1060,"title":{},"body":{"injectables/CustomErrorHandler.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["handleerrortemplate",{"_index":707,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["handleerrortemplate(operation",{"_index":743,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["handles",{"_index":630,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["happened",{"_index":1689,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["header",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":648,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["height",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{}}}],["home",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["home'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["home.component.html",{"_index":1583,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1582,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":169,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["hpos",{"_index":1509,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["html",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["htmlinputelement).value",{"_index":446,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["http",{"_index":613,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["http://localhost:4200",{"_index":2273,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":611,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["httpclientmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1646,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["httpheaders",{"_index":649,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["httpoptions",{"_index":605,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["https",{"_index":2129,"title":{},"body":{"dependencies.html":{}}}],["https://angular.io/guide/deployment",{"_index":2274,"title":{},"body":{"index.html":{}}}],["https://api.github.com",{"_index":1598,"title":{},"body":{"components/HomeComponent.html":{}}}],["https://api.github.com/karol",{"_index":1600,"title":{},"body":{"components/HomeComponent.html":{}}}],["https://api.github.com/repositories/600698591/issues",{"_index":1604,"title":{},"body":{"components/HomeComponent.html":{}}}],["https://formly.dev",{"_index":2317,"title":{},"body":{"index.html":{}}}],["https://github.com/karol",{"_index":2226,"title":{},"body":{"index.html":{}}}],["https://medium.com/@askoropad/ngdoc",{"_index":2322,"title":{},"body":{"index.html":{}}}],["https://ultimasolution.pl",{"_index":2319,"title":{},"body":{"index.html":{}}}],["hubs",{"_index":1470,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["i'm",{"_index":2214,"title":{},"body":{"index.html":{}}}],["icons",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":474,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{}}}],["id).pipe",{"_index":1420,"title":{},"body":{"injectables/DeviceService.html":{}}}],["id)?.name",{"_index":1381,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["id.tostring",{"_index":582,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["id_new",{"_index":588,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["id_uuid",{"_index":1048,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["idcloned",{"_index":1870,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["idconed",{"_index":1907,"title":{},"body":{"injectables/ModelsService.html":{}}}],["identifier",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["idnew",{"_index":1369,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["ids",{"_index":2022,"title":{},"body":{"classes/Validation.html":{}}}],["idstring",{"_index":1535,"title":{},"body":{"components/FloorListComponent.html":{}}}],["im",{"_index":2264,"title":{},"body":{"index.html":{}}}],["img[alt='drawing",{"_index":1641,"title":{},"body":{"components/HomeComponent.html":{}}}],["implementation",{"_index":2255,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":1087,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["implements",{"_index":367,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["import",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}}}],["imports",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["including",{"_index":1921,"title":{},"body":{"interfaces/Position.html":{}}}],["incorporate",{"_index":2216,"title":{},"body":{"index.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}}}],["information",{"_index":1920,"title":{},"body":{"interfaces/Position.html":{}}}],["infrastructure",{"_index":1230,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["initialize",{"_index":1294,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["initializes",{"_index":1864,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["inject",{"_index":429,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["inject(formbuilder",{"_index":437,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["injectable",{"_index":286,"title":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":601,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{},"overview.html":{}}}],["input",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["input.ng",{"_index":1322,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["input:checked",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["input:focus",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["inputid",{"_index":488,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["insert",{"_index":2233,"title":{},"body":{"index.html":{}}}],["install",{"_index":2131,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["instanceof",{"_index":689,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["interface",{"_index":822,"title":{"interfaces/ComponentDictionaryItem.html":{},"interfaces/ConnectionInterface.html":{},"interfaces/DeviceInterface.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["interfaces",{"_index":830,"title":{},"body":{"interfaces/ComponentDictionaryItem.html":{},"interfaces/ConnectionInterface.html":{},"interfaces/DeviceInterface.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"overview.html":{}}}],["interfance",{"_index":2294,"title":{},"body":{"index.html":{}}}],["internet",{"_index":1206,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["interval",{"_index":325,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["interval(1000",{"_index":323,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["invalid",{"_index":485,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{}}}],["invalid.ng",{"_index":1323,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["inventory",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{}}}],["isapiname",{"_index":2058,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isapiname(component",{"_index":2187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscomponentname",{"_index":2059,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscomponentname(apiname",{"_index":2188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnan(number(value",{"_index":1285,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["isnan(value",{"_index":2025,"title":{},"body":{"classes/Validation.html":{}}}],["issubmitted",{"_index":375,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["issue",{"_index":2287,"title":{},"body":{"index.html":{}}}],["issue.title",{"_index":1636,"title":{},"body":{"components/HomeComponent.html":{}}}],["issue_message",{"_index":799,"title":{},"body":{"classes/Bug.html":{}}}],["issue_name",{"_index":800,"title":{},"body":{"classes/Bug.html":{}}}],["issues",{"_index":1587,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["issuetitles",{"_index":1638,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":727,"title":{},"body":{"injectables/AttributeService.html":{}}}],["jest/globals",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["jquery",{"_index":2133,"title":{},"body":{"dependencies.html":{}}}],["js/faker",{"_index":1160,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{},"classes/Tools3D.html":{},"dependencies.html":{}}}],["jsdom",{"_index":2135,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":731,"title":{},"body":{"injectables/AttributeService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"index.html":{}}}],["json.parse(item",{"_index":774,"title":{},"body":{"injectables/AttributeService.html":{}}}],["json.stringify(attributes",{"_index":766,"title":{},"body":{"injectables/AttributeService.html":{}}}],["json.stringify(createddevice",{"_index":1436,"title":{},"body":{"injectables/DeviceService.html":{}}}],["json.stringify(data",{"_index":459,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{}}}],["json.stringify(devicetocreate",{"_index":1431,"title":{},"body":{"injectables/DeviceService.html":{}}}],["json.stringify(id",{"_index":1906,"title":{},"body":{"injectables/ModelsService.html":{}}}],["json.stringify(idnew",{"_index":1372,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["json.stringify(log",{"_index":1439,"title":{},"body":{"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{}}}],["json.stringify(obj",{"_index":1382,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["json.stringify(this.addmodelform.value",{"_index":1760,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["json.stringify(this.connection",{"_index":950,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["json.stringify(this.editdeviceform.value",{"_index":1307,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["json.stringify(this.model",{"_index":1915,"title":{},"body":{"injectables/ModelsService.html":{}}}],["json.stringify(v",{"_index":682,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["json.stringify(value",{"_index":677,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["key",{"_index":963,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["kk:mm:ss.ss",{"_index":2186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lastvaluefrom",{"_index":1279,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["lastvaluefrom(this.devicesservice.updatedevice(this.editdeviceform.value",{"_index":1311,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["lastvaluefrom(this.logservice.createlog(log",{"_index":1309,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["later",{"_index":1073,"title":{},"body":{"injectables/CustomErrorHandler.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["left",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"overview.html":{}}}],["len",{"_index":979,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["less",{"_index":1824,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["light",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["light/dark",{"_index":2316,"title":{},"body":{"index.html":{}}}],["line",{"_index":1442,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{}}}],["lines",{"_index":2292,"title":{},"body":{"index.html":{}}}],["list",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["list')).catch",{"_index":972,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["list']).catch",{"_index":973,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["list'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["list.component.html",{"_index":552,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.scss",{"_index":551,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts",{"_index":550,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":1353,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:110",{"_index":1856,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:112",{"_index":1358,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:116",{"_index":1354,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:14",{"_index":572,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:15",{"_index":577,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:16",{"_index":574,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:17",{"_index":576,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:18",{"_index":1008,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:19",{"_index":571,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:20",{"_index":1007,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["list.component.ts:21",{"_index":562,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:22",{"_index":1006,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:23",{"_index":575,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:25",{"_index":993,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["list.component.ts:28",{"_index":570,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{}}}],["list.component.ts:30",{"_index":1530,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:32",{"_index":1857,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:33",{"_index":567,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:35",{"_index":1005,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:36",{"_index":1355,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:39",{"_index":1863,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:41",{"_index":1003,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:42",{"_index":1356,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:47",{"_index":1002,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:48",{"_index":565,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/DeviceListComponent.html":{}}}],["list.component.ts:49",{"_index":1851,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:51",{"_index":1526,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:53",{"_index":1004,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:57",{"_index":998,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:65",{"_index":1524,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:66",{"_index":563,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:69",{"_index":1529,"title":{},"body":{"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:70",{"_index":569,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:76",{"_index":1349,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:77",{"_index":996,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:88",{"_index":1846,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:90",{"_index":994,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["list.component.ts:94",{"_index":1000,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["list.component.ts:97",{"_index":1853,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list/attribute",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/connection",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConnectionListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/devices",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeviceListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/floor",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FloorListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/model",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["literal",{"_index":628,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Floor.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{}}}],["load",{"_index":1471,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["loadattributedictionary",{"_index":560,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["loadconnection",{"_index":991,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["loaddevices",{"_index":1344,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["loaded",{"_index":1862,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["loadfloors",{"_index":1522,"title":{},"body":{"components/FloorListComponent.html":{}}}],["loadmodels",{"_index":1119,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["loads",{"_index":1858,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["locating",{"_index":1241,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["lodash",{"_index":2137,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1063,"title":{"interfaces/Log.html":{}},"body":{"injectables/CustomErrorHandler.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"coverage.html":{}}}],["log'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["log.service",{"_index":664,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["logcomponent",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":2232,"title":{},"body":{"index.html":{}}}],["logical",{"_index":2196,"title":{},"body":{"index.html":{}}}],["login",{"_index":77,"title":{"interfaces/LogIn.html":{}},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logout",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["logparamteres",{"_index":1649,"title":{"interfaces/LogParamteres.html":{}},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logs",{"_index":1648,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"miscellaneous/variables.html":{}}}],["logs').pipe(retry(1",{"_index":1654,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["logs/attribute",{"_index":1666,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["logs/component",{"_index":1658,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["logs/device",{"_index":1663,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["logs/object",{"_index":1669,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["logservice",{"_index":201,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":909,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["looks",{"_index":975,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["main",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["major",{"_index":2284,"title":{},"body":{"index.html":{}}}],["make",{"_index":1090,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"index.html":{}}}],["map",{"_index":1414,"title":{},"body":{"injectables/DeviceService.html":{}}}],["map((res",{"_index":1421,"title":{},"body":{"injectables/DeviceService.html":{}}}],["maped",{"_index":2263,"title":{},"body":{"index.html":{}}}],["markdown",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["markets",{"_index":1234,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["match",{"_index":1216,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":2003,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.pow(math.abs(y",{"_index":1990,"title":{},"body":{"classes/Tools3D.html":{}}}],["math.round(math.random",{"_index":1979,"title":{},"body":{"classes/Tools3D.html":{}}}],["math.sqrt(math.pow(math.abs(x",{"_index":1988,"title":{},"body":{"classes/Tools3D.html":{}}}],["md",{"_index":1588,"title":{},"body":{"components/HomeComponent.html":{}}}],["memberof",{"_index":2017,"title":{},"body":{"classes/Validation.html":{}}}],["message",{"_index":467,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["method",{"_index":1089,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}}}],["miscellaneous",{"_index":2180,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mkdirp",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["model",{"_index":311,"title":{"classes/Model.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"interfaces/Dimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"coverage.html":{},"index.html":{}}}],["model'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["model._id",{"_index":1875,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["model.component.html",{"_index":1719,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.scss",{"_index":1718,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts",{"_index":1717,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"coverage.html":{}}}],["model.component.ts:100",{"_index":1792,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:104",{"_index":1776,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:116",{"_index":1782,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:18",{"_index":1738,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:19",{"_index":1784,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:20",{"_index":1785,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:21",{"_index":1787,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:22",{"_index":1788,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:23",{"_index":1786,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:24",{"_index":1790,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:25",{"_index":1775,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:29",{"_index":1783,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:30",{"_index":1789,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:36",{"_index":1779,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:51",{"_index":1741,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:52",{"_index":1740,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:53",{"_index":1739,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:54",{"_index":1725,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:59",{"_index":1742,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:63",{"_index":1732,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:67",{"_index":1727,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:68",{"_index":1777,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:74",{"_index":1731,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:78",{"_index":1729,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:91",{"_index":1781,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:96",{"_index":1791,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:99",{"_index":1733,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.dimension.depth",{"_index":1883,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.dimension.height",{"_index":1882,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.dimension.width",{"_index":1881,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.name",{"_index":1880,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model/${model._id",{"_index":1876,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model/:id",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["model/add",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModelAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["model/edit",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModelEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["modeladdcomponent",{"_index":173,"title":{"components/ModelAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["modeleditcomponent",{"_index":175,"title":{"components/ModelEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["modelid",{"_index":336,"title":{},"body":{"classes/Attribute.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Position.html":{},"classes/Validation.html":{}}}],["modellist",{"_index":1113,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/Tools3D.html":{}}}],["modellistpage",{"_index":1839,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["modelobj.name",{"_index":1194,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["models",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["models.service",{"_index":760,"title":{},"body":{"injectables/AttributeService.html":{}}}],["modelservice",{"_index":709,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceAddComponent.html":{}}}],["modelslist",{"_index":1827,"title":{"classes/ModelsList.html":{}},"body":{"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"coverage.html":{}}}],["modelslistcomponent",{"_index":176,"title":{"components/ModelsListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["modelsservice",{"_index":202,"title":{"injectables/ModelsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AttributeService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverModel.html":{},"coverage.html":{},"overview.html":{}}}],["modem",{"_index":1473,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["module",{"_index":182,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"classes/Validation.html":{},"overview.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mondodb",{"_index":2265,"title":{},"body":{"index.html":{}}}],["mongo",{"_index":2227,"title":{},"body":{"index.html":{}}}],["mongoatlas|oracle",{"_index":2238,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["mongodb|oracle",{"_index":2297,"title":{},"body":{"index.html":{}}}],["motivation",{"_index":2213,"title":{},"body":{"index.html":{}}}],["ms",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["multiple",{"_index":1204,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["multiplexer",{"_index":1474,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["mytheme",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["name/address",{"_index":1543,"title":{},"body":{"components/FloorListComponent.html":{}}}],["nav",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["navigates",{"_index":1847,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["navigatetodevicelist",{"_index":1262,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["need",{"_index":1937,"title":{},"body":{"classes/Rack.html":{}}}],["networks",{"_index":1228,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["never",{"_index":957,"title":{},"body":{"components/ConnectionEditComponent.html":{},"injectables/FloorService.html":{}}}],["new",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"coverage.html":{}}}],["new_id",{"_index":1872,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["newly",{"_index":1849,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["newvalue",{"_index":1807,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["next",{"_index":679,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"index.html":{}}}],["ng",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngbpopovermodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["ngdoc",{"_index":2320,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["ngoninit",{"_index":382,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["ngx",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["ngxpaginationmodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["ngzone",{"_index":389,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["node",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["nosql",{"_index":2244,"title":{},"body":{"index.html":{}}}],["now",{"_index":1639,"title":{},"body":{"components/HomeComponent.html":{}}}],["npm",{"_index":2153,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["null",{"_index":341,"title":{},"body":{"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{},"classes/Validation.html":{}}}],["number",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}}}],["number(value",{"_index":1286,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["numbers",{"_index":1825,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["numbervalidator",{"_index":1261,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["obj",{"_index":819,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["object",{"_index":634,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":386,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["objectname",{"_index":1389,"title":{},"body":{"injectables/DeviceService.html":{}}}],["objects",{"_index":723,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["observable",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["observable|async",{"_index":321,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["observer",{"_index":326,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["occupies",{"_index":1222,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["occurred",{"_index":1071,"title":{},"body":{"injectables/CustomErrorHandler.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["octokit",{"_index":1623,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["octokit.request('get",{"_index":1627,"title":{},"body":{"components/HomeComponent.html":{}}}],["octokit.rest.users.getauthenticated",{"_index":1629,"title":{},"body":{"components/HomeComponent.html":{}}}],["octokit/core",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["of(new",{"_index":1417,"title":{},"body":{"injectables/DeviceService.html":{}}}],["of(result",{"_index":796,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["onchange",{"_index":1774,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["onchange(event",{"_index":1780,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["one",{"_index":2001,"title":{},"body":{"classes/Validation.html":{}}}],["onerror",{"_index":1589,"title":{},"body":{"components/HomeComponent.html":{}}}],["onerror(data",{"_index":1593,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninit",{"_index":368,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["onload",{"_index":1590,"title":{},"body":{"components/HomeComponent.html":{}}}],["onload(data",{"_index":1595,"title":{},"body":{"components/HomeComponent.html":{}}}],["onlyself",{"_index":447,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["opacity",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":2286,"title":{},"body":{"index.html":{}}}],["operating",{"_index":1922,"title":{},"body":{"interfaces/Position.html":{}}}],["operation",{"_index":469,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["optional",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1606,"title":{},"body":{"components/HomeComponent.html":{}}}],["oracle",{"_index":1926,"title":{},"body":{"interfaces/Position.html":{},"index.html":{}}}],["orbitcontrols",{"_index":2168,"title":{},"body":{"dependencies.html":{}}}],["origin",{"_index":655,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{}}}],["otherwise",{"_index":1681,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["out",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overhead",{"_index":1219,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["override",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["overview",{"_index":2329,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1632,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":2098,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":2305,"title":{},"body":{"index.html":{}}}],["paginate",{"_index":1630,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagination",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["param",{"_index":671,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Validation.html":{}}}],["parameter",{"_index":1191,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parametric",{"_index":2256,"title":{},"body":{"index.html":{}}}],["path",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["pdu",{"_index":1475,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["permissions",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["personal",{"_index":1625,"title":{},"body":{"components/HomeComponent.html":{}}}],["physical",{"_index":1229,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["pipe",{"_index":320,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{},"injectables/AttributeService.html":{}}}],["pipe'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["pipe(catcherror(this.handleerrortemplate('updatedevice",{"_index":1445,"title":{},"body":{"injectables/DeviceService.html":{}}}],["pipe(retry(1",{"_index":669,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["pipe/pipe.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["platform",{"_index":2224,"title":{},"body":{"index.html":{}}}],["play",{"_index":1238,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["please",{"_index":910,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"injectables/CustomErrorHandler.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"index.html":{}}}],["podman",{"_index":2249,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["pop",{"_index":1829,"title":{},"body":{"classes/ModelsList.html":{}}}],["position",{"_index":95,"title":{"interfaces/Position.html":{}},"body":{"components/AppComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"interfaces/Position.html":{},"coverage.html":{},"index.html":{}}}],["post",{"_index":674,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{}}}],["post(`${environment.baseurl}/devices",{"_index":1446,"title":{},"body":{"injectables/DeviceService.html":{}}}],["post(`${environment.baseurl}/logs",{"_index":1440,"title":{},"body":{"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["post(environment.baseurl",{"_index":789,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["postcode",{"_index":1513,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["postdevice",{"_index":1394,"title":{},"body":{"injectables/DeviceService.html":{}}}],["postdevice(data",{"_index":1408,"title":{},"body":{"injectables/DeviceService.html":{}}}],["power",{"_index":1477,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["preiskorn/3d",{"_index":1601,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["prepared",{"_index":2246,"title":{},"body":{"index.html":{}}}],["print",{"_index":1328,"title":{},"body":{"classes/DeviceList.html":{}}}],["printer",{"_index":1478,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["prismjs",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":438,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"classes/Tools3D.html":{}}}],["probe",{"_index":1479,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["process",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["production",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programming",{"_index":2215,"title":{},"body":{"index.html":{}}}],["project",{"_index":2192,"title":{},"body":{"index.html":{}}}],["projects",{"_index":2323,"title":{},"body":{"index.html":{}}}],["promise",{"_index":739,"title":{},"body":{"injectables/AttributeService.html":{},"components/HomeComponent.html":{},"components/ModelsListComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"properties.html":{}}}],["property",{"_index":1282,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["provide",{"_index":911,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["provided",{"_index":1207,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["providedin",{"_index":665,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["providemarkdown",{"_index":1613,"title":{},"body":{"components/HomeComponent.html":{}}}],["providerouter",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["providers",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/ModelEditComponent.html":{},"overview.html":{}}}],["proximity",{"_index":1233,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["pull",{"_index":2281,"title":{},"body":{"index.html":{}}}],["push",{"_index":1329,"title":{},"body":{"classes/DeviceList.html":{},"classes/ModelsList.html":{}}}],["push(device",{"_index":1333,"title":{},"body":{"classes/DeviceList.html":{}}}],["push(model",{"_index":1833,"title":{},"body":{"classes/ModelsList.html":{}}}],["put",{"_index":686,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{}}}],["put(environment.baseurl",{"_index":793,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["rack",{"_index":1928,"title":{"classes/Rack.html":{}},"body":{"classes/Rack.html":{},"classes/Tools3D.html":{},"coverage.html":{}}}],["racks",{"_index":1218,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/Tools3D.html":{}}}],["radius",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["random",{"_index":1197,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["reactiveformsmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["readme.md",{"_index":2315,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["recognize",{"_index":2310,"title":{},"body":{"index.html":{}}}],["record",{"_index":1134,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["red",{"_index":1326,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["reduce",{"_index":1244,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["register",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["related",{"_index":2221,"title":{},"body":{"index.html":{}}}],["relational",{"_index":2243,"title":{},"body":{"index.html":{}}}],["relativeto",{"_index":1364,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["relevant",{"_index":2219,"title":{},"body":{"index.html":{}}}],["removed",{"_index":1189,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["render",{"_index":2254,"title":{},"body":{"index.html":{}}}],["rendudance",{"_index":1936,"title":{},"body":{"classes/Rack.html":{}}}],["repeaters",{"_index":1480,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["replace",{"_index":1913,"title":{},"body":{"injectables/ModelsService.html":{}}}],["replaced",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repo",{"_index":1633,"title":{},"body":{"components/HomeComponent.html":{}}}],["repos",{"_index":2203,"title":{},"body":{"index.html":{}}}],["repos/{owner}/{repo}/issues",{"_index":1631,"title":{},"body":{"components/HomeComponent.html":{}}}],["representation",{"_index":2210,"title":{},"body":{"index.html":{}}}],["representing",{"_index":733,"title":{},"body":{"injectables/AttributeService.html":{}}}],["represents",{"_index":354,"title":{},"body":{"classes/AttributeDictionary.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["request",{"_index":633,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"dependencies.html":{}}}],["request/dist",{"_index":757,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/DeviceService.html":{}}}],["requestdata",{"_index":1444,"title":{},"body":{"injectables/DeviceService.html":{}}}],["requested",{"_index":1608,"title":{},"body":{"components/HomeComponent.html":{}}}],["requests",{"_index":2282,"title":{},"body":{"index.html":{}}}],["required",{"_index":475,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["requirements",{"_index":1217,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["requires",{"_index":1226,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["res",{"_index":1190,"title":{},"body":{"components/DeviceAddComponent.html":{},"injectables/DeviceService.html":{}}}],["res._id",{"_index":1186,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["reset",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["resolve(route",{"_index":1944,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["resolvedevicelist",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["resolvemodellist",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["resolverdevice",{"_index":273,"title":{"guards/ResolverDevice.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/ResolverDevice.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["resolvermodel",{"_index":274,"title":{"guards/ResolverModel.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["resolves",{"_index":740,"title":{},"body":{"injectables/AttributeService.html":{}}}],["response",{"_index":632,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["response.data.map((issue",{"_index":1635,"title":{},"body":{"components/HomeComponent.html":{}}}],["responsetype",{"_index":1615,"title":{},"body":{"components/HomeComponent.html":{}}}],["rest",{"_index":2245,"title":{},"body":{"index.html":{}}}],["rest.js",{"_index":1634,"title":{},"body":{"components/HomeComponent.html":{}}}],["result",{"_index":744,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["result._id",{"_index":1437,"title":{},"body":{"injectables/DeviceService.html":{}}}],["results",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":641,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["retrieved",{"_index":642,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["retrieves",{"_index":638,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["retrieving",{"_index":1647,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["retry",{"_index":660,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["retry(1",{"_index":761,"title":{},"body":{"injectables/AttributeService.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"classes/Validation.html":{}}}],["returned",{"_index":1686,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2161,"title":{},"body":{"dependencies.html":{}}}],["roads",{"_index":1232,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["role",{"_index":1239,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["roles",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["root'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["route",{"_index":1347,"title":{},"body":{"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["route.id",{"_index":1377,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["router",{"_index":390,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["routermodule",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routermodule.forroot",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routerstate",{"_index":1959,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["routerstatesnapshot",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routes",{"_index":291,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["routing.module.ts:51",{"_index":1957,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["routing.module.ts:56",{"_index":1958,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["run",{"_index":2198,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":327,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":661,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["sandbox",{"_index":2217,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2151,"title":{},"body":{"dependencies.html":{}}}],["scope",{"_index":2125,"title":{},"body":{"dependencies.html":{}}}],["sdata",{"_index":1679,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["search",{"_index":816,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["searchcategory",{"_index":1249,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["security",{"_index":1481,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["select",{"_index":1765,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["selected",{"_index":1766,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["selectedattributedictionary",{"_index":555,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["selectedconnection",{"_index":986,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["selecteddevice",{"_index":1340,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["selectedfloor",{"_index":1517,"title":{},"body":{"components/FloorListComponent.html":{}}}],["selectedmodel",{"_index":1840,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["selecting",{"_index":1240,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["separately",{"_index":2270,"title":{},"body":{"index.html":{}}}],["serve",{"_index":2302,"title":{},"body":{"index.html":{}}}],["server",{"_index":718,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"injectables/ModelsService.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":1861,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["services",{"_index":1237,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["services/attribute",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{}}}],["services/attribute.service",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["services/connection.service",{"_index":886,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["services/device.service",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{}}}],["services/errorhandler.service",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["services/floor.service",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"components/FloorListComponent.html":{}}}],["services/log.service",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"classes/Rack.html":{}}}],["services/models.service",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"classes/Rack.html":{},"guards/ResolverModel.html":{}}}],["set",{"_index":1650,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Validation.html":{},"index.html":{}}}],["shadow",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["shaper",{"_index":1485,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["shared",{"_index":2007,"title":{},"body":{"classes/Validation.html":{}}}],["shared/attribute",{"_index":432,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{}}}],["shared/component",{"_index":433,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["shared/connection",{"_index":887,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["shared/device",{"_index":758,"title":{},"body":{"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{},"classes/Tools3D.html":{}}}],["shared/devicecategories",{"_index":434,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["shared/devicetypes",{"_index":435,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["shared/floor",{"_index":1531,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["shared/model",{"_index":1161,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverModel.html":{},"classes/Tools3D.html":{}}}],["shared/validation",{"_index":1162,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["show",{"_index":1651,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"index.html":{}}}],["showing",{"_index":2293,"title":{},"body":{"index.html":{}}}],["side",{"_index":1501,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["simple",{"_index":2222,"title":{},"body":{"index.html":{}}}],["site",{"_index":1225,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["size",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{}}}],["skiplocationchange",{"_index":1366,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["slider",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["slider:before",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":1028,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["solid",{"_index":1325,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["solution",{"_index":2205,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}}}],["spatial",{"_index":2208,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1656,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["specifically",{"_index":1212,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["specified",{"_index":616,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["specify",{"_index":523,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{}}}],["specyfice",{"_index":2261,"title":{},"body":{"index.html":{}}}],["square",{"_index":2298,"title":{},"body":{"index.html":{}}}],["src/.../add",{"_index":2184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../device.ts",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../devicetypes.ts",{"_index":2336,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.component.ts",{"_index":2183,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":2182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/3d/3d.component.ts",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["src/app/components/3d/3dtools.ts",{"_index":1961,"title":{},"body":{"classes/Tools3D.html":{},"coverage.html":{}}}],["src/app/components/3d/3dtools.ts:13",{"_index":1973,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:14",{"_index":1968,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:15",{"_index":1972,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:17",{"_index":1970,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:18",{"_index":1971,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:19",{"_index":1969,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:21",{"_index":1974,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:45",{"_index":1978,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:59",{"_index":1976,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/attribute",{"_index":365,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"coverage.html":{}}}],["src/app/components/attribute/add",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/attribute/attribute",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["src/app/components/attribute/edit",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["src/app/components/connection/add",{"_index":847,"title":{},"body":{"components/ConnectionAddComponent.html":{},"coverage.html":{}}}],["src/app/components/connection/connection",{"_index":983,"title":{},"body":{"components/ConnectionListComponent.html":{},"coverage.html":{}}}],["src/app/components/connection/edit",{"_index":915,"title":{},"body":{"components/ConnectionEditComponent.html":{},"coverage.html":{}}}],["src/app/components/devices/add",{"_index":1107,"title":{},"body":{"components/DeviceAddComponent.html":{},"coverage.html":{}}}],["src/app/components/devices/devices",{"_index":1338,"title":{},"body":{"components/DeviceListComponent.html":{},"coverage.html":{}}}],["src/app/components/devices/edit",{"_index":1257,"title":{},"body":{"components/DeviceEditComponent.html":{},"coverage.html":{}}}],["src/app/components/floors/add",{"_index":2049,"title":{},"body":{"coverage.html":{}}}],["src/app/components/floors/edit",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["src/app/components/floors/floor",{"_index":1514,"title":{},"body":{"components/FloorListComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1581,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:12",{"_index":1612,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:13",{"_index":1603,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:14",{"_index":1605,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:15",{"_index":1597,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:16",{"_index":1599,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:17",{"_index":1591,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":1611,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:32",{"_index":1592,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:44",{"_index":1596,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:48",{"_index":1594,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/log/log.component.ts",{"_index":2055,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/models/add",{"_index":1716,"title":{},"body":{"components/ModelAddComponent.html":{},"coverage.html":{}}}],["src/app/components/models/edit",{"_index":1769,"title":{},"body":{"components/ModelEditComponent.html":{},"coverage.html":{}}}],["src/app/components/models/model",{"_index":1838,"title":{},"body":{"components/ModelsListComponent.html":{},"coverage.html":{}}}],["src/app/pipe/pipe.component.ts",{"_index":319,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{},"coverage.html":{}}}],["src/app/pipe/pipe.component.ts:11",{"_index":324,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["src/app/resolverdevice.ts",{"_index":1941,"title":{},"body":{"guards/ResolverDevice.html":{},"coverage.html":{}}}],["src/app/resolverdevice.ts:10",{"_index":1943,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["src/app/resolverdevice.ts:14",{"_index":1947,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["src/app/resolvermodel.ts",{"_index":1950,"title":{},"body":{"guards/ResolverModel.html":{},"coverage.html":{}}}],["src/app/resolvermodel.ts:10",{"_index":1951,"title":{},"body":{"guards/ResolverModel.html":{}}}],["src/app/resolvermodel.ts:13",{"_index":1953,"title":{},"body":{"guards/ResolverModel.html":{}}}],["src/app/services/attribute",{"_index":602,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"coverage.html":{}}}],["src/app/services/attribute.service.ts",{"_index":696,"title":{},"body":{"injectables/AttributeService.html":{},"coverage.html":{}}}],["src/app/services/attribute.service.ts:107",{"_index":728,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:139",{"_index":720,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:150",{"_index":716,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:161",{"_index":714,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:173",{"_index":712,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:193",{"_index":752,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:20",{"_index":710,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:204",{"_index":717,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:222",{"_index":746,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:30",{"_index":753,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:40",{"_index":721,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:53",{"_index":724,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:66",{"_index":735,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:80",{"_index":737,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:95",{"_index":742,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/connection.service.ts",{"_index":1029,"title":{},"body":{"injectables/ConnectionService.html":{},"coverage.html":{}}}],["src/app/services/connection.service.ts:103",{"_index":1043,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:114",{"_index":1038,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:134",{"_index":1041,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:17",{"_index":1033,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:26",{"_index":1044,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:36",{"_index":1040,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:47",{"_index":1039,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:58",{"_index":1037,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:69",{"_index":1036,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:81",{"_index":1034,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/device.service.ts",{"_index":1388,"title":{},"body":{"injectables/DeviceService.html":{},"coverage.html":{}}}],["src/app/services/device.service.ts:114",{"_index":1409,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:121",{"_index":1407,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:16",{"_index":1412,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:17",{"_index":1396,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:21",{"_index":1413,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:30",{"_index":1401,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:36",{"_index":1405,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:40",{"_index":1403,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:49",{"_index":1400,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:55",{"_index":1399,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:65",{"_index":1397,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:99",{"_index":1411,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/errorhandler.service.ts",{"_index":1058,"title":{},"body":{"injectables/CustomErrorHandler.html":{},"coverage.html":{}}}],["src/app/services/errorhandler.service.ts:7",{"_index":1061,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["src/app/services/floor.service.ts",{"_index":1556,"title":{},"body":{"injectables/FloorService.html":{},"coverage.html":{}}}],["src/app/services/floor.service.ts:111",{"_index":1575,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:122",{"_index":1567,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:18",{"_index":1562,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:26",{"_index":1576,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:36",{"_index":1571,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:45",{"_index":1573,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:54",{"_index":1570,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:65",{"_index":1566,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:76",{"_index":1565,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:88",{"_index":1563,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/log.service.ts",{"_index":1643,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/services/log.service.ts:106",{"_index":1706,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:120",{"_index":1704,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:131",{"_index":1700,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:142",{"_index":1699,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:161",{"_index":1709,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:176",{"_index":1707,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:191",{"_index":1708,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:49",{"_index":1710,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:50",{"_index":1698,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:54",{"_index":1711,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:64",{"_index":1705,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:73",{"_index":1702,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:84",{"_index":1703,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:95",{"_index":1701,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/models.service.ts",{"_index":1884,"title":{},"body":{"injectables/ModelsService.html":{},"coverage.html":{}}}],["src/app/services/models.service.ts:107",{"_index":1897,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:119",{"_index":1895,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:16",{"_index":1898,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:17",{"_index":1887,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:25",{"_index":1899,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:35",{"_index":1894,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:45",{"_index":1893,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:56",{"_index":1891,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:67",{"_index":1890,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:79",{"_index":1888,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/shared/attribute",{"_index":352,"title":{},"body":{"classes/AttributeDictionary.html":{},"coverage.html":{}}}],["src/app/shared/attribute.ts",{"_index":330,"title":{},"body":{"classes/Attribute.html":{},"coverage.html":{}}}],["src/app/shared/attribute.ts:17",{"_index":339,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:18",{"_index":343,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:19",{"_index":344,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:20",{"_index":342,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:21",{"_index":340,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:22",{"_index":338,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/bug.ts",{"_index":798,"title":{},"body":{"classes/Bug.html":{},"coverage.html":{}}}],["src/app/shared/bug.ts:12",{"_index":802,"title":{},"body":{"classes/Bug.html":{}}}],["src/app/shared/bug.ts:13",{"_index":803,"title":{},"body":{"classes/Bug.html":{}}}],["src/app/shared/bug.ts:14",{"_index":801,"title":{},"body":{"classes/Bug.html":{}}}],["src/app/shared/component",{"_index":807,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"coverage.html":{}}}],["src/app/shared/connection.ts",{"_index":831,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"coverage.html":{}}}],["src/app/shared/connection.ts:22",{"_index":838,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/connection.ts:23",{"_index":840,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/connection.ts:24",{"_index":839,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/connection.ts:25",{"_index":837,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/device.ts",{"_index":1074,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/device.ts:28",{"_index":1077,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:29",{"_index":1079,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:30",{"_index":1078,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:31",{"_index":1076,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:41",{"_index":1082,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/devicecategories.ts",{"_index":1199,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"coverage.html":{}}}],["src/app/shared/devicecategories.ts:12",{"_index":1252,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:33",{"_index":1255,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:37",{"_index":1253,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:41",{"_index":1254,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:45",{"_index":1256,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:7",{"_index":1201,"title":{},"body":{"classes/DeviceCategory.html":{}}}],["src/app/shared/devicecategories.ts:8",{"_index":1200,"title":{},"body":{"classes/DeviceCategory.html":{}}}],["src/app/shared/deviceslist.ts",{"_index":1327,"title":{},"body":{"classes/DeviceList.html":{},"coverage.html":{}}}],["src/app/shared/deviceslist.ts:15",{"_index":1330,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/deviceslist.ts:17",{"_index":1332,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/deviceslist.ts:23",{"_index":1331,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/deviceslist.ts:27",{"_index":1334,"title":{},"body":{"classes/DeviceList.html":{}}}],["src/app/shared/devicetypes.ts",{"_index":1455,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/devicetypes.ts:19",{"_index":1459,"title":{},"body":{"classes/DeviceType.html":{}}}],["src/app/shared/devicetypes.ts:20",{"_index":1458,"title":{},"body":{"classes/DeviceType.html":{}}}],["src/app/shared/devicetypes.ts:29",{"_index":1489,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:58",{"_index":1492,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:62",{"_index":1493,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:66",{"_index":1494,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:70",{"_index":1490,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:75",{"_index":1491,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/floor.ts",{"_index":1504,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"coverage.html":{}}}],["src/app/shared/model.ts",{"_index":1496,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["src/app/shared/model.ts:21",{"_index":1713,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/model.ts:22",{"_index":1715,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/model.ts:23",{"_index":1714,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/model.ts:24",{"_index":1712,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/modelslist.ts",{"_index":1828,"title":{},"body":{"classes/ModelsList.html":{},"coverage.html":{}}}],["src/app/shared/modelslist.ts:11",{"_index":1831,"title":{},"body":{"classes/ModelsList.html":{}}}],["src/app/shared/modelslist.ts:15",{"_index":1834,"title":{},"body":{"classes/ModelsList.html":{}}}],["src/app/shared/modelslist.ts:19",{"_index":1832,"title":{},"body":{"classes/ModelsList.html":{}}}],["src/app/shared/modelslist.ts:9",{"_index":1830,"title":{},"body":{"classes/ModelsList.html":{}}}],["src/app/shared/rack.ts",{"_index":1929,"title":{},"body":{"classes/Rack.html":{},"coverage.html":{}}}],["src/app/shared/rack.ts:25",{"_index":1933,"title":{},"body":{"classes/Rack.html":{}}}],["src/app/shared/rack.ts:26",{"_index":1932,"title":{},"body":{"classes/Rack.html":{}}}],["src/app/shared/rack.ts:34",{"_index":1935,"title":{},"body":{"classes/Rack.html":{}}}],["src/app/shared/utils.ts",{"_index":2090,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/validation.ts",{"_index":1997,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/app/shared/validation.ts:23",{"_index":2005,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/validation.ts:48",{"_index":2000,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/validation.ts:68",{"_index":2002,"title":{},"body":{"classes/Validation.html":{}}}],["src/environments/environment.prod.ts",{"_index":2094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2194,"title":{},"body":{"index.html":{}}}],["start:json",{"_index":2271,"title":{},"body":{"index.html":{}}}],["start:nggoto",{"_index":2272,"title":{},"body":{"index.html":{}}}],["started",{"_index":2191,"title":{"index.html":{}},"body":{}}],["starting",{"_index":2300,"title":{},"body":{"index.html":{}}}],["startor",{"_index":2269,"title":{},"body":{"index.html":{}}}],["state",{"_index":1952,"title":{},"body":{"guards/ResolverModel.html":{}}}],["statements",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1999,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":636,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["storage",{"_index":2241,"title":{},"body":{"index.html":{}}}],["store",{"_index":1919,"title":{},"body":{"interfaces/Position.html":{}}}],["stored",{"_index":2258,"title":{},"body":{"index.html":{}}}],["stream",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["street",{"_index":1510,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["string",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["string(id",{"_index":1901,"title":{},"body":{"injectables/ModelsService.html":{}}}],["string(v._id",{"_index":1910,"title":{},"body":{"injectables/ModelsService.html":{}}}],["stringify",{"_index":1345,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["stringify(obj",{"_index":1357,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["strore",{"_index":2299,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1923,"title":{},"body":{"interfaces/Position.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["submission",{"_index":1314,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["submitform",{"_index":383,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["submitted",{"_index":1771,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["subscribe",{"_index":463,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["subscribe((data",{"_index":1015,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/HomeComponent.html":{}}}],["subscription",{"_index":1778,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["such",{"_index":1231,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["super",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["support",{"_index":2325,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1091,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"index.html":{}}}],["svg",{"_index":2326,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2248,"title":{},"body":{"index.html":{}}}],["switch",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"index.html":{}}}],["sync",{"_index":756,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"dependencies.html":{}}}],["synchronously",{"_index":725,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/FloorService.html":{}}}],["syncrequestclient",{"_index":754,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{}}}],["syncrequestclient().get(environment.baseurl",{"_index":1418,"title":{},"body":{"injectables/DeviceService.html":{},"injectables/FloorService.html":{}}}],["syncrequestclient().get(url",{"_index":764,"title":{},"body":{"injectables/AttributeService.html":{}}}],["syncrequestclient().get(url_device",{"_index":784,"title":{},"body":{"injectables/AttributeService.html":{}}}],["syncrequestclient().get(url_model",{"_index":781,"title":{},"body":{"injectables/AttributeService.html":{}}}],["system",{"_index":1476,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["systems",{"_index":1220,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"index.html":{}}}],["t",{"_index":745,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["table",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":522,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["tap((data",{"_index":531,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["tasks",{"_index":2314,"title":{},"body":{"index.html":{}}}],["tbc",{"_index":2279,"title":{},"body":{"index.html":{}}}],["technology",{"_index":2193,"title":{},"body":{"index.html":{}}}],["telephone",{"_index":1482,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["templatepagetitlestrategy",{"_index":294,"title":{"injectables/TemplatePageTitleStrategy.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["terminal",{"_index":1483,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"index.html":{}}}],["test",{"_index":1092,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["tests",{"_index":1088,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"index.html":{}}}],["text",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["texture",{"_index":1498,"title":{"interfaces/Texture.html":{}},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["textures",{"_index":1879,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["theme",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["themeswitch",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["then((issuetitles",{"_index":1637,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._id",{"_index":345,"title":{},"body":{"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":525,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.addattributedictionaryform",{"_index":439,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('category",{"_index":456,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('component",{"_index":457,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('id')?.value",{"_index":466,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('name",{"_index":454,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('objectid",{"_index":453,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('type",{"_index":455,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.getrawvalue",{"_index":468,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.value.name",{"_index":478,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addconnectionform",{"_index":888,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('deviceidfrom",{"_index":897,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('deviceidto",{"_index":896,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('id",{"_index":894,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('id')?.value",{"_index":904,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('name",{"_index":895,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.value",{"_index":905,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.adddeviceform.controls.modelid.setvalue",{"_index":1181,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.controls.name.setvalue(faker.company.name",{"_index":1176,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.controls.position.controls.h.setvalue(faker.number.int(10",{"_index":1180,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.controls.position.controls.x.setvalue(faker.number.int(10",{"_index":1178,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.controls.position.controls.y.setvalue(faker.number.int(10",{"_index":1179,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('id",{"_index":1170,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('modelid",{"_index":1172,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('name",{"_index":1171,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position')?.get('h",{"_index":1175,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position')?.get('x",{"_index":1173,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position')?.get('y",{"_index":1174,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.value",{"_index":1187,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.addmodelform.controls.category",{"_index":1757,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.category.setvalue(this.devicecategorydict.getrandomname",{"_index":1758,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.dimension.controls.depth",{"_index":1749,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.dimension.controls.depth.setvalue(faker.number.int(10).tostring",{"_index":1750,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.dimension.controls.height",{"_index":1751,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.dimension.controls.height.setvalue(faker.number.int(10).tostring",{"_index":1752,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.dimension.controls.width",{"_index":1753,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.dimension.controls.width.setvalue(faker.number.int(10).tostring",{"_index":1754,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name",{"_index":1747,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name.setvalue(faker.company.name",{"_index":1748,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.type",{"_index":1755,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.type.setvalue(this.devicetypedict.getrandomname",{"_index":1756,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.type.status",{"_index":1764,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(controlname",{"_index":1746,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.value",{"_index":1762,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.api.getdevices",{"_index":1949,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["this.attributecomponent",{"_index":1288,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.attributedictionary",{"_index":527,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.attributedictionaryid",{"_index":349,"title":{},"body":{"classes/Attribute.html":{}}}],["this.attributedictionarylist",{"_index":580,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice",{"_index":461,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["this.attributedictionaryservice.cloneattributedictionary(id",{"_index":589,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice.deleteattributedictionary(id).subscribe((data",{"_index":584,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice.getattributedictionaries().subscribe((data",{"_index":579,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice.getattributedictionary(id).pipe",{"_index":530,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.authtoken",{"_index":1610,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.buildtitle(routerstate",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["this.category",{"_index":362,"title":{},"body":{"classes/AttributeDictionary.html":{}}}],["this.category?.setvalue((e.target",{"_index":451,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["this.component",{"_index":364,"title":{},"body":{"classes/AttributeDictionary.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.component?.setvalue((e.target",{"_index":452,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["this.connection",{"_index":948,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection._id",{"_index":952,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection.deviceidfrom",{"_index":955,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection.deviceidto",{"_index":954,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection.name",{"_index":953,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connectionid",{"_index":348,"title":{},"body":{"classes/Attribute.html":{}}}],["this.connectionlist",{"_index":1011,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.connectionservice.cloneconnection(id",{"_index":1018,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.connectionservice.createconnection(this.addconnectionform.value",{"_index":902,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.connectionservice.deleteconnection(id).subscribe((data",{"_index":1017,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.connectionservice.getconnection(id).pipe",{"_index":965,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connectionservice.getconnections().subscribe((data",{"_index":1010,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.createattribute(value).subscribe",{"_index":792,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.createattributedictionary(value).subscribe",{"_index":678,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["this.createconnection(value).subscribe",{"_index":1054,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.createdevice(devicetocreate).subscribe((createddevice",{"_index":1433,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.createfloor(value).subscribe",{"_index":1580,"title":{},"body":{"injectables/FloorService.html":{}}}],["this.createformgroup",{"_index":946,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{}}}],["this.createmodel(value).subscribe",{"_index":1909,"title":{},"body":{"injectables/ModelsService.html":{}}}],["this.createrack3d(element.position.x",{"_index":1994,"title":{},"body":{"classes/Tools3D.html":{}}}],["this.description",{"_index":1462,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.device",{"_index":1290,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device._id",{"_index":1296,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.modelid",{"_index":1298,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.name",{"_index":1297,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.position.h",{"_index":1301,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.position.x",{"_index":1299,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.position.y",{"_index":1300,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.deviceid",{"_index":346,"title":{},"body":{"classes/Attribute.html":{}}}],["this.deviceidfrom",{"_index":845,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["this.deviceidfrom?.setvalue((e.target",{"_index":893,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.deviceidfrom?.setvalue(objectid",{"_index":959,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.deviceidto",{"_index":843,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["this.deviceidto?.setvalue((e.target",{"_index":892,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.deviceidto?.setvalue(objectid",{"_index":960,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.devicelist",{"_index":901,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{}}}],["this.devicelist.find((e",{"_index":1012,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.devicelist.foreach((element",{"_index":1335,"title":{},"body":{"classes/DeviceList.html":{}}}],["this.devicelist.push(device",{"_index":1337,"title":{},"body":{"classes/DeviceList.html":{}}}],["this.deviceservice.getdevices().subscribe((data",{"_index":898,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["this.devicesservice.clonedevice(id",{"_index":1370,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.devicesservice.createdevice(this.device).subscribe",{"_index":1188,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.devicesservice.deletedevice(id).subscribe",{"_index":1361,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.devicesservice.getdevices().subscribe((data",{"_index":1360,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.devicesservice.getdevicesynchronize(id).subscribe",{"_index":1289,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.dimension",{"_index":1502,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Texture.html":{}}}],["this.editattributedictionaryform",{"_index":529,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.editdeviceform",{"_index":1293,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('h",{"_index":1319,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('modelid",{"_index":1316,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('name",{"_index":1315,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('x",{"_index":1317,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('y",{"_index":1318,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.patchvalue",{"_index":1295,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.touched",{"_index":1305,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.valid",{"_index":1304,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.value",{"_index":1308,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editmodelform",{"_index":1793,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.get('id",{"_index":1811,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.get('name",{"_index":1812,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.setvalue",{"_index":1798,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.touched",{"_index":1818,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.valid",{"_index":1817,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.value",{"_index":1814,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.value.id",{"_index":1813,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.finddevice(connectionobj.deviceidfrom).name",{"_index":1023,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.finddevice(connectionobj.deviceidto).name",{"_index":1025,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.floorlist",{"_index":1534,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorservice.clonefloor(id",{"_index":1539,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorservice.deletefloor(idstring).subscribe((data",{"_index":1537,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorservice.getfloors().subscribe((data",{"_index":1533,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.form",{"_index":945,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.controls",{"_index":964,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('category",{"_index":543,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.form.get('component",{"_index":544,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.form.get('deviceidfrom",{"_index":962,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('deviceidto",{"_index":961,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('id",{"_index":540,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["this.form.get('id')?.value",{"_index":547,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.form.get('name",{"_index":541,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["this.form.get('type",{"_index":542,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.form.patchvalue",{"_index":951,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.setvalue",{"_index":533,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.form.value",{"_index":546,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["this.form.value._id",{"_index":974,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.value.name",{"_index":549,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.formattributedictionary",{"_index":436,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["this.formbuilder.group",{"_index":440,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.formconnection",{"_index":890,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.getattribute(id).subscribe((value",{"_index":791,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.getattributedictionary(id).subscribe((value",{"_index":675,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["this.getattributedictionary(this.inputid).subscribe((data",{"_index":526,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.getconnection(id).subscribe((value",{"_index":1052,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.getconnection(this.inputid).subscribe((data",{"_index":947,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.getcontrol(controlname",{"_index":1744,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.getdevicelist",{"_index":891,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["this.getdevicesynchronize(id).subscribe((value",{"_index":1425,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.getfloor(id).subscribe((value",{"_index":1579,"title":{},"body":{"injectables/FloorService.html":{}}}],["this.getmodel",{"_index":1795,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.getmodel(id).subscribe((value",{"_index":1908,"title":{},"body":{"injectables/ModelsService.html":{}}}],["this.getrandomx",{"_index":1983,"title":{},"body":{"classes/Tools3D.html":{}}}],["this.getrandomy",{"_index":1984,"title":{},"body":{"classes/Tools3D.html":{}}}],["this.h?.setvalue(number((e.target",{"_index":1168,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.http",{"_index":666,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["this.http.get('/assets/readme.md",{"_index":1614,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(environment.baseurl",{"_index":1419,"title":{},"body":{"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["this.http.get(this.githubissuesurl",{"_index":1618,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(url).pipe(catcherror(this.handleerrortemplate('getobjectslogs",{"_index":1671,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["this.http.get(url).pipe(retry(1",{"_index":1661,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["this.httpoptions",{"_index":672,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["this.httpoptions).subscribe((data",{"_index":1619,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.id",{"_index":804,"title":{},"body":{"classes/Bug.html":{},"components/ConnectionEditComponent.html":{}}}],["this.id.setvalue(objectid",{"_index":958,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.id?.setvalue((e.target",{"_index":539,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/DeviceAddComponent.html":{}}}],["this.inputid",{"_index":524,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.inputid.tostring",{"_index":1794,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.issue_message",{"_index":806,"title":{},"body":{"classes/Bug.html":{}}}],["this.issue_name",{"_index":805,"title":{},"body":{"classes/Bug.html":{}}}],["this.issues",{"_index":1620,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.list",{"_index":823,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.list.find((e",{"_index":827,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.list.length",{"_index":825,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.list.length)].name",{"_index":826,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.list[math.floor(math.random",{"_index":824,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.loadattributedictionary",{"_index":578,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.loadconnection",{"_index":1009,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.loaddevices",{"_index":1359,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.loadfloors",{"_index":1532,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.loadmodels",{"_index":1163,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.loadmodels().subscribe((data",{"_index":1866,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.logcomponent",{"_index":528,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["this.logservice",{"_index":464,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.logservice.createlog",{"_index":581,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.logservice.createlog(log).subscribe",{"_index":1819,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.md",{"_index":1616,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.model",{"_index":1743,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.model._id",{"_index":1823,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelid",{"_index":347,"title":{},"body":{"classes/Attribute.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["this.modelid?.setvalue((e.target",{"_index":1169,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modellist",{"_index":1165,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.modellist.find((e",{"_index":1380,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.modellist.length)]._id.tostring",{"_index":1183,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modellist[math.floor(math.random",{"_index":1182,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modelservice.getmodels().subscribe((data",{"_index":1164,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modelslist",{"_index":1835,"title":{},"body":{"classes/ModelsList.html":{},"components/ModelsListComponent.html":{}}}],["this.modelslist.pop",{"_index":1837,"title":{},"body":{"classes/ModelsList.html":{}}}],["this.modelslist.push(model",{"_index":1836,"title":{},"body":{"classes/ModelsList.html":{}}}],["this.modelsservice",{"_index":1821,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelsservice.clonemodel(id",{"_index":1871,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.modelsservice.createmodel(this.model).subscribe((res",{"_index":1761,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.modelsservice.deletemodel(id).subscribe",{"_index":1867,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.modelsservice.deletemodel(this.inputid).subscribe",{"_index":1815,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelsservice.getmodel(this.inputid).subscribe((data",{"_index":1796,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelsservice.getmodels",{"_index":1865,"title":{},"body":{"components/ModelsListComponent.html":{},"guards/ResolverModel.html":{}}}],["this.modelsservice.getmodels().subscribe((data",{"_index":1302,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.mytheme",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["this.name",{"_index":361,"title":{},"body":{"classes/AttributeDictionary.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}}}],["this.name?.setvalue((e.target",{"_index":449,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["this.navigatetodevicelist",{"_index":1312,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.ngoninit",{"_index":1868,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.ngzone.run",{"_index":471,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["this.numbervalidator",{"_index":1287,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.objectid?.setvalue((e.target",{"_index":445,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.objectname",{"_index":1415,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.position",{"_index":1084,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["this.route",{"_index":1365,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.route.parent",{"_index":1375,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.navigate(['/add",{"_index":1873,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.router.navigate(['/attribute",{"_index":587,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.router.navigate(['/connection",{"_index":1016,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.router.navigate(['/device",{"_index":1363,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.navigate(['/floor",{"_index":1538,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.router.navigate(['/models",{"_index":1869,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.router.navigate(['attribute",{"_index":473,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["this.router.navigate(['connection",{"_index":907,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["this.router.navigate(['device",{"_index":1303,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.router.navigate(['edit",{"_index":593,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.router.navigatebyurl('/add",{"_index":1373,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.navigatebyurl('add",{"_index":591,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["this.router.navigatebyurl('attribute",{"_index":472,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{}}}],["this.router.navigatebyurl('attributesdictionary",{"_index":683,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["this.router.navigatebyurl('connection",{"_index":906,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["this.router.navigatebyurl('connections",{"_index":1055,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.router.navigatebyurl('device",{"_index":1192,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.router.navigatebyurl('floor",{"_index":1540,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["this.router.navigatebyurl('models",{"_index":1763,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["this.router.navigatebyurl(`edit",{"_index":595,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.selectedattributedictionary",{"_index":592,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.selectedattributedictionary._id",{"_index":594,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.selectedconnection",{"_index":1019,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.selectedconnection._id",{"_index":1020,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.selecteddevice",{"_index":1374,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.selectedfloor",{"_index":1541,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.selectedmodel",{"_index":1874,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.submitted",{"_index":1816,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.texture",{"_index":1503,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Texture.html":{}}}],["this.title.settitle(`3d",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["this.tostring(this.addattributedictionaryform.controls.type.dirty",{"_index":481,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.tostring(this.addconnectionform.controls.deviceidto.haserror",{"_index":914,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.tostring(this.addconnectionform.controls.id.value",{"_index":908,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.tostring(this.form.controls.deviceidfrom.value",{"_index":980,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.tostring(this.form.controls.deviceidto.value",{"_index":981,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.type",{"_index":363,"title":{},"body":{"classes/AttributeDictionary.html":{}}}],["this.type?.setvalue((e.target",{"_index":450,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["this.units.push(device",{"_index":1938,"title":{},"body":{"classes/Rack.html":{}}}],["this.valid.numbervalidator",{"_index":1138,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.value",{"_index":350,"title":{},"body":{"classes/Attribute.html":{}}}],["this.x?.setvalue(number((e.target",{"_index":1166,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.y?.setvalue(number((e.target",{"_index":1167,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["three",{"_index":2167,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["three.js",{"_index":2251,"title":{},"body":{"index.html":{}}}],["throwerror",{"_index":658,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["throws",{"_index":1682,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["time",{"_index":322,"title":{},"body":{"components/AsyncObservablePipeComponent.html":{}}}],["timers",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["titles",{"_index":1640,"title":{},"body":{"components/HomeComponent.html":{}}}],["titlestrategy",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["tmp",{"_index":899,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["todo",{"_index":1085,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"index.html":{}}}],["token123",{"_index":1626,"title":{},"body":{"components/HomeComponent.html":{}}}],["tools3d",{"_index":1960,"title":{"classes/Tools3D.html":{}},"body":{"classes/Tools3D.html":{},"coverage.html":{}}}],["top",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["topics",{"_index":2220,"title":{},"body":{"index.html":{}}}],["topromise",{"_index":769,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceListComponent.html":{}}}],["tostring",{"_index":384,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["tostring(data",{"_index":407,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["touched",{"_index":1321,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["traffic",{"_index":1484,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["transceiver",{"_index":1486,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["transform",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["transition",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["translatex(26px",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["tree.js",{"_index":2234,"title":{},"body":{"index.html":{}}}],["true",{"_index":448,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":773,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"index.html":{}}}],["ts",{"_index":755,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":2253,"title":{},"body":{"index.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"classes/AttributeDictionary.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/Bug.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"injectables/CustomErrorHandler.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Rack.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2334,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeobj.name",{"_index":480,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["typeof",{"_index":2024,"title":{},"body":{"classes/Validation.html":{}}}],["types",{"_index":2259,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1450,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{}}}],["ui",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ui.git",{"_index":2267,"title":{},"body":{"index.html":{}}}],["ui/issues",{"_index":1602,"title":{},"body":{"components/HomeComponent.html":{}}}],["ultimasolution.pl",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"classes/ModelsList.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["unexpected",{"_index":1070,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["units",{"_index":1930,"title":{},"body":{"classes/Rack.html":{}}}],["unknown",{"_index":458,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{}}}],["untouched",{"_index":1320,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["unused",{"_index":1452,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{}}}],["update",{"_index":548,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{},"index.html":{}}}],["updateattribute",{"_index":708,"title":{},"body":{"injectables/AttributeService.html":{}}}],["updateattribute(id",{"_index":751,"title":{},"body":{"injectables/AttributeService.html":{}}}],["updateattributedictionary",{"_index":609,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["updateattributedictionary(id",{"_index":643,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["updateattributedictionary(this.inputid",{"_index":545,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{}}}],["updateconnection",{"_index":1032,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["updateconnection(id",{"_index":1042,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["updated",{"_index":646,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["updatedevice",{"_index":1395,"title":{},"body":{"injectables/DeviceService.html":{}}}],["updatedevice(data",{"_index":1410,"title":{},"body":{"injectables/DeviceService.html":{}}}],["updatefloor",{"_index":1561,"title":{},"body":{"injectables/FloorService.html":{}}}],["updatefloor(id",{"_index":1574,"title":{},"body":{"injectables/FloorService.html":{}}}],["updatelog",{"_index":1697,"title":{},"body":{"injectables/LogService.html":{}}}],["updatelog(id",{"_index":1678,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["updatemodel",{"_index":1886,"title":{},"body":{"injectables/ModelsService.html":{}}}],["updatemodel(id",{"_index":1896,"title":{},"body":{"injectables/ModelsService.html":{}}}],["updatemodel(this.inputid.tostring",{"_index":1822,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["updates",{"_index":645,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"dependencies.html":{}}}],["updatetitle",{"_index":1955,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["updatetitle(routerstate",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["ups",{"_index":1487,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["url",{"_index":763,"title":{},"body":{"injectables/AttributeService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{}}}],["url_device",{"_index":779,"title":{},"body":{"injectables/AttributeService.html":{}}}],["url_model",{"_index":777,"title":{},"body":{"injectables/AttributeService.html":{}}}],["use",{"_index":2247,"title":{},"body":{"index.html":{}}}],["used",{"_index":1918,"title":{},"body":{"interfaces/Position.html":{}}}],["user",{"_index":1068,"title":{},"body":{"injectables/CustomErrorHandler.html":{}}}],["users",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":738,"title":{},"body":{"injectables/AttributeService.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":617,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{},"classes/Tools3D.html":{}}}],["uuidv4",{"_index":885,"title":{},"body":{"components/ConnectionAddComponent.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"classes/Tools3D.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuidv4().tostring().substr(6",{"_index":1049,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["uuidv4.tostring().substr(6",{"_index":1578,"title":{},"body":{"injectables/FloorService.html":{}}}],["v",{"_index":680,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["v4",{"_index":884,"title":{},"body":{"components/ConnectionAddComponent.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"classes/Tools3D.html":{}}}],["valid",{"_index":982,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validation",{"_index":1147,"title":{"classes/Validation.html":{}},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validationerrors",{"_index":1280,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["validatorfn",{"_index":1272,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["validators",{"_index":431,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.maxlength(255",{"_index":444,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["validators.maxlength(6",{"_index":1735,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.minlength(1",{"_index":1734,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.minlength(10",{"_index":510,"title":{},"body":{"components/AttributeDictionaryEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.minlength(24",{"_index":442,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{}}}],["validators.minlength(36",{"_index":889,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["validators.minlength(4",{"_index":1136,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.minlength(6",{"_index":443,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["validators.pattern('^[0",{"_index":1736,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.required",{"_index":441,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParamteres.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Rack.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["value._id",{"_index":1053,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["values",{"_index":2260,"title":{},"body":{"index.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AsyncObservablePipeComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["variable",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2337,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1453,"title":{},"body":{"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{}}}],["version",{"_index":2332,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1925,"title":{},"body":{"interfaces/Position.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryEditComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/CustomErrorHandler.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceList.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/ModelsList.html":{},"components/ModelsListComponent.html":{},"classes/Rack.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{}}}],["waiting",{"_index":2296,"title":{},"body":{"index.html":{}}}],["want",{"_index":2239,"title":{},"body":{"index.html":{}}}],["watch",{"_index":2276,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["welcome",{"_index":2283,"title":{},"body":{"index.html":{}}}],["width",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Dimension.html":{},"components/HomeComponent.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{}}}],["winston",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["workstations",{"_index":1488,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["x",{"_index":685,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"components/HomeComponent.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{},"index.html":{}}}],["xpos",{"_index":1507,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["y",{"_index":1080,"title":{},"body":{"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{},"index.html":{}}}],["yes",{"_index":750,"title":{},"body":{"injectables/AttributeService.html":{},"classes/Connection.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"injectables/DeviceService.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["yours",{"_index":2211,"title":{},"body":{"index.html":{}}}],["ypos",{"_index":1508,"title":{},"body":{"interfaces/Floor.html":{},"interfaces/FloorDimension.html":{}}}],["yyyy/mm/dd",{"_index":2185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zlib",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                myTheme\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                            \n                                currentYearLong\n                            \n                            \n                                themeSwitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYearLong\n                        \n                    \n                \n            \n            \n                \ncurrentYearLong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeSwitch\n                        \n                    \n                \n            \n            \n                \nthemeSwitch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        myTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '3d-inventory-angular-ui'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = '3d-inventory-angular-ui'\n  public myTheme: string = 'light'\n\n  themeSwitch() {\n    if (this.myTheme === 'light') {\n      console.log('theme dark')\n      this.myTheme = 'dark'\n    } else {\n      console.log('theme light')\n      this.myTheme = 'light'\n    }\n  }\n\n  currentYearLong(): number {\n    return new Date().getFullYear()\n  }\n  changeTheme(theme: string) {\n    const body = document.body\n    body.setAttribute('data-bs-theme', theme)\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    3d inventory\n    \n  \n\n  \n    \n      \n        \n          3d inventory\n           3d\n           Floors\n           Devices\n           Models\n\n          \n            Attributes\n            \n              \n                 Attributes\n              \n              \n                 Attr. Dictionary\n              \n            \n          \n           Connections\n          \n            Users\n            \n              Users\n              Roles\n              Permissions\n              \n                \n              \n              Login\n              Logout\n              Register\n            \n          \n\n          \n            \n          \n          \n            \n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n          \n            © 2022-{{ currentYearLong() }} Copyright:\n            ultimasolution.pl\n          \n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .container {\n  main {\n    background-color: var(--main-content-background-color);\n\n    h1 {\n      font-size: 70px;\n      color: var(--main-content-text-color);\n    }\n  }\n\n  .theme {\n    .slider {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: var(--header-theme-switch-background-color);\n      -webkit-transition: 0.4s;\n      transition: 0.4s;\n      border-radius: 34px;\n\n      &:before {\n        position: absolute;\n        content: '';\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: var(--header-theme-switch-before-background-color);\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n      }\n    }\n\n    input {\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n\n    input:checked + .slider {\n      background-color: var(--header-theme-switch-checked-background-color);\n    }\n\n    input:focus + .slider {\n      box-shadow: 0 0 1px var(--header-theme-switch-checked-background-color);\n    }\n\n    input:checked + .slider:before {\n      -webkit-transform: translateX(26px);\n      -ms-transform: translateX(26px);\n      transform: translateX(26px);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          3d inventory                                    3d inventory           3d           Floors           Devices           Models                      Attributes                                           Attributes                                             Attr. Dictionary                                               Connections                      Users                          Users              Roles              Permissions                                                          Login              Logout              Register                                                                                                                                                                                        © 2022-{{ currentYearLong() }} Copyright:            ultimasolution.pl                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAsyncObservablePipeComponent\n\nAsyncObservablePipeComponent\n\nAppModule -->\n\nAsyncObservablePipeComponent->AppModule\n\n\n\n\n\nAttributeAddComponent\n\nAttributeAddComponent\n\nAppModule -->\n\nAttributeAddComponent->AppModule\n\n\n\n\n\nAttributeDictionaryAddComponent\n\nAttributeDictionaryAddComponent\n\nAppModule -->\n\nAttributeDictionaryAddComponent->AppModule\n\n\n\n\n\nAttributeDictionaryEditComponent\n\nAttributeDictionaryEditComponent\n\nAppModule -->\n\nAttributeDictionaryEditComponent->AppModule\n\n\n\n\n\nAttributeDictionaryListComponent\n\nAttributeDictionaryListComponent\n\nAppModule -->\n\nAttributeDictionaryListComponent->AppModule\n\n\n\n\n\nAttributeEditComponent\n\nAttributeEditComponent\n\nAppModule -->\n\nAttributeEditComponent->AppModule\n\n\n\n\n\nAttributeListComponent\n\nAttributeListComponent\n\nAppModule -->\n\nAttributeListComponent->AppModule\n\n\n\n\n\nConnectionAddComponent\n\nConnectionAddComponent\n\nAppModule -->\n\nConnectionAddComponent->AppModule\n\n\n\n\n\nConnectionEditComponent\n\nConnectionEditComponent\n\nAppModule -->\n\nConnectionEditComponent->AppModule\n\n\n\n\n\nConnectionListComponent\n\nConnectionListComponent\n\nAppModule -->\n\nConnectionListComponent->AppModule\n\n\n\n\n\nCubeComponent\n\nCubeComponent\n\nAppModule -->\n\nCubeComponent->AppModule\n\n\n\n\n\nDeviceAddComponent\n\nDeviceAddComponent\n\nAppModule -->\n\nDeviceAddComponent->AppModule\n\n\n\n\n\nDeviceEditComponent\n\nDeviceEditComponent\n\nAppModule -->\n\nDeviceEditComponent->AppModule\n\n\n\n\n\nDeviceListComponent\n\nDeviceListComponent\n\nAppModule -->\n\nDeviceListComponent->AppModule\n\n\n\n\n\nFloorAddComponent\n\nFloorAddComponent\n\nAppModule -->\n\nFloorAddComponent->AppModule\n\n\n\n\n\nFloorEditComponent\n\nFloorEditComponent\n\nAppModule -->\n\nFloorEditComponent->AppModule\n\n\n\n\n\nFloorListComponent\n\nFloorListComponent\n\nAppModule -->\n\nFloorListComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLogComponent\n\nLogComponent\n\nAppModule -->\n\nLogComponent->AppModule\n\n\n\n\n\nModelAddComponent\n\nModelAddComponent\n\nAppModule -->\n\nModelAddComponent->AppModule\n\n\n\n\n\nModelEditComponent\n\nModelEditComponent\n\nAppModule -->\n\nModelEditComponent->AppModule\n\n\n\n\n\nModelsListComponent\n\nModelsListComponent\n\nAppModule -->\n\nModelsListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAttributeDictionaryService\n\nAttributeDictionaryService\n\nAppModule -->\n\nAttributeDictionaryService->AppModule\n\n\n\n\n\nAttributeService\n\nAttributeService\n\nAppModule -->\n\nAttributeService->AppModule\n\n\n\n\n\nCustomErrorHandler\n\nCustomErrorHandler\n\nAppModule -->\n\nCustomErrorHandler->AppModule\n\n\n\n\n\nDeviceService\n\nDeviceService\n\nAppModule -->\n\nDeviceService->AppModule\n\n\n\n\n\nFloorService\n\nFloorService\n\nAppModule -->\n\nFloorService->AppModule\n\n\n\n\n\nLogService\n\nLogService\n\nAppModule -->\n\nLogService->AppModule\n\n\n\n\n\nModelsService\n\nModelsService\n\nAppModule -->\n\nModelsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AsyncObservablePipeComponent\n                        \n                        \n                            AttributeAddComponent\n                        \n                        \n                            AttributeDictionaryAddComponent\n                        \n                        \n                            AttributeDictionaryEditComponent\n                        \n                        \n                            AttributeDictionaryListComponent\n                        \n                        \n                            AttributeEditComponent\n                        \n                        \n                            AttributeListComponent\n                        \n                        \n                            ConnectionAddComponent\n                        \n                        \n                            ConnectionEditComponent\n                        \n                        \n                            ConnectionListComponent\n                        \n                        \n                            CubeComponent\n                        \n                        \n                            DeviceAddComponent\n                        \n                        \n                            DeviceEditComponent\n                        \n                        \n                            DeviceListComponent\n                        \n                        \n                            FloorAddComponent\n                        \n                        \n                            FloorEditComponent\n                        \n                        \n                            FloorListComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LogComponent\n                        \n                        \n                            ModelAddComponent\n                        \n                        \n                            ModelEditComponent\n                        \n                        \n                            ModelsListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AttributeDictionaryService\n                        \n                        \n                            AttributeService\n                        \n                        \n                            CustomErrorHandler\n                        \n                        \n                            DeviceService\n                        \n                        \n                            FloorService\n                        \n                        \n                            LogService\n                        \n                        \n                            ModelsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MarkdownModule } from 'ngx-markdown';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CubeComponent } from './components/3d/3d.component';\nimport {\n    AttributeDictionaryAddComponent\n} from './components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component';\nimport {\n    AttributeDictionaryListComponent\n} from './components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component';\nimport {\n    AttributeDictionaryEditComponent\n} from './components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component';\nimport {\n    AttributeAddComponent\n} from './components/attribute/add-attribute/add-attribute.component';\nimport {\n    AttributeListComponent\n} from './components/attribute/attribute-list/attribute-list.component';\nimport {\n    AttributeEditComponent\n} from './components/attribute/edit-attribute/edit-attribute.component';\nimport {\n    ConnectionAddComponent\n} from './components/connection/add-connection/add-connection.component';\nimport {\n    ConnectionListComponent\n} from './components/connection/connection-list/connection-list.component';\nimport {\n    ConnectionEditComponent\n} from './components/connection/edit-connection/edit-connection.component';\nimport { DeviceAddComponent } from './components/devices/add-device/add-device.component';\nimport { DeviceListComponent } from './components/devices/devices-list/devices-list.component';\nimport { DeviceEditComponent } from './components/devices/edit-device/edit-device.component';\nimport { FloorAddComponent } from './components/floors/add-floor/add-floor.component';\nimport { FloorEditComponent } from './components/floors/edit-floor/edit-floor.component';\nimport { FloorListComponent } from './components/floors/floor-list/floor-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LogComponent } from './components/log/log.component';\nimport { ModelAddComponent } from './components/models/add-model/add-model.component';\nimport { ModelEditComponent } from './components/models/edit-model/edit-model.component';\nimport { ModelsListComponent } from './components/models/model-list/model-list.component';\nimport { AsyncObservablePipeComponent } from './pipe/pipe.component';\nimport { ResolverDevice } from './resolverDevice';\nimport { ResolverModel } from './resolverModel';\nimport { AttributeDictionaryService } from './services/attribute-dictionary.service';\nimport { AttributeService } from './services/attribute.service';\nimport { DeviceService } from './services/device.service';\nimport { CustomErrorHandler } from './services/errorHandler.service';\nimport { FloorService } from './services/floor.service';\nimport { LogService } from './services/log.service';\nimport { ModelsService } from './services/models.service';\n\n@NgModule({\n  declarations: [\n    DeviceListComponent,\n    DeviceAddComponent,\n    DeviceEditComponent,\n\n    ModelsListComponent,\n    ModelAddComponent,\n    ModelEditComponent,\n\n    AttributeDictionaryListComponent,\n    AttributeDictionaryAddComponent,\n    AttributeDictionaryEditComponent,\n\n    AttributeListComponent,\n    AttributeAddComponent,\n    AttributeEditComponent,\n\n    AppComponent,\n    HomeComponent,\n    CubeComponent,\n\n    ConnectionListComponent,\n    ConnectionAddComponent,\n    ConnectionEditComponent,\n\n    FloorListComponent,\n    FloorEditComponent,\n    FloorAddComponent,\n\n    LogComponent,\n\n    AsyncObservablePipeComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    NgbPopoverModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    MarkdownModule.forRoot(),\n  ],\n  providers: [\n    DeviceService,\n    ModelsService,\n    LogService,\n    AttributeDictionaryService,\n    AttributeService,\n    FloorService,\n    CustomErrorHandler,\n    ResolverDevice,\n    ResolverModel,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Injectable, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport {\n    provideRouter, RouterModule, RouterStateSnapshot, Routes, TitleStrategy\n} from '@angular/router';\n\nimport { CubeComponent } from './components/3d/3d.component';\nimport {\n    AttributeDictionaryAddComponent\n} from './components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component';\nimport {\n    AttributeDictionaryListComponent\n} from './components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component';\nimport {\n    AttributeDictionaryEditComponent\n} from './components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component';\nimport {\n    AttributeAddComponent\n} from './components/attribute/add-attribute/add-attribute.component';\nimport {\n    AttributeListComponent\n} from './components/attribute/attribute-list/attribute-list.component';\nimport {\n    AttributeEditComponent\n} from './components/attribute/edit-attribute/edit-attribute.component';\nimport {\n    ConnectionAddComponent\n} from './components/connection/add-connection/add-connection.component';\nimport {\n    ConnectionListComponent\n} from './components/connection/connection-list/connection-list.component';\nimport {\n    ConnectionEditComponent\n} from './components/connection/edit-connection/edit-connection.component';\nimport { DeviceAddComponent } from './components/devices/add-device/add-device.component';\nimport { DeviceListComponent } from './components/devices/devices-list/devices-list.component';\nimport { DeviceEditComponent } from './components/devices/edit-device/edit-device.component';\nimport { FloorAddComponent } from './components/floors/add-floor/add-floor.component';\nimport { FloorEditComponent } from './components/floors/edit-floor/edit-floor.component';\nimport { FloorListComponent } from './components/floors/floor-list/floor-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ModelAddComponent } from './components/models/add-model/add-model.component';\nimport { ModelEditComponent } from './components/models/edit-model/edit-model.component';\nimport { ModelsListComponent } from './components/models/model-list/model-list.component';\nimport { ResolverDevice } from './resolverDevice';\nimport { ResolverModel } from './resolverModel';\n\n@Injectable()\nexport class TemplatePageTitleStrategy extends TitleStrategy {\n  constructor(private readonly title: Title) {\n    super()\n  }\n\n  override updateTitle(routerState: RouterStateSnapshot) {\n    const title = this.buildTitle(routerState)\n    if (title !== undefined) {\n      this.title.setTitle(`3d-inventory: ${title}`)\n    }\n  }\n}\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    title: 'Home',\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    title: 'Home',\n  },\n  {\n    path: '3d',\n    component: CubeComponent,\n    title: '3d',\n    resolve: {\n      resolveDeviceList: ResolverDevice,\n      resolveModelList: ResolverModel,\n    },\n  },\n  {\n    path: 'device-list',\n    component: DeviceListComponent,\n    title: 'Device List',\n  },\n  {\n    path: 'edit-device/:id',\n    component: DeviceEditComponent,\n    title: 'Edit Device',\n  },\n  {\n    path: 'add-device',\n    component: DeviceAddComponent,\n    title: 'Add Device',\n  },\n  {\n    path: 'models-list',\n    component: ModelsListComponent,\n    title: 'Models List',\n  },\n  {\n    path: 'edit-model/:id',\n    component: ModelEditComponent,\n    title: 'Edit Model',\n  },\n  {\n    path: 'add-model',\n    component: ModelAddComponent,\n    title: 'Add Model',\n  },\n  {\n    path: 'attribute-dictionary-list',\n    component: AttributeDictionaryListComponent,\n    title: 'Attribute Dictionary List',\n  },\n  {\n    path: 'add-attribute-dictionary',\n    component: AttributeDictionaryAddComponent,\n  },\n  {\n    path: 'edit-attribute-dictionary/:id',\n    component: AttributeDictionaryEditComponent,\n    title: 'Edit Attribute Dictionary',\n  },\n  {\n    path: 'attribute-list',\n    component: AttributeListComponent,\n    title: 'Attribute List',\n  },\n  {\n    path: 'add-attribute',\n    component: AttributeAddComponent,\n    title: 'Add Attribute',\n  },\n  {\n    path: 'edit-attribute/:id',\n    component: AttributeEditComponent,\n    title: 'Edit Attribute',\n  },\n  {\n    path: 'connection-list',\n    component: ConnectionListComponent,\n    title: 'Connections List',\n  },\n  {\n    path: 'add-connection',\n    component: ConnectionAddComponent,\n    title: 'Add Connections',\n  },\n  {\n    path: 'edit-connection/:id',\n    component: ConnectionEditComponent,\n    title: 'Edit Connections',\n  },\n  {\n    path: 'floor-list',\n    component: FloorListComponent,\n    title: 'Floor List',\n  },\n  {\n    path: 'add-floor',\n    component: FloorAddComponent,\n    title: 'Add Floor',\n  },\n  {\n    path: 'edit-floor/:id',\n    component: FloorEditComponent,\n    title: 'Edit Floor',\n  },\n]\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule.forRoot(\n      routes,\n      { enableTracing: false }, // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AsyncObservablePipeComponent.html":{"url":"components/AsyncObservablePipeComponent.html","title":"component - AsyncObservablePipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AsyncObservablePipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pipe/pipe.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                async-observable-pipe\n            \n\n\n\n\n\n            \n                template\n                observable|async: Time: {{ time | async }}\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Default value : interval(1000)\n                    \n                \n                    \n                        \n                                Defined in src/app/pipe/pipe.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { interval, Observable, Observer } from 'rxjs';\n\nimport { AsyncPipe } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'async-observable-pipe',\n  template: 'observable|async: Time: {{ time | async }}',\n})\nexport class AsyncObservablePipeComponent {\n  time = interval(1000)\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'observable|async: Time: {{ time | async }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AsyncObservablePipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attribute.html":{"url":"classes/Attribute.html","title":"class - Attribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/attribute.ts\n        \n\n\n            \n                Description\n            \n            \n                Description: The attributes class.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                attributeDictionaryId\n                            \n                            \n                                connectionId\n                            \n                            \n                                deviceId\n                            \n                            \n                                modelId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/attribute.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionaryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Attribute {\n  _id: string\n  deviceId: string | null\n  modelId: string | null\n  connectionId: string | null\n  attributeDictionaryId: string\n  value: string\n\n  constructor() {\n    this._id = ''\n    this.deviceId = null\n    this.modelId = null\n    this.connectionId = null\n    this.attributeDictionaryId = ''\n    this.value = ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AttributeDictionary.html":{"url":"classes/AttributeDictionary.html","title":"class - AttributeDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AttributeDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/attribute-dictionary.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an attribute dictionary.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                component\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/attribute-dictionary.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute-dictionary.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute-dictionary.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute-dictionary.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute-dictionary.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute-dictionary.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AttributeDictionary {\n  _id: string\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.category = ''\n    this.type = ''\n    this.component = ''\n  }\n\n  name?: string\n  category?: string\n  type?: string\n  component?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttributeDictionaryAddComponent.html":{"url":"components/AttributeDictionaryAddComponent.html","title":"component - AttributeDictionaryAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AttributeDictionaryAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-attribute-dictionary\n            \n\n\n\n            \n                styleUrls\n                ./add-attribute-dictionary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-attribute-dictionary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addAttributeDictionaryForm\n                            \n                            \n                                attributeDictionary\n                            \n                            \n                                    Public\n                                attributeDictionaryService\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                logComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCategory\n                            \n                            \n                                changeComponent\n                            \n                            \n                                changeName\n                            \n                            \n                                changeObjectId\n                            \n                            \n                                changeType\n                            \n                            \n                                formAttributeDictionary\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    objectId\n                                \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    category\n                                \n                                \n                                    component\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, attributeDictionaryService: AttributeDictionaryService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attributeDictionaryService\n                                                  \n                                                        \n                                                                        AttributeDictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeCategory\n                        \n                    \n                \n            \n            \n                \nchangeCategory(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeComponent\n                        \n                    \n                \n            \n            \n                \nchangeComponent(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeObjectId\n                        \n                    \n                \n            \n            \n                \nchangeObjectId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nformAttributeDictionary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addAttributeDictionaryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionary\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attributeDictionaryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionaryService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoryDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypeDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AttributeDictionary'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        objectId\n                    \n                \n\n                \n                    \n                        getobjectId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n                \n                    \n                        getcategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n\n                \n                    \n                        getcomponent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:92\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\n\nimport { AttributeDictionaryService } from '../../../services/attribute-dictionary.service'\nimport { LogService } from '../../../services/log.service'\nimport { AttributeDictionary } from '../../../shared/attribute-dictionary'\nimport { ComponentDictionary } from '../../../shared/component-dictionary'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/deviceTypes'\n\n@Component({\n  selector: 'app-add-attribute-dictionary',\n  templateUrl: './add-attribute-dictionary.component.html',\n  styleUrls: ['./add-attribute-dictionary.component.scss'],\n})\nexport class AttributeDictionaryAddComponent implements OnInit {\n  addAttributeDictionaryForm: FormGroup\n    objectId: FormControl\n    name: FormControl\n    type: FormControl\n    category: FormControl\n    component: FormControl\n  }>\n  attributeDictionary: AttributeDictionary\n  isSubmitted = false\n  deviceTypeDict: DeviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict: DeviceCategoryDict = new DeviceCategoryDict()\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  logComponent = 'AttributeDictionary'\n\n  ngOnInit() {\n    this.formAttributeDictionary()\n  }\n\n  constructor(\n    @Inject(FormBuilder) private formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public attributeDictionaryService: AttributeDictionaryService,\n    private logService: LogService,\n  ) {}\n\n  formAttributeDictionary() {\n    this.addAttributeDictionaryForm = this.formBuilder.group({\n      _id: ['', [Validators.required]],\n      objectId: ['', [Validators.required, Validators.minLength(24)]],\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]],\n      type: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      component: ['', [Validators.required]],\n    })\n  }\n\n  changeObjectId(e: Event) {\n    this.objectId?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeName(e: Event) {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeType(e: Event) {\n    this.type?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeCategory(e: Event) {\n    this.category?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeComponent(e: Event) {\n    this.component?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get objectId() {\n    return this.addAttributeDictionaryForm.get('objectId')\n  }\n\n  get name() {\n    return this.addAttributeDictionaryForm.get('name')\n  }\n\n  get type() {\n    return this.addAttributeDictionaryForm.get('type')\n  }\n\n  get category() {\n    return this.addAttributeDictionaryForm.get('category')\n  }\n\n  get component() {\n    return this.addAttributeDictionaryForm.get('component')\n  }\n\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, 2)\n  }\n\n  submitForm() {\n    this.attributeDictionaryService\n      .CreateAttributeDictionary(this.addAttributeDictionaryForm.value as unknown as AttributeDictionary)\n      .subscribe(() => {\n        this.logService\n          .CreateLog({\n            objectId: this.addAttributeDictionaryForm.get('id')?.value,\n            message: this.addAttributeDictionaryForm.getRawValue(),\n            operation: 'Create',\n            component: 'Attribute Dictionary',\n          })\n          .subscribe(() => {\n            this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list'))\n            this.router.navigate(['attribute-dictionary-list'])\n          })\n      })\n  }\n}\n\n    \n\n    \n        \n   Add Attribute Dictionary\n  \n    \n      Id\n      \n      \n        Id is required\n        \n          Id must be at least 4 characters\n        \n      \n    \n    \n      Name\n      {{ this.addAttributeDictionaryForm.value.name }}\n      \n        Attribute name is required\n        \n          Attribute name must be at least 6 characters\n        \n      \n    \n    \n      \n        \n          Type\n          \n            \n              {{ typeObj.name }}\n            \n          \n          \n            Category is required\n          \n          \n            {{ this.toString(this.addAttributeDictionaryForm.controls.type.dirty) }}\n          \n        \n      \n      \n        \n          Category\n          \n            \n              {{ categoryObj.name }}\n            \n          \n          \n            Category is required\n          \n        \n      \n      \n        \n          Component\n          \n            \n              {{ componentObj.name }}\n            \n          \n          \n            Component is required\n          \n        \n      \n    \n    \n      \n        Add model\n      \n      \n        Form is invalid\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-attribute-dictionary.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Attribute Dictionary            Id                    Id is required                  Id must be at least 4 characters                            Name      {{ this.addAttributeDictionaryForm.value.name }}              Attribute name is required                  Attribute name must be at least 6 characters                                              Type                                    {{ typeObj.name }}                                            Category is required                                {{ this.toString(this.addAttributeDictionaryForm.controls.type.dirty) }}                                                Category                                    {{ categoryObj.name }}                                            Category is required                                                Component                                    {{ componentObj.name }}                                            Component is required                                              Add model                    Form is invalid            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AttributeDictionaryAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttributeDictionaryEditComponent.html":{"url":"components/AttributeDictionaryEditComponent.html","title":"component - AttributeDictionaryEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AttributeDictionaryEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-attribute-dictionary\n            \n\n\n\n            \n                styleUrls\n                ./edit-attribute-dictionary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-attribute-dictionary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                attributeDictionary\n                            \n                            \n                                    Public\n                                attributeDictionaryService\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                editAttributeDictionaryForm\n                            \n                            \n                                form\n                            \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                inputId\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                logComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCategory\n                            \n                            \n                                changeComponent\n                            \n                            \n                                changeId\n                            \n                            \n                                changeName\n                            \n                            \n                                changeType\n                            \n                            \n                                formAttributeDictionary\n                            \n                            \n                                    Private\n                                getAttributeDictionary\n                            \n                            \n                                    Private\n                                getInput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    category\n                                \n                                \n                                    component\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, activatedRoute: ActivatedRoute, attributeDictionaryService: AttributeDictionaryService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attributeDictionaryService\n                                                  \n                                                        \n                                                                        AttributeDictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeCategory\n                        \n                    \n                \n            \n            \n                \nchangeCategory(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeComponent\n                        \n                    \n                \n            \n            \n                \nchangeComponent(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeId\n                        \n                    \n                \n            \n            \n                \nchangeId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nformAttributeDictionary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAttributeDictionary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionary\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attributeDictionaryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionaryService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoryDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypeDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editAttributeDictionaryForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    _id: new FormControl('', [Validators.required, Validators.minLength(24)]),\n    objectId: new FormControl('', [Validators.required, Validators.minLength(10)]),\n    name: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]),\n    type: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n    component: new FormControl('', Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n                \n                    \n                        getcategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n\n                \n                    \n                        getcomponent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts:120\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Observable, tap } from 'rxjs'\n\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\n\nimport { AttributeDictionaryService } from '../../../services/attribute-dictionary.service'\nimport { LogService } from '../../../services/log.service'\nimport { AttributeDictionary } from '../../../shared/attribute-dictionary'\nimport { ComponentDictionary } from '../../../shared/component-dictionary'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/deviceTypes'\n\n@Component({\n  selector: 'app-edit-attribute-dictionary',\n  templateUrl: './edit-attribute-dictionary.component.html',\n  styleUrls: ['./edit-attribute-dictionary.component.scss'],\n})\nexport class AttributeDictionaryEditComponent implements OnInit {\n  inputId: string\n  form: FormGroup // Specify the type as FormGroup\n  attributeDictionary: AttributeDictionary\n  isSubmitted = false\n  deviceTypeDict: DeviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict: DeviceCategoryDict = new DeviceCategoryDict()\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  logComponent: string\n\n  ngOnInit() {\n    this.inputId = this.activatedRoute.snapshot.paramMap.get('id') || ''\n    this.getAttributeDictionary(this.inputId).subscribe((data: AttributeDictionary) => {\n      this.attributeDictionary = data\n    })\n    this.logComponent = this.inputId\n    this.formAttributeDictionary()\n  }\n\n  editAttributeDictionaryForm = new FormGroup({\n    _id: new FormControl('', [Validators.required, Validators.minLength(24)]),\n    objectId: new FormControl('', [Validators.required, Validators.minLength(10)]),\n    name: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]),\n    type: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n    component: new FormControl('', Validators.required),\n  })\n  formAttributeDictionary() {\n    this.editAttributeDictionaryForm = this.formBuilder.group({\n      _id: new FormControl('', [Validators.required, Validators.minLength(24)]),\n      objectId: ['', [Validators.required, Validators.minLength(24)]],\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]],\n      type: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      component: ['', [Validators.required]],\n    })\n  }\n\n  private getInput() {\n    return this.activatedRoute.snapshot.paramMap.get('id')\n  }\n\n  private getAttributeDictionary(id: string): Observable {\n    return this.attributeDictionaryService.GetAttributeDictionary(id).pipe(\n      tap((data: AttributeDictionary) => {\n        console.log('GetAttributeDictionary(' + this.inputId + ') => ' + JSON.stringify(data, null, 2))\n        this.attributeDictionary = data\n        this.form.setValue({\n          id: data._id,\n          name: data.name,\n          type: data.type,\n          category: data.category,\n          component: data.component,\n        })\n      }),\n    )\n  }\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public activatedRoute: ActivatedRoute,\n    public attributeDictionaryService: AttributeDictionaryService,\n    private logService: LogService,\n  ) {}\n\n  changeId(e: Event) {\n    this.id?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeName(e: Event) {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeType(e: Event) {\n    this.type?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeCategory(e: Event) {\n    this.category?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeComponent(e: Event) {\n    this.component?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get id() {\n    return this.form.get('id')\n  }\n\n  get name() {\n    return this.form.get('name')\n  }\n\n  get type() {\n    return this.form.get('type')\n  }\n  get category() {\n    return this.form.get('category')\n  }\n  get component() {\n    return this.form.get('component')\n  }\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, ' ')\n  }\n  submitForm() {\n    this.attributeDictionaryService\n      .UpdateAttributeDictionary(this.inputId, this.form.value as AttributeDictionary)\n      .subscribe(() => {\n        this.logService\n          .CreateLog({\n            objectId: this.form.get('id')?.value,\n            message: this.form.value,\n            operation: 'Update',\n            component: 'Attribute Dictionary',\n          })\n          .subscribe(() => {\n            this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list'))\n            this.router.navigate(['attribute-dictionary-list'])\n          })\n      })\n  }\n}\n\n    \n\n    \n        \n   Edit Attribute Dictionary\n  \n    \n      \n        \n          Id\n          \n          \n            Id is required\n            Id must be at least 4 characters\n          \n        \n      \n      \n        \n          Name\n          {{ this.form.value.name }}\n          \n            Attribute name is required\n            Attribute name must be at least 6 characters\n          \n        \n      \n    \n    \n      \n        \n          Type\n          \n            \n              {{ typeObj.name }}\n            \n          \n          \n            Category is required\n          \n        \n      \n      \n        \n          Category\n          \n            \n              {{ categoryObj.name }}\n            \n          \n          \n            Category is required\n          \n        \n      \n      \n        \n          Component\n          \n            \n              {{ componentObj.name }}\n            \n          \n          \n            Component is required\n          \n        \n      \n    \n    \n      Update\n      Form is invalid\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./edit-attribute-dictionary.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Attribute Dictionary                              Id                                Id is required            Id must be at least 4 characters                                                Name          {{ this.form.value.name }}                      Attribute name is required            Attribute name must be at least 6 characters                                                        Type                                    {{ typeObj.name }}                                            Category is required                                                Category                                    {{ categoryObj.name }}                                            Category is required                                                Component                                    {{ componentObj.name }}                                            Component is required                                      Update      Form is invalid      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AttributeDictionaryEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttributeDictionaryListComponent.html":{"url":"components/AttributeDictionaryListComponent.html","title":"component - AttributeDictionaryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AttributeDictionaryListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-attribute-dictionary-list\n            \n\n\n\n            \n                styleUrls\n                ./attribute-dictionary-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./attribute-dictionary-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attributeDictionaryList\n                            \n                            \n                                attributeDictionaryPage\n                            \n                            \n                                    Public\n                                attributeDictionaryService\n                            \n                            \n                                component\n                            \n                            \n                                selectedAttributeDictionary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddForm\n                            \n                            \n                                    Async\n                                CloneAttributeDictionary\n                            \n                            \n                                deleteAttributeDictionary\n                            \n                            \n                                EditForm\n                            \n                            \n                                loadAttributeDictionary\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(attributeDictionaryService: AttributeDictionaryService, logService: LogService, router: Router, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attributeDictionaryService\n                                                  \n                                                        \n                                                                        AttributeDictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddForm\n                        \n                    \n                \n            \n            \n                \nAddForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CloneAttributeDictionary\n                        \n                    \n                \n            \n            \n                \n                        \n                    CloneAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAttributeDictionary\n                        \n                    \n                \n            \n            \n                \ndeleteAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditForm\n                        \n                    \n                \n            \n            \n                \nEditForm(attributeDictionary: AttributeDictionary)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attributeDictionary\n                                            \n                                                            AttributeDictionary\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nloadAttributeDictionary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionaryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AttributeDictionary[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionaryPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attributeDictionaryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionaryService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Attribute Dictionary'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAttributeDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionary\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { AttributeDictionaryService } from '../../../services/attribute-dictionary.service'\nimport { LogService } from '../../../services/log.service'\nimport { AttributeDictionary } from '../../../shared/attribute-dictionary'\n\n@Component({\n  selector: 'app-attribute-dictionary-list',\n  templateUrl: './attribute-dictionary-list.component.html',\n  styleUrls: ['./attribute-dictionary-list.component.scss'],\n})\nexport class AttributeDictionaryListComponent implements OnInit {\n  attributeDictionaryList: AttributeDictionary[] = []\n  selectedAttributeDictionary: AttributeDictionary\n  attributeDictionaryPage = 1\n  component = 'Attribute Dictionary'\n\n  ngOnInit() {\n    this.loadAttributeDictionary()\n  }\n  constructor(\n    public attributeDictionaryService: AttributeDictionaryService,\n    private logService: LogService,\n    private router: Router,\n    private ngZone: NgZone,\n  ) {}\n  loadAttributeDictionary() {\n    return this.attributeDictionaryService.GetAttributeDictionaries().subscribe((data: AttributeDictionary[]) => {\n      this.attributeDictionaryList = data\n    })\n  }\n  deleteAttributeDictionary(id: string) {\n    this.logService.CreateLog({\n      message: { id },\n      objectId: id.toString(),\n      operation: 'Delete',\n      component: 'AttributeDictionary',\n    })\n    return this.attributeDictionaryService.DeleteAttributeDictionary(id).subscribe((data: AttributeDictionary) => {\n      // Specify the appropriate type for 'data'\n      console.log(data)\n      this.loadAttributeDictionary()\n      this.router.navigate(['/attribute-dictionary-list'])\n    })\n  }\n\n  async CloneAttributeDictionary(id: string) {\n    const id_new: string = this.attributeDictionaryService.CloneAttributeDictionary(id)\n    this.logService\n      .CreateLog({\n        message: {\n          id: id,\n          id_new: id_new,\n        },\n        operation: 'Clone',\n        component: 'AttributeDictionary',\n      })\n      .subscribe(() => {\n        this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list'))\n      })\n    // this.loadAttributeDictionary()\n    // this.router.navigate(['/attribute-dictionary-list'])\n  }\n\n  AddForm() {\n    this.router.navigateByUrl('add-attribute-dictionary')\n  }\n\n  EditForm(attributeDictionary: AttributeDictionary) {\n    this.selectedAttributeDictionary = attributeDictionary\n    this.router.navigate(['edit-attribute-dictionary', this.selectedAttributeDictionary._id])\n    // this.ngZone.run(() => this.router.navigateByUrl(`edit-device/${id}`))\n  }\n}\n\n    \n\n    \n        \n  \n     Attribute Dictionary\n    \n      \n        \n          Name\n          Category\n          Type\n          Component\n          \n        \n      \n      \n        \n          {{ attributeDictionary.name }}\n          {{ attributeDictionary.category }}\n          {{ attributeDictionary.type }}\n          {{ attributeDictionary.component }}\n          \n            \n              \n                Edit\n              \n              \n                Delete\n              \n              \n                Clone\n              \n            \n          \n        \n      \n    \n    \n       Add\n    \n  \n  \n\n\n\n    \n\n    \n                \n                    ./attribute-dictionary-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Attribute Dictionary                            Name          Category          Type          Component                                                {{ attributeDictionary.name }}          {{ attributeDictionary.category }}          {{ attributeDictionary.type }}          {{ attributeDictionary.component }}                                                    Edit                                            Delete                                            Clone                                                                 Add        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AttributeDictionaryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttributeDictionaryService.html":{"url":"injectables/AttributeDictionaryService.html","title":"injectable - AttributeDictionaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttributeDictionaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/attribute-dictionary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneAttributeDictionary\n                            \n                            \n                                CreateAttributeDictionary\n                            \n                            \n                                DeleteAttributeDictionary\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetAttributeDictionaries\n                            \n                            \n                                GetAttributeDictionary\n                            \n                            \n                                UpdateAttributeDictionary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/attribute-dictionary.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nCloneAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Clones an attribute dictionary with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute dictionary to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned attribute dictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nCreateAttributeDictionary(data: AttributeDictionary)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Creates an attribute dictionary.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AttributeDictionary\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The attribute dictionary data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits the created attribute dictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nDeleteAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Deletes an attribute dictionary with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the attribute dictionary to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the deleted attribute dictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Handles the error response from an HTTP request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributeDictionaries\n                        \n                    \n                \n            \n            \n                \nGetAttributeDictionaries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Retrieves the attribute dictionaries.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits the attribute dictionaries.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nGetAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Retrieves an attribute dictionary by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute dictionary to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the retrieved AttributeDictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nUpdateAttributeDictionary(id: string | null, data: AttributeDictionary)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Updates an attribute dictionary with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute dictionary to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            AttributeDictionary\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated attribute dictionary data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits the updated attribute dictionary.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute-dictionary.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute-dictionary.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../environments/environment';\nimport { AttributeDictionary } from '../shared/attribute-dictionary';\nimport { LogService } from './log.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AttributeDictionaryService {\n  baseurl = environment.baseurl\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n  /**\n   * Retrieves the attribute dictionaries.\n   * @returns An observable that emits the attribute dictionaries.\n   */\n  GetAttributeDictionaries(): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributesDictionary/')\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Retrieves an attribute dictionary by its ID.\n   * @param id - The ID of the attribute dictionary to retrieve.\n   * @returns An Observable that emits the retrieved AttributeDictionary.\n   */\n  GetAttributeDictionary(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attribute-dictionary/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n  /**\n   * Deletes an attribute dictionary with the specified ID.\n   * @param id The ID of the attribute dictionary to delete.\n   * @returns An Observable that emits the deleted attribute dictionary.\n   */\n  DeleteAttributeDictionary(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/attributesDictionary/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n  /**\n   * Creates an attribute dictionary.\n   * @param data The attribute dictionary data to be created.\n   * @returns An observable that emits the created attribute dictionary.\n   */\n  CreateAttributeDictionary(data: AttributeDictionary): Observable {\n    return this.http\n      .post(\n        environment.baseurl + '/attributesDictionary/',\n        JSON.stringify(data, null, ' '),\n        this.httpOptions,\n      )\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n  /**\n   * Clones an attribute dictionary with the specified ID.\n   *\n   * @param id - The ID of the attribute dictionary to clone.\n   * @returns The UUID of the cloned attribute dictionary.\n   */\n  CloneAttributeDictionary(id: string): string {\n    this.GetAttributeDictionary(id).subscribe((value: AttributeDictionary) => {\n      console.log('Get attributes: ' + JSON.stringify(value, null, ' '))\n      this.CreateAttributeDictionary(value).subscribe({\n        next: (v) => {\n          console.log('Create attributes: ' + JSON.stringify(v, null, ' '))\n          this.ngZone.run(() => this.router.navigateByUrl('attributesDictionary-list'))\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list')),\n      })\n    })\n    return 'x'\n  }\n  /**\n   * Updates an attribute dictionary with the specified ID.\n   * @param id - The ID of the attribute dictionary to update.\n   * @param data - The updated attribute dictionary data.\n   * @returns An observable that emits the updated attribute dictionary.\n   */\n  UpdateAttributeDictionary(id: string | null, data: AttributeDictionary): Observable {\n    return this.http\n      .put(\n        environment.baseurl + '/attributesDictionary/' + id,\n        JSON.stringify(data, null, ' '),\n        this.httpOptions,\n      )\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n  /**\n   * Handles the error response from an HTTP request.\n   * @param error - The error object containing the error message and status.\n   * @returns An Observable that emits the error message.\n   */\n  errorHandl(error: { error: { message: string }; status: number; message: string }) {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.log(JSON.stringify(errorMessage, null, ' '))\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttributeService.html":{"url":"injectables/AttributeService.html","title":"injectable - AttributeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttributeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/attribute.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneAttribute\n                            \n                            \n                                CreateAttribute\n                            \n                            \n                                DeleteAttribute\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetAttribute\n                            \n                            \n                                GetAttributes\n                            \n                            \n                                GetAttributesSync\n                            \n                            \n                                GetContextAttributes\n                            \n                            \n                                GetDeviceAttributes\n                            \n                            \n                                    Async\n                                GetDeviceAttributesPromise\n                            \n                            \n                                GetModelAttributes\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, deviceService: DeviceService, modelService: ModelsService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/attribute.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneAttribute\n                        \n                    \n                \n            \n            \n                \nCloneAttribute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Clones an attribute with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateAttribute\n                        \n                    \n                \n            \n            \n                \nCreateAttribute(data: Attribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:161\n                        \n                    \n\n\n            \n                \n                        Creates a new attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Attribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The attribute data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the created attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteAttribute\n                        \n                    \n                \n            \n            \n                \nDeleteAttribute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:150\n                        \n                    \n\n\n            \n                \n                        Deletes an attribute by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the attribute to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:204\n                        \n                    \n\n\n            \n                \n                        Handles the error response from the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttribute\n                        \n                    \n                \n            \n            \n                \nGetAttribute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Retrieves an attribute by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the attribute to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributes\n                        \n                    \n                \n            \n            \n                \nGetAttributes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributesSync\n                        \n                    \n                \n            \n            \n                \nGetAttributesSync()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes synchronously.\n\n\n                        \n                            Returns :         Attribute[]\n\n                        \n                            \n                                An array of attributes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetContextAttributes\n                        \n                    \n                \n            \n            \n                \nGetContextAttributes(component: string, item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Retrieves the context attributes for a given component and item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe component name.\n\n\n                                            \n                                        \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe item in JSON format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Attribute[]\n\n                        \n                            \n                                An array of Attribute objects representing the context attributes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDeviceAttributes\n                        \n                    \n                \n            \n            \n                \nGetDeviceAttributes(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes of a device.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the device.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetDeviceAttributesPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetDeviceAttributesPromise(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes of a device using a Promise.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the device.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetModelAttributes\n                        \n                    \n                \n            \n            \n                \nGetModelAttributes(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes for a given model ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:222\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateAttribute\n                        \n                    \n                \n            \n            \n                \nUpdateAttribute(id: string, data: Attribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Updates an attribute with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Attribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated attribute data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated attribute.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\nimport { SyncRequestClient } from 'ts-sync-request/dist'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Attribute } from '../shared/attribute'\nimport { Device } from '../shared/device'\nimport { DeviceService } from './device.service'\nimport { LogService } from './log.service'\nimport { ModelsService } from './models.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AttributeService {\n  baseurl = environment.baseurl\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private deviceService: DeviceService,\n    private modelService: ModelsService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the attributes from the server.\n   * @returns An Observable that emits an array of Attribute objects.\n   */\n  GetAttributes(): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/', this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetDeviceAttributes', null as unknown as Attribute[])),\n      )\n  }\n\n  /**\n   * Retrieves the attributes synchronously.\n   * @returns An array of attributes.\n   */\n  GetAttributesSync(): Attribute[] {\n    let attributes: Attribute[] = []\n    const url = environment.baseurl + '/attributes/'\n    attributes = new SyncRequestClient().get(url)\n    console.log('GetAttributesSync.attributes: ' + JSON.stringify(attributes, null, ' '))\n    return attributes\n  }\n\n  /**\n   * Retrieves the attributes of a device.\n   * @param id The ID of the device.\n   * @returns An Observable that emits an array of Attribute objects.\n   */\n  GetDeviceAttributes(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/device/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetDeviceAttributes', id as unknown as Attribute)),\n      )\n  }\n\n  /**\n   * Retrieves the attributes of a device using a Promise.\n   * @param id The ID of the device.\n   * @returns A Promise that resolves to an array of Attribute objects.\n   */\n  async GetDeviceAttributesPromise(id: string) {\n    return this.http\n      .get(environment.baseurl + '/attributes/device/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetDeviceAttributesPromise', id as unknown as Attribute)),\n      )\n      .toPromise()\n  }\n\n  /**\n   * Retrieves the attributes for a given model ID.\n   * @param id The ID of the model.\n   * @returns An Observable that emits an array of Attribute objects.\n   */\n  GetModelAttributes(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/model/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetModelAttributes', id as unknown as Attribute)))\n  }\n\n  /**\n   * Retrieves the context attributes for a given component and item.\n   * @param component - The component name.\n   * @param item - The item in JSON format.\n   * @returns An array of Attribute objects representing the context attributes.\n   */\n  GetContextAttributes(component: string, item: string): Attribute[] {\n    let attributes: Attribute[] = []\n    let device: Device = new Device()\n    console.warn('JSON.parse(item): ' + item)\n    try {\n      device = JSON.parse(item) as Device\n    } catch (error) {\n      console.error('JSON.parse(item): ' + item + ' ' + error)\n    }\n    const url_model = environment.baseurl + '/attributes/model/' + device.modelId\n    const url_device = environment.baseurl + '/attributes/device/' + device._id\n    try {\n      attributes = new SyncRequestClient().get(url_model)\n    } catch (error) {\n      console.error('SyncRequestClient().get: ' + url_model + ' ' + error)\n    }\n    try {\n      attributes.push(...new SyncRequestClient().get(url_device))\n    } catch (error) {\n      console.error('SyncRequestClient().get: ' + url_device + ' ' + error)\n    }\n    console.log('device.id: ' + device._id + ' ' + url_device)\n    console.log('device.modelId: ' + device.modelId + ' ' + url_model)\n    console.log('GetContextAttributes.attributes: ' + attributes)\n    return attributes\n  }\n\n  /**\n   * Retrieves an attribute by its ID.\n   * @param id The ID of the attribute to retrieve.\n   * @returns An Observable that emits the retrieved attribute.\n   */\n  GetAttribute(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteAttribute', id as unknown as Attribute)))\n  }\n\n  /**\n   * Deletes an attribute by its ID.\n   * @param id The ID of the attribute to delete.\n   * @returns An Observable that emits the deleted attribute.\n   */\n  DeleteAttribute(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/attributes/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteAttribute', id as unknown as Attribute)))\n  }\n\n  /**\n   * Creates a new attribute.\n   * @param data The attribute data to be created.\n   * @returns An observable that emits the created attribute.\n   */\n  CreateAttribute(data: Attribute): Observable {\n    return this.http\n      .post(environment.baseurl + '/attributes/', JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateAttribute', data)))\n  }\n\n  /**\n   * Clones an attribute with the specified ID.\n   *\n   * @param id - The ID of the attribute to clone.\n   * @returns The UUID of the cloned attribute.\n   */\n  CloneAttribute(id: string): string {\n    this.GetAttribute(id).subscribe((value: Attribute) => {\n      console.log('Get attribute: ' + JSON.stringify(value, null, ' '))\n      this.CreateAttribute(value).subscribe({\n        next: (v) => {\n          console.log('Create attribute: ' + JSON.stringify(v, null, ' '))\n          this.ngZone.run(() => this.router.navigateByUrl('attribute-list'))\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('attribute-list')),\n      })\n    })\n    return ''\n  }\n\n  /**\n   * Updates an attribute with the specified ID.\n   * @param id - The ID of the attribute to update.\n   * @param data - The updated attribute data.\n   * @returns An Observable that emits the updated attribute.\n   */\n  UpdateAttribute(id: string, data: Attribute): Observable {\n    return this.http\n      .put(environment.baseurl + '/attributes/' + id, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateModel', data)))\n  }\n\n  /**\n   * Handles the error response from the server.\n   * @param error - The error object containing the error message and status.\n   * @returns An Observable that emits the error message.\n   */\n  errorHandl(error: { error: { message: string }; status: number; message: string }) {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.log(JSON.stringify(errorMessage, null, ' '))\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`attribute.service.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bug.html":{"url":"classes/Bug.html","title":"class - Bug","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bug\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/bug.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issue_message\n                            \n                            \n                                issue_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bug.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bug.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issue_message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bug.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issue_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/bug.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bug {\n  id: string\n  issue_name: string\n  issue_message: string\n\n  constructor() {\n    this.id = ''\n    this.issue_name = ''\n    this.issue_message = ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComponentDictionary.html":{"url":"classes/ComponentDictionary.html","title":"class - ComponentDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComponentDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/component-dictionary.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findType\n                            \n                            \n                                findTypeByName\n                            \n                            \n                                get\n                            \n                            \n                                    Public\n                                getRandom\n                            \n                            \n                                    Public\n                                getRandomName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionaryItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: '', description: '' },\n    { name: 'device', description: '' },\n    { name: 'model', description: '' },\n    { name: 'connection', description: '' },\n    { name: 'attribute', description: '' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/component-dictionary.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findType\n                        \n                    \n                \n            \n            \n                \nfindType(search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component-dictionary.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string | ComponentDictionaryItem\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findTypeByName\n                        \n                    \n                \n            \n            \n                \nfindTypeByName(obj: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component-dictionary.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component-dictionary.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ComponentDictionaryItem[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandom\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component-dictionary.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ComponentDictionaryItem\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component-dictionary.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ComponentDictionaryItem {\n  name: string\n  description: string\n}\n\nexport class ComponentDictionary {\n  list: ComponentDictionaryItem[] = [\n    { name: '', description: '' },\n    { name: 'device', description: '' },\n    { name: 'model', description: '' },\n    { name: 'connection', description: '' },\n    { name: 'attribute', description: '' },\n  ]\n\n  get(): ComponentDictionaryItem[] {\n    return this.list\n  }\n\n  public getRandom(): ComponentDictionaryItem {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findType(search: string): string | ComponentDictionaryItem {\n    const element = this.list.find((e) => e.name === search)\n    return element || search // element?.DeviceType || search\n  }\n\n  findTypeByName(obj: string) {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentDictionaryItem.html":{"url":"interfaces/ComponentDictionaryItem.html","title":"interface - ComponentDictionaryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentDictionaryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/component-dictionary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ComponentDictionaryItem {\n  name: string\n  description: string\n}\n\nexport class ComponentDictionary {\n  list: ComponentDictionaryItem[] = [\n    { name: '', description: '' },\n    { name: 'device', description: '' },\n    { name: 'model', description: '' },\n    { name: 'connection', description: '' },\n    { name: 'attribute', description: '' },\n  ]\n\n  get(): ComponentDictionaryItem[] {\n    return this.list\n  }\n\n  public getRandom(): ComponentDictionaryItem {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findType(search: string): string | ComponentDictionaryItem {\n    const element = this.list.find((e) => e.name === search)\n    return element || search // element?.DeviceType || search\n  }\n\n  findTypeByName(obj: string) {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Connection.html":{"url":"classes/Connection.html","title":"class - Connection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Connection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/connection.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a connection between devices.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                deviceIdFrom\n                            \n                            \n                                deviceIdTo\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection?: ConnectionInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/connection.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        ConnectionInterface\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceIdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceIdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface ConnectionInterface {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n}\n\n/**\n * Represents a connection between devices.\n */\nexport class Connection {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n\n  constructor(connection?: ConnectionInterface) {\n    this._id = connection?._id || ''\n    this.name = connection?.name || ''\n    this.deviceIdTo = connection?.deviceIdTo || ''\n    this.deviceIdFrom = connection?.deviceIdFrom || ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionAddComponent.html":{"url":"components/ConnectionAddComponent.html","title":"component - ConnectionAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection/add-connection/add-connection.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-connection\n            \n\n\n\n            \n                styleUrls\n                ./add-connection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-connection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addConnectionForm\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                connection\n                            \n                            \n                                deviceList\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                logComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDeviceFrom\n                            \n                            \n                                changeDeviceTo\n                            \n                            \n                                changeId\n                            \n                            \n                                changeName\n                            \n                            \n                                formConnection\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                gotoDevice\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    deviceIdTo\n                                \n                                \n                                    deviceIdFrom\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, connectionService: ConnectionService, deviceService: DeviceService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceFrom\n                        \n                    \n                \n            \n            \n                \nchangeDeviceFrom(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceTo\n                        \n                    \n                \n            \n            \n                \nchangeDeviceTo(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeId\n                        \n                    \n                \n            \n            \n                \nchangeId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formConnection\n                        \n                    \n                \n            \n            \n                \nformConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoDevice\n                        \n                    \n                \n            \n            \n                \ngotoDevice(deviceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addConnectionForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection\n\n                    \n                \n                \n                    \n                        Default value : new Connection()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Connection'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdTo\n                    \n                \n\n                \n                    \n                        getdeviceIdTo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdFrom\n                    \n                \n\n                \n                    \n                        getdeviceIdFrom()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:71\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { v4 as uuidv4 } from 'uuid'\n\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\n\nimport { ConnectionService } from '../../../services/connection.service'\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ComponentDictionary } from '../../../shared/component-dictionary'\nimport { Connection } from '../../../shared/connection'\nimport { Device } from '../../../shared/device'\n\n@Component({\n  selector: 'app-add-connection',\n  templateUrl: './add-connection.component.html',\n  styleUrls: ['./add-connection.component.scss'],\n})\nexport class ConnectionAddComponent implements OnInit {\n  addConnectionForm: FormGroup\n  connection: Connection = new Connection()\n  deviceList: Device[]\n  isSubmitted = false\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  logComponent = 'Connection'\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private connectionService: ConnectionService,\n    private deviceService: DeviceService,\n    private logService: LogService,\n  ) {}\n\n  formConnection() {\n    this.addConnectionForm = this.formBuilder.group({\n      id: [uuidv4(), [Validators.required, Validators.minLength(36)]],\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]],\n      deviceIdTo: ['', [Validators.required]],\n      deviceIdFrom: ['', [Validators.required]],\n    })\n  }\n\n  ngOnInit() {\n    this.formConnection()\n    this.getDeviceList()\n  }\n  changeId(e: Event) {\n    this.id?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeName(e: Event) {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeDeviceTo(e: Event) {\n    this.deviceIdTo?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeDeviceFrom(e: Event) {\n    this.deviceIdFrom?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get id() {\n    return this.addConnectionForm.get('id')\n  }\n  get name() {\n    return this.addConnectionForm.get('name')\n  }\n  get deviceIdTo() {\n    return this.addConnectionForm.get('deviceIdTo')\n  }\n  get deviceIdFrom() {\n    return this.addConnectionForm.get('deviceIdFrom')\n  }\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, 2)\n  }\n  getDeviceList() {\n    return this.deviceService.GetDevices().subscribe((data: Device[]) => {\n      const tmp = new Device()\n      data.unshift(tmp)\n      this.deviceList = data\n    })\n  }\n  gotoDevice(deviceId: string) {\n    this.router.navigate(['edit-device/', deviceId])\n  }\n  submitForm() {\n    this.connectionService.CreateConnection(this.addConnectionForm.value as Connection).subscribe(() => {\n      this.logService\n        .CreateLog({\n          objectId: this.addConnectionForm.get('id')?.value,\n          message: this.addConnectionForm.value,\n          operation: 'Create',\n          component: 'Connection',\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('connection-list'))\n          this.router.navigate(['connection-list'])\n        })\n    })\n  }\n}\n\n    \n\n    \n        \n   Add Connection\n  \n  {{ this.toString(this.addConnectionForm.controls.id.value) }}\n  \n    \n      \n        \n          Name\n          \n          \n            Name is required.\n            \n              Name must be at least 6 characters long.\n            \n          \n          \n            Please provide connection name.\n          \n        \n      \n    \n    \n      \n        \n          Device From\n          \n            \n              {{ deviceFromObj.name }}\n            \n          \n          Device Id From is required\n        \n      \n      \n        \n          Device To\n          \n            \n              {{ deviceToObj.name }}\n            \n          \n          \n            Device Id To is required\n          \n          \n            {{ this.toString(this.addConnectionForm.controls.deviceIdTo.hasError) }}\n          \n        \n      \n    \n    \n      \n         Add connection\n      \n      \n        Form is invalid\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-connection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Connection    {{ this.toString(this.addConnectionForm.controls.id.value) }}                              Name                                Name is required.                          Name must be at least 6 characters long.                                            Please provide connection name.                                                        Device From                                    {{ deviceFromObj.name }}                                Device Id From is required                                      Device To                                    {{ deviceToObj.name }}                                            Device Id To is required                                {{ this.toString(this.addConnectionForm.controls.deviceIdTo.hasError) }}                                               Add connection                    Form is invalid            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionEditComponent.html":{"url":"components/ConnectionEditComponent.html","title":"component - ConnectionEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection/edit-connection/edit-connection.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-connection\n            \n\n\n\n            \n                styleUrls\n                ./edit-connection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-connection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                changeDeviceFrom\n                            \n                            \n                                changeDeviceTo\n                            \n                            \n                                changeId\n                            \n                            \n                                changeName\n                            \n                            \n                                component\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                connection\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                deviceList\n                            \n                            \n                                form\n                            \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                inputId\n                            \n                            \n                                isSubmitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getConnection\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    deviceIdTo\n                                \n                                \n                                    deviceIdFrom\n                                \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, activatedRoute: ActivatedRoute, connectionService: ConnectionService, deviceService: DeviceService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    getConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceFrom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceTo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:97\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdTo\n                    \n                \n\n                \n                    \n                        getdeviceIdTo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdFrom\n                    \n                \n\n                \n                    \n                        getdeviceIdFrom()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:113\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { firstValueFrom, Observable, tap } from 'rxjs';\n\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ConnectionService } from '../../../services/connection.service';\nimport { DeviceService } from '../../../services/device.service';\nimport { LogService } from '../../../services/log.service';\nimport { ComponentDictionary } from '../../../shared/component-dictionary';\nimport { Connection } from '../../../shared/connection';\nimport { Device } from '../../../shared/device';\n\n@Component({\n  selector: 'app-edit-connection',\n  templateUrl: './edit-connection.component.html',\n  styleUrls: ['./edit-connection.component.scss'],\n})\nexport class ConnectionEditComponent implements OnInit {\n  inputId: string\n  form: FormGroup\n  connection: Connection\n  deviceList: Device[]\n  isSubmitted = false\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  component: string\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public activatedRoute: ActivatedRoute,\n    private connectionService: ConnectionService,\n    private deviceService: DeviceService,\n    private logService: LogService,\n  ) {\n    this.form = this.createFormGroup()\n  }\n\n  ngOnInit() {\n    this.getDeviceList()\n    this.inputId = this.activatedRoute.snapshot.paramMap.get('id') ?? ''\n    this.getConnection(this.inputId).subscribe((data: Connection) => {\n      this.connection = data\n      this.component = this.inputId\n      this.form = this.createFormGroup()\n      console.log('ConnectionEditComponent.ngOnInit() => ' + JSON.stringify(this.connection, null, ' '))\n      this.form.patchValue({\n        _id: this.connection._id,\n        name: this.connection.name,\n        deviceIdTo: this.connection.deviceIdTo,\n        deviceIdFrom: this.connection.deviceIdFrom,\n      })\n    })\n    this.component = this.inputId\n    this.connection = new Connection()\n  }\n\n  createFormGroup = () => {\n    return new FormGroup({\n      _id: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]),\n      deviceIdTo: new FormControl('', [Validators.required]),\n      deviceIdFrom: new FormControl('', [Validators.required]),\n    })\n  }\n\n  changeId = (e: Event): void => {\n    if (this.id) {\n      const value = (e.target as HTMLInputElement).value\n      const objectId = value as never\n      this.id.setValue(objectId, { onlySelf: true })\n    }\n  }\n\n  changeName = (e: Event): void => {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeDeviceFrom = (e: Event): void => {\n    const value = (e.target as HTMLInputElement).value\n    const objectId = value\n    this.deviceIdFrom?.setValue(objectId, { onlySelf: true })\n  }\n\n  changeDeviceTo = (e: Event): void => {\n    const value = (e.target as HTMLInputElement).value\n    const objectId = value\n    this.deviceIdTo?.setValue(objectId, { onlySelf: true })\n  }\n\n  get id() {\n    return this.form.get('id')\n  }\n\n  get name() {\n    return this.form.get('name')\n  }\n\n  get deviceIdTo() {\n    return this.form.get('deviceIdTo')\n  }\n\n  get deviceIdFrom() {\n    return this.form.get('deviceIdFrom')\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.form.controls\n  }\n\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, 2)\n  }\n\n  getDeviceList() {\n    return this.deviceService.GetDevices().subscribe((data: Device[]) => {\n      const tmp = new Device()\n      data.unshift(tmp)\n      this.deviceList = data\n    })\n  }\n\n  private getConnection(id: string): Observable {\n    return this.connectionService.GetConnection(id).pipe(\n      tap((data: Connection) => {\n        console.log(\n          'ConnectionEditComponent.connectionService.GetConnection(' + id + ') => ' + JSON.stringify(data, null, ' '),\n        )\n        this.connection = data\n      }),\n    )\n  }\n\n  async submitForm() {\n    const formValue = this.form.value as unknown as Connection\n    await firstValueFrom(this.connectionService.UpdateConnection(this.inputId, this.form.value as Connection))\n    await firstValueFrom(\n      this.logService.CreateLog({\n        component: 'Connection',\n        objectId: formValue._id,\n        operation: 'Update',\n        message: { value: this.form.value as unknown },\n      }),\n    )\n    await this.ngZone.run(() => this.router.navigateByUrl('connection-list')).catch(() => {})\n    await this.router.navigate(['connection-list']).catch(() => {})\n  }\n}\n\n    \n\n    \n        \n   Edit Connection\n\n  \n    \n      \n        \n          Name\n          \n          {{ this.form.value._id }}\n          Looks good!\n          Please choose a name 6 char len.\n\n          \n            Name is required.\n            Name must be at least 6 characters long.\n          \n          \n            Please provide connection name.\n          \n        \n      \n    \n    \n      \n        \n          Device From\n          \n            \n              {{ deviceFromObj.name }}\n            \n          \n          \n            attributeDictionaryId is required\n          \n          \n            {{ this.toString(this.form.controls.deviceIdFrom.value) }}\n          \n        \n      \n      \n        \n          Device To\n          \n            \n              {{ deviceToObj.name }}\n            \n          \n          \n            attributeDictionaryId is required\n          \n          \n            {{ this.toString(this.form.controls.deviceIdTo.value) }}\n          \n        \n      \n    \n    \n      \n         Update\n      \n      Form is invalid\n      Form is valid\n    \n  \n\n\n\n    \n\n    \n                \n                    ./edit-connection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Connection                              Name                    {{ this.form.value._id }}          Looks good!          Please choose a name 6 char len.                      Name is required.            Name must be at least 6 characters long.                                Please provide connection name.                                                        Device From                                    {{ deviceFromObj.name }}                                            attributeDictionaryId is required                                {{ this.toString(this.form.controls.deviceIdFrom.value) }}                                                Device To                                    {{ deviceToObj.name }}                                            attributeDictionaryId is required                                {{ this.toString(this.form.controls.deviceIdTo.value) }}                                               Update            Form is invalid      Form is valid      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionInterface.html":{"url":"interfaces/ConnectionInterface.html","title":"interface - ConnectionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/connection.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            deviceIdFrom\n                                        \n                                \n                                \n                                        \n                                            deviceIdTo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceIdFrom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceIdFrom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceIdTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceIdTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConnectionInterface {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n}\n\n/**\n * Represents a connection between devices.\n */\nexport class Connection {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n\n  constructor(connection?: ConnectionInterface) {\n    this._id = connection?._id || ''\n    this.name = connection?.name || ''\n    this.deviceIdTo = connection?.deviceIdTo || ''\n    this.deviceIdFrom = connection?.deviceIdFrom || ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionListComponent.html":{"url":"components/ConnectionListComponent.html","title":"component - ConnectionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection/connection-list/connection-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connection-list\n            \n\n\n\n            \n                styleUrls\n                ./connection-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connection-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                connectionList\n                            \n                            \n                                connectionListPage\n                            \n                            \n                                    Public\n                                ConnectionService\n                            \n                            \n                                deviceList\n                            \n                            \n                                selectedConnection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddForm\n                            \n                            \n                                    Async\n                                cloneConnection\n                            \n                            \n                                deleteConnection\n                            \n                            \n                                editConnection\n                            \n                            \n                                findDevice\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                gotoDevice\n                            \n                            \n                                loadConnection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ConnectionService: ConnectionService, router: Router, ngZone: NgZone, deviceService: DeviceService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ConnectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddForm\n                        \n                    \n                \n            \n            \n                \nAddForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cloneConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    cloneConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteConnection\n                        \n                    \n                \n            \n            \n                \ndeleteConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editConnection\n                        \n                    \n                \n            \n            \n                \neditConnection(Connection: Connection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Connection\n                                            \n                                                            Connection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findDevice\n                        \n                    \n                \n            \n            \n                \nfindDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Device\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoDevice\n                        \n                    \n                \n            \n            \n                \ngotoDevice(deviceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadConnection\n                        \n                    \n                \n            \n            \n                \nloadConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Connections'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectionList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectionListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ConnectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection\n\n                    \n                \n                \n                    \n                        Default value : new Connection()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ConnectionService } from '../../../services/connection.service';\nimport { DeviceService } from '../../../services/device.service';\nimport { LogIn, LogService } from '../../../services/log.service';\nimport { Connection } from '../../../shared/connection';\nimport { Device } from '../../../shared/device';\n\n@Component({\n  selector: 'app-connection-list',\n  templateUrl: './connection-list.component.html',\n  styleUrls: ['./connection-list.component.scss'],\n})\nexport class ConnectionListComponent implements OnInit {\n  connectionList: Connection[] = []\n  selectedConnection: Connection = new Connection()\n  connectionListPage = 1\n  deviceList: Device[] = []\n  component = 'Connections'\n\n  ngOnInit() {\n    this.loadConnection()\n    this.getDeviceList()\n  }\n\n  constructor(\n    public ConnectionService: ConnectionService,\n    private router: Router,\n    private ngZone: NgZone,\n    private deviceService: DeviceService,\n    private logService: LogService,\n  ) {}\n\n  loadConnection() {\n    return this.ConnectionService.GetConnections().subscribe((data: Connection[]) => {\n      this.connectionList = data\n    })\n  }\n\n  getDeviceList() {\n    return this.deviceService.GetDevices().subscribe((data: Device[]) => {\n      this.deviceList = data\n    })\n  }\n\n  findDevice(id: string): Device {\n    let device: Device = new Device()\n    device = this.deviceList.find((e: Device): boolean => e._id === id) || device\n    return device\n  }\n\n  gotoDevice(deviceId: string) {\n    this.router.navigate(['edit-device/', deviceId])\n  }\n\n  deleteConnection(id: string) {\n    this.logService\n      .CreateLog({\n        message: { id: id },\n        objectId: id,\n        operation: 'Delete',\n        component: 'Connection',\n      })\n      .subscribe((data: LogIn) => {\n        console.log(data)\n        this.loadConnection()\n        this.router.navigate(['/connection-list'])\n      })\n    return this.ConnectionService.DeleteConnection(id).subscribe((data: Connection) => {\n      console.log(data)\n      this.loadConnection()\n      this.router.navigate(['/connection-list'])\n    })\n  }\n\n  async cloneConnection(id: string) {\n    const id_new: string = this.ConnectionService.CloneConnection(id)\n    this.logService\n      .CreateLog({\n        message: { id: id, id_new: id_new },\n        operation: 'Clone',\n        component: 'Connection',\n      })\n      .subscribe(() => {\n        this.ngZone.run(() => this.router.navigateByUrl('connection-list'))\n      })\n  }\n\n  AddForm() {\n    this.router.navigateByUrl('add-connection')\n  }\n\n  editConnection(Connection: Connection) {\n    this.selectedConnection = Connection\n    this.router.navigate(['edit-connection', this.selectedConnection._id])\n  }\n}\n\n    \n\n    \n        \n   Connections\n  \n    \n      \n        Name\n        Device From\n        Device To\n      \n    \n    \n      \n        \n          {{ connectionObj.name }}\n          {{ connectionObj._id }}\n        \n        \n          \n             {{ this.findDevice(connectionObj.deviceIdFrom).name }}\n          \n          {{ connectionObj.deviceIdFrom }}\n        \n        \n          \n             {{ this.findDevice(connectionObj.deviceIdTo).name }}\n          \n          {{ connectionObj.deviceIdTo }}\n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n    \n  \n  \n     Add\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./connection-list.component.scss\n                \n                .deviceid {\n  color: #9a9aa7;\n  font-size: small;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Connections                    Name        Device From        Device To                                      {{ connectionObj.name }}          {{ connectionObj._id }}                                       {{ this.findDevice(connectionObj.deviceIdFrom).name }}                    {{ connectionObj.deviceIdFrom }}                                       {{ this.findDevice(connectionObj.deviceIdTo).name }}                    {{ connectionObj.deviceIdTo }}                                                                                                                                                                                 Add    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionService.html":{"url":"injectables/ConnectionService.html","title":"injectable - ConnectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/connection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneConnection\n                            \n                            \n                                CreateConnection\n                            \n                            \n                                DeleteConnection\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetConnection\n                            \n                            \n                                GetConnections\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/connection.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneConnection\n                        \n                    \n                \n            \n            \n                \nCloneConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Clones a connection with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the connection to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned connection.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateConnection\n                        \n                    \n                \n            \n            \n                \nCreateConnection(data: Connection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Creates a connection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Connection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The connection data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the created connection.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteConnection\n                        \n                    \n                \n            \n            \n                \nDeleteConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Deletes a connection by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the connection to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted Connection object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Handles the error response from the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nAn Observable that emits the error message.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConnection\n                        \n                    \n                \n            \n            \n                \nGetConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves a connection by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the connection to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved Connection object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConnections\n                        \n                    \n                \n            \n            \n                \nGetConnections()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Retrieves the connections.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type Connection.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:134\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateConnection\n                        \n                    \n                \n            \n            \n                \nUpdateConnection(id: string, data: Connection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Updates a connection with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the connection to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Connection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated connection data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the updated connection.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\nimport { v4 as uuidv4 } from 'uuid' // Import the uuidv4 function\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Connection } from '../shared/connection'\nimport { LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionService {\n  baseurl = environment.baseurl\n\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the connections.\n   * @returns An Observable of type Connection.\n   */\n  GetConnections(): Observable {\n    return this.http\n      .get(environment.baseurl + '/connections/')\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Retrieves a connection by its ID.\n   * @param id The ID of the connection to retrieve.\n   * @returns An Observable that emits the retrieved Connection object.\n   */\n  GetConnection(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/connections/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Deletes a connection by its ID.\n   * @param id The ID of the connection to delete.\n   * @returns An Observable that emits the deleted Connection object.\n   */\n  DeleteConnection(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/connections/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteConnection')))\n  }\n\n  /**\n   * Creates a connection.\n   * @param data The connection data to be created.\n   * @returns An observable that emits the created connection.\n   */\n  CreateConnection(data: Connection): Observable {\n    return this.http\n      .post(environment.baseurl + '/connections/', JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateConnection', data)))\n  }\n\n  /**\n   * Clones a connection with the specified ID.\n   *\n   * @param id - The ID of the connection to clone.\n   * @returns The UUID of the cloned connection.\n   */\n  CloneConnection(id: string): string {\n    const id_uuid = uuidv4().toString().substr(6, 36) // Call the uuidv4 function\n    this.GetConnection(id).subscribe((value: Connection) => {\n      console.log('Get Connections: ' + JSON.stringify(value))\n      value._id = id_uuid\n      this.CreateConnection(value).subscribe({\n        next: (v) => {\n          console.log('Create Connections: ' + JSON.stringify(v))\n          this.ngZone.run(() => this.router.navigateByUrl('connections-list'))\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('connections-list')),\n      })\n    })\n    return id_uuid\n  }\n\n  /**\n   * Updates a connection with the specified ID.\n   * @param {ObjectId} id - The ID of the connection to update.\n   * @param {Connection} data - The updated connection data.\n   * @returns {Observable} An observable that emits the updated connection.\n   */\n  UpdateConnection(id: string, data: Connection): Observable {\n    return this.http\n      .put(environment.baseurl + '/connections/' + id, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateConnection', data)))\n  }\n\n  /**\n   * Handles the error response from the server.\n   * @param error - The error object containing the error message and status.\n   * @returns - An Observable that emits the error message.\n   */\n  errorHandl(error: { error: { message: string }; status: number; message: string }) {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.log(JSON.stringify(errorMessage))\n\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`DeviceService.handleErrorTemplate operation: ${operation}, error: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomErrorHandler.html":{"url":"injectables/CustomErrorHandler.html","title":"injectable - CustomErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/errorHandler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/errorHandler.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomErrorHandler implements ErrorHandler {\n  handleError(error: Error): void {\n    // Log the error to the console.\n    console.error(error)\n\n    // Display a friendly error message to the user.\n    alert('An unexpected error occurred. Please try again later.')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Device.html":{"url":"classes/Device.html","title":"class - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                modelId\n                            \n                            \n                                name\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?: string, modelId?: string, position?: Position)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/device.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        position\n                                                  \n                                                        \n                                                                        Position\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Position\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0, h: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/device.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Position {\n  x: number\n  y: number\n  h: number\n}\n\nexport interface DeviceInterface {\n  _id: string\n  name: string\n  modelId: string\n  position: Position\n}\n\nexport class Device {\n  _id!: string\n  name: string = ''\n  modelId: string = ''\n  position: Position = { x: 0, y: 0, h: 0 }\n\n  constructor(name?: string, modelId?: string, position?: Position) {\n    if (name && modelId && position) {\n      this.name = name\n      this.modelId = modelId\n      this.position = position\n    }\n  }\n\n  toString(): string {\n    return `Device ID: ${this._id}, Name: ${this.name}`\n  }\n}\n\n// @TODO: #2:30min Continue implementing the tests for the Device class. Add tests for the constructor and the toString method. Make sure to test the case where the constructor is called with no arguments. Add object data to the constructor and test the toString method.\nconst debug = true\nif (debug === true) {\n  const d1 = new Device()\n  console.log(d1.toString())\n\n  const d2Data = { name: 'Device 1', modelId: '1', position: { x: 1, y: 2, h: 3 } }\n  const d2 = new Device(d2Data.name, d2Data.modelId, d2Data.position)\n\n  d1.toString()\n  d2.toString()\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceAddComponent.html":{"url":"components/DeviceAddComponent.html","title":"component - DeviceAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices/add-device/add-device.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-device\n            \n\n\n\n            \n                styleUrls\n                ./add-device.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-device.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addDeviceForm\n                            \n                            \n                                device\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                model\n                            \n                            \n                                modelList\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeH\n                            \n                            \n                                changeId\n                            \n                            \n                                changeModelId\n                            \n                            \n                                changeX\n                            \n                            \n                                changeY\n                            \n                            \n                                generateDevice\n                            \n                            \n                                loadModels\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    modelId\n                                \n                                \n                                    x\n                                \n                                \n                                    y\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, devicesService: DeviceService, modelService: ModelsService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeH\n                        \n                    \n                \n            \n            \n                \nchangeH(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeId\n                        \n                    \n                \n            \n            \n                \nchangeId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeModelId\n                        \n                    \n                \n            \n            \n                \nchangeModelId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeX\n                        \n                    \n                \n            \n            \n                \nchangeX(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeY\n                        \n                    \n                \n            \n            \n                \nchangeY(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDevice\n                        \n                    \n                \n            \n            \n                \ngenerateDevice()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addDeviceForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl('', null),\n    name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    modelId: new FormControl('', Validators.required),\n    position: new FormGroup({\n      x: new FormControl(0, [Validators.required, this.valid.numberValidator]),\n      y: new FormControl(0, [Validators.required, this.valid.numberValidator]),\n      h: new FormControl(0, [Validators.required, this.valid.numberValidator]),\n    }),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoryDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypeDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Default value : new Model()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Validation\n\n                    \n                \n                \n                    \n                        Default value : new Validation()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelId\n                    \n                \n\n                \n                    \n                        getmodelId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        x\n                    \n                \n\n                \n                    \n                        getx()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        y\n                    \n                \n\n                \n                    \n                        gety()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:88\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { faker } from '@faker-js/faker'\n\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Device } from '../../../shared/device'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/deviceTypes'\nimport { Model } from '../../../shared/model'\nimport Validation from '../../../shared/validation'\n\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.scss'],\n})\nexport class DeviceAddComponent implements OnInit {\n  device: Device\n  isSubmitted = false\n  deviceTypeDict: DeviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict: DeviceCategoryDict = new DeviceCategoryDict()\n  model: Model = new Model()\n  modelList: Model[]\n  valid: Validation = new Validation()\n\n  addDeviceForm = new FormGroup({\n    id: new FormControl('', null),\n    name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    modelId: new FormControl('', Validators.required),\n    position: new FormGroup({\n      x: new FormControl(0, [Validators.required, this.valid.numberValidator]),\n      y: new FormControl(0, [Validators.required, this.valid.numberValidator]),\n      h: new FormControl(0, [Validators.required, this.valid.numberValidator]),\n    }),\n  })\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public devicesService: DeviceService,\n    private modelService: ModelsService,\n    private logService: LogService,\n  ) {}\n\n  ngOnInit() {\n    this.loadModels()\n  }\n  loadModels() {\n    return this.modelService.GetModels().subscribe((data: Model[]): void => {\n      this.modelList = data\n    })\n  }\n  changeId(e: Event) {\n    this.id?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeX(e: Event) {\n    this.x?.setValue(Number((e.target as HTMLInputElement).value), { onlySelf: true })\n  }\n  changeY(e: Event) {\n    this.y?.setValue(Number((e.target as HTMLInputElement).value), { onlySelf: true })\n  }\n  changeH(e: Event) {\n    this.h?.setValue(Number((e.target as HTMLInputElement).value), { onlySelf: true })\n  }\n  changeModelId(e: Event) {\n    this.modelId?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get id() {\n    return this.addDeviceForm.get('id')\n  }\n  get name() {\n    return this.addDeviceForm.get('name')\n  }\n  get modelId() {\n    return this.addDeviceForm.get('modelId')\n  }\n  get x() {\n    return this.addDeviceForm.get('position')?.get('x')\n  }\n  get y() {\n    return this.addDeviceForm.get('position')?.get('y')\n  }\n  get h() {\n    return this.addDeviceForm.get('position')?.get('h')\n  }\n\n  toString(data: Record): string {\n    return JSON.stringify(data, null, ' ')\n  }\n\n  generateDevice() {\n    this.addDeviceForm.controls.name.setValue(faker.company.name() + ' - ' + faker.company.buzzPhrase())\n    this.addDeviceForm.controls.position.controls.x.setValue(faker.number.int(10))\n    this.addDeviceForm.controls.position.controls.y.setValue(faker.number.int(10))\n    this.addDeviceForm.controls.position.controls.h.setValue(faker.number.int(10))\n    this.addDeviceForm.controls.modelId.setValue(\n      this.modelList[Math.floor(Math.random() * this.modelList.length)]._id.toString(),\n    )\n  }\n\n  submitForm() {\n    console.log('Device added!')\n    this.logService.CreateLog({\n      operation: 'Create',\n      component: 'Device',\n      // objectId: res._id,\n      message: this.addDeviceForm.value,\n    })\n    this.devicesService.CreateDevice(this.device).subscribe(() => {\n      // Removed 'res' parameter\n      this.ngZone.run(() => this.router.navigateByUrl('device-list'))\n    })\n  }\n}\n\n    \n\n    \n        \n   Add Device\n  \n    Id\n    \n    \n      Name\n      \n      \n        Name is required\n        Name must be at least 4 characters\n      \n    \n    \n      \n        \n          \n            x\n            \n            \n              X is required\n              \n                X must be at least 1 character\n              \n            \n          \n        \n        \n          \n            y\n            \n            \n              Y is required\n              \n                Y must be at least 1 character\n              \n            \n          \n        \n        \n          \n            h\n            \n            \n            H is required\n            \n              H must be at least 1 character\n            \n          \n        \n      \n    \n    \n      \n        \n          Model\n          \n            \n              {{ modelObj.name }}\n            \n          \n          \n            Name is required\n          \n        \n      \n    \n    Form Status: {{ addDeviceForm.status }}\n    \n      \n        \n           Add\n        \n      \n      \n        \n           Generate random data\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-device.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Device      Id              Name                    Name is required        Name must be at least 4 characters                                                  x                                      X is required                              X must be at least 1 character                                                                          y                                      Y is required                              Y must be at least 1 character                                                                          h                                    H is required                          H must be at least 1 character                                                                    Model                                    {{ modelObj.name }}                                            Name is required                                Form Status: {{ addDeviceForm.status }}                             Add                                       Generate random data                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceCategory.html":{"url":"classes/DeviceCategory.html","title":"class - DeviceCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceCategories.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeviceCategory {\n  name: string = ''\n  description: string = ''\n}\n\nexport class DeviceCategoryDict {\n  list: DeviceCategory[] = [\n    {\n      name: '',\n      description: '',\n    },\n    {\n      name: 'Connectivity',\n      description: 'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      name: 'Facility',\n      description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      name: 'Site',\n      description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n\n  public getRandomCategory(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findCategory(deviceCategory: DeviceCategory, searchCategory: string) {\n    return deviceCategory.name == searchCategory\n  }\n\n  public getRandom(): DeviceCategory {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceCategoryDict.html":{"url":"classes/DeviceCategoryDict.html","title":"class - DeviceCategoryDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceCategoryDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceCategories.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findCategory\n                            \n                            \n                                    Public\n                                getRandom\n                            \n                            \n                                    Public\n                                getRandomCategory\n                            \n                            \n                                    Public\n                                getRandomName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DeviceCategory[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: '',\n      description: '',\n    },\n    {\n      name: 'Connectivity',\n      description: 'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      name: 'Facility',\n      description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      name: 'Site',\n      description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findCategory\n                        \n                    \n                \n            \n            \n                \nfindCategory(deviceCategory: DeviceCategory, searchCategory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceCategory\n                                            \n                                                            DeviceCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchCategory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandom\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         DeviceCategory\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DeviceCategory {\n  name: string = ''\n  description: string = ''\n}\n\nexport class DeviceCategoryDict {\n  list: DeviceCategory[] = [\n    {\n      name: '',\n      description: '',\n    },\n    {\n      name: 'Connectivity',\n      description: 'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      name: 'Facility',\n      description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      name: 'Site',\n      description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n\n  public getRandomCategory(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findCategory(deviceCategory: DeviceCategory, searchCategory: string) {\n    return deviceCategory.name == searchCategory\n  }\n\n  public getRandom(): DeviceCategory {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceEditComponent.html":{"url":"components/DeviceEditComponent.html","title":"component - DeviceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices/edit-device/edit-device.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-device\n            \n\n\n\n            \n                styleUrls\n                ./edit-device.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-device.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                attributeComponent\n                            \n                            \n                                attributeComponentObject\n                            \n                            \n                                component\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                device\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                            \n                                editDeviceForm\n                            \n                            \n                                modelList\n                            \n                            \n                                numberValidator\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadModels\n                            \n                            \n                                    Async\n                                navigateToDeviceList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    modelId\n                                \n                                \n                                    x\n                                \n                                \n                                    y\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, devicesService: DeviceService, router: Router, logService: LogService, modelsService: ModelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        navigateToDeviceList\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigateToDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponentObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                \n                    \n                        Default value : new Device()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDeviceForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Validation\n\n                    \n                \n                \n                    \n                        Default value : new Validation()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelId\n                    \n                \n\n                \n                    \n                        getmodelId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:136\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        x\n                    \n                \n\n                \n                    \n                        getx()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:140\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        y\n                    \n                \n\n                \n                    \n                        gety()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:144\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:148\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { lastValueFrom } from 'rxjs';\n\nimport { Component, OnInit } from '@angular/core';\nimport {\n    AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { DeviceService } from '../../../services/device.service';\nimport { LogIn, LogService } from '../../../services/log.service';\nimport { ModelsService } from '../../../services/models.service';\nimport { Device } from '../../../shared/device';\nimport { Model } from '../../../shared/model';\nimport Validation from '../../../shared/validation';\n\n@Component({\n  selector: 'app-edit-device',\n  templateUrl: './edit-device.component.html',\n  styleUrls: ['./edit-device.component.scss'],\n})\nexport class DeviceEditComponent implements OnInit {\n  device: Device = new Device()\n  modelList: Model[]\n  valid: Validation = new Validation()\n  editDeviceForm: FormGroup // Declare the editDeviceForm property\n\n  // Arrow function for number validation\n  numberValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const value: number = control.value as number\n    if (isNaN(Number(value)) || Number(value)  {\n    return new FormGroup({\n      _id: new FormControl('', Validators.required),\n      name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      modelId: new FormControl('', Validators.required),\n      position: new FormGroup({\n        x: new FormControl(0, [Validators.required, this.numberValidator]),\n        y: new FormControl(0, [Validators.required]),\n        h: new FormControl(0, [Validators.required]),\n      }),\n    })\n  }\n\n  attributeComponent: string\n  attributeComponentObject: string\n  component: string\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    public devicesService: DeviceService,\n    private router: Router,\n    private logService: LogService,\n    private modelsService: ModelsService,\n  ) {}\n\n  ngOnInit(): void {\n    const id = this.activatedRoute.snapshot.paramMap.get('id') || ''\n    this.attributeComponent = 'device'\n    this.component = id\n    this.loadModels()\n\n    if (id) {\n      this.devicesService.getDeviceSynchronize(id).subscribe({\n        next: (device: Device) => {\n          this.device = device\n        },\n        error: (error) => {\n          console.error('Error fetching device:', error)\n        },\n      })\n    }\n    this.editDeviceForm = this.createFormGroup() // Initialize the editDeviceForm property\n    if (this.editDeviceForm) {\n      this.editDeviceForm.patchValue({\n        _id: this.device._id,\n        name: this.device.name,\n        modelId: this.device.modelId,\n        position: {\n          x: this.device.position.x,\n          y: this.device.position.y,\n          h: this.device.position.h,\n        },\n      })\n    }\n  }\n\n  loadModels(): void {\n    this.modelsService.GetModels().subscribe((data: Model[]): void => {\n      this.modelList = data\n    })\n  }\n  async navigateToDeviceList() {\n    await this.router.navigate(['device-list'])\n  }\n\n  async submitForm() {\n    if (this.editDeviceForm.valid && this.editDeviceForm.touched) {\n      console.log('DeviceEditComponent.submitForm(): ' + JSON.stringify(this.editDeviceForm.value, null, 2))\n      const { _id } = this.editDeviceForm.value\n      const log: LogIn = {\n        message: this.editDeviceForm.value,\n        operation: 'Update',\n        component: 'Device',\n        objectId: _id as string,\n      }\n\n      try {\n        try {\n          await lastValueFrom(this.logService.CreateLog(log))\n        } catch (error) {\n          console.error('Error creating log:', error)\n        }\n\n        try {\n          await lastValueFrom(this.devicesService.UpdateDevice(this.editDeviceForm.value as unknown as Device))\n        } catch (error) {\n          console.error('Error update Device:', error)\n        }\n\n        await this.navigateToDeviceList()\n      } catch (error) {\n        console.error('Error during form submission:', error)\n      }\n    }\n  }\n\n  get name() {\n    return this.editDeviceForm.get('name')\n  }\n\n  get modelId() {\n    return this.editDeviceForm.get('modelId')\n  }\n\n  get x() {\n    return this.editDeviceForm.get('x')\n  }\n\n  get y() {\n    return this.editDeviceForm.get('y')\n  }\n\n  get h() {\n    return this.editDeviceForm.get('h')\n  }\n}\n\n    \n\n    \n        \n   Edit Device\n  \n    \n      \n        Id\n        \n        \n          Id is required\n          Id must be at least 4 characters\n        \n      \n      \n        \n          Name\n          \n          \n            Name is required\n            Name must be at least 4 characters\n          \n        \n      \n    \n    \n      Position\n      \n        \n          x\n          \n        \n        \n          Name is required\n        \n      \n      \n        \n          y\n          \n        \n        \n          Name is required\n        \n      \n      \n        \n          h\n          \n        \n        \n          Name is required\n        \n      \n    \n    \n      \n        \n          Model\n          \n            \n              {{ modelObj.name }}\n            \n          \n          \n            Name is required\n          \n        \n      \n    \n    \n      \n         Update\n      \n\n      \n        editDeviceForm is invalid or untouched\n      \n      \n        editDeviceForm is valid and touched\n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./edit-device.component.scss\n                \n                input.ng-invalid.ng-touched {\n  border: 2px solid red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Device                    Id                          Id is required          Id must be at least 4 characters                                      Name                                Name is required            Name must be at least 4 characters                                      Position                        x                                    Name is required                                      y                                    Name is required                                      h                                    Name is required                                              Model                                    {{ modelObj.name }}                                            Name is required                                               Update                    editDeviceForm is invalid or untouched                    editDeviceForm is valid and touched            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceInterface.html":{"url":"interfaces/DeviceInterface.html","title":"interface - DeviceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            modelId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         Position\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Position\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Position {\n  x: number\n  y: number\n  h: number\n}\n\nexport interface DeviceInterface {\n  _id: string\n  name: string\n  modelId: string\n  position: Position\n}\n\nexport class Device {\n  _id!: string\n  name: string = ''\n  modelId: string = ''\n  position: Position = { x: 0, y: 0, h: 0 }\n\n  constructor(name?: string, modelId?: string, position?: Position) {\n    if (name && modelId && position) {\n      this.name = name\n      this.modelId = modelId\n      this.position = position\n    }\n  }\n\n  toString(): string {\n    return `Device ID: ${this._id}, Name: ${this.name}`\n  }\n}\n\n// @TODO: #2:30min Continue implementing the tests for the Device class. Add tests for the constructor and the toString method. Make sure to test the case where the constructor is called with no arguments. Add object data to the constructor and test the toString method.\nconst debug = true\nif (debug === true) {\n  const d1 = new Device()\n  console.log(d1.toString())\n\n  const d2Data = { name: 'Device 1', modelId: '1', position: { x: 1, y: 2, h: 3 } }\n  const d2 = new Device(d2Data.name, d2Data.modelId, d2Data.position)\n\n  d1.toString()\n  d2.toString()\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceList.html":{"url":"classes/DeviceList.html","title":"class - DeviceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/devicesList.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                print\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/devicesList.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/devicesList.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Device[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/devicesList.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(device: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/devicesList.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                device\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Device } from './device'\n\nexport class DeviceList {\n  deviceList: Device[] = []\n\n  print() {\n    this.deviceList.forEach((element) => {\n      console.log(element.toString())\n    })\n  }\n\n  get(): Device[] {\n    return this.deviceList\n  }\n\n  push(device: Device) {\n    this.deviceList.push(device)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceListComponent.html":{"url":"components/DeviceListComponent.html","title":"component - DeviceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices/devices-list/devices-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-device-list\n            \n\n\n\n            \n                styleUrls\n                ./devices-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./devices-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                deviceList\n                            \n                            \n                                deviceListPage\n                            \n                            \n                                modelList\n                            \n                            \n                                selectedDevice\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddForm\n                            \n                            \n                                    Async\n                                CloneDevice\n                            \n                            \n                                DeleteDevice\n                            \n                            \n                                    Async\n                                EditForm\n                            \n                            \n                                FindModelName\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                loadDevices\n                            \n                            \n                                loadModels\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stringify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(devicesService: DeviceService, modelsService: ModelsService, logService: LogService, router: Router, ngZone: NgZone, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CloneDevice\n                        \n                    \n                \n            \n            \n                \n                        \n                    CloneDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteDevice\n                        \n                    \n                \n            \n            \n                \nDeleteDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        EditForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditForm(device: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                device\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FindModelName\n                        \n                    \n                \n            \n            \n                \nFindModelName(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Device[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDevices\n                        \n                    \n                \n            \n            \n                \nloadDevices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringify\n                        \n                    \n                \n            \n            \n                \nstringify(obj: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Devices'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDevice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\n\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Device } from '../../../shared/device'\nimport { Model } from '../../../shared/model'\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './devices-list.component.html',\n  styleUrls: ['./devices-list.component.scss'],\n})\nexport class DeviceListComponent implements OnInit {\n  deviceList: Device[] = []\n  modelList: Model[] = []\n  selectedDevice: Device\n  component = 'Devices'\n  deviceListPage = 1\n\n  ngOnInit() {\n    this.loadDevices()\n    this.loadModels()\n  }\n\n  constructor(\n    private devicesService: DeviceService,\n    private modelsService: ModelsService,\n    private logService: LogService,\n    private router: Router,\n    private ngZone: NgZone,\n    private route: ActivatedRoute,\n  ) {}\n\n  loadDevices() {\n    return this.devicesService.GetDevices().subscribe((data: Device[]) => {\n      this.deviceList = data\n    })\n  }\n\n  loadModels() {\n    return this.modelsService.GetModels().subscribe((data: Model[]): void => {\n      this.modelList = data\n    })\n  }\n\n  DeleteDevice(id: string) {\n    this.logService\n      .CreateLog({\n        message: { id: id },\n        objectId: id,\n        operation: 'Delete',\n        component: this.component,\n      })\n      .subscribe({\n        next: () => {\n          this.devicesService.DeleteDevice(id).subscribe({\n            next: () => {\n              console.log(id + ' deleted')\n              this.loadDevices()\n              this.loadModels()\n              void this.router.navigate(['/device-list/'], { relativeTo: this.route, skipLocationChange: true })\n            },\n            error: (err) => {\n              console.error('Error deleting device:', err)\n            },\n          })\n        },\n        error: (err) => {\n          console.error('Error creating log:', err)\n        },\n      })\n  }\n\n  async CloneDevice(id: string) {\n    const idNew: object = this.devicesService.CloneDevice(id)\n    console.info('Cloned device id: ' + id + ' to result CloneDevice id: ' + JSON.stringify(idNew))\n    await this.logService\n      .CreateLog({\n        message: { id: id, id_new: idNew },\n        operation: 'Clone',\n        component: this.component,\n      })\n      .toPromise()\n    await this.ngZone.run(() => this.router.navigateByUrl('device-list'))\n    this.loadDevices()\n  }\n\n  async AddForm() {\n    await this.router.navigateByUrl('/add-device')\n  }\n\n  async EditForm(device: Device) {\n    this.selectedDevice = device\n    if (device._id !== undefined) {\n      await this.router.navigate(['edit-device', device._id], { relativeTo: this.route.parent })\n    } else {\n      console.warn('[DeviceListComponent] Device route.id is undefined')\n    }\n  }\n\n  FindModelName(id: string): string {\n    // console.info('[FindModelName] try find model name by id: ' + id)\n    let model = this.modelList.find((e: Model) => e._id === id)?.name as string\n    if (model === undefined) {\n      model = 'Unknown'\n    }\n    return model\n  }\n\n  stringify(obj: object): string {\n    return JSON.stringify(obj, null, 2)\n  }\n\n  getDeviceList(): Device[] {\n    return this.deviceList\n  }\n}\n\n    \n\n    \n        \n   Devices\n  \n    \n      \n        Name\n        Position\n        Model\n      \n    \n    \n      \n        \n          {{ device.name }}\n          {{ device._id }}\n        \n        ({{ device.position.x }}, {{ device.position.y }}, {{ device.position.h }})\n        \n          \n            {{ device.modelId === null ? 'is null' : FindModelName(device.modelId) }}\n          {{ device.modelId }}\n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n    \n  \n  \n     Add\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./devices-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Devices                    Name        Position        Model                                      {{ device.name }}          {{ device._id }}                ({{ device.position.x }}, {{ device.position.y }}, {{ device.position.h }})                              {{ device.modelId === null ? \\'is null\\' : FindModelName(device.modelId) }}          {{ device.modelId }}                                                                                                                                                                                 Add    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceService.html":{"url":"injectables/DeviceService.html","title":"injectable - DeviceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/device.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                objectName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneDevice\n                            \n                            \n                                CreateDevice\n                            \n                            \n                                DeleteDevice\n                            \n                            \n                                GetDevices\n                            \n                            \n                                GetDeviceSynchro\n                            \n                            \n                                getDeviceSynchronize\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                postDevice\n                            \n                            \n                                UpdateDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/device.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneDevice\n                        \n                    \n                \n            \n            \n                \nCloneDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateDevice\n                        \n                    \n                \n            \n            \n                \nCreateDevice(data: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteDevice\n                        \n                    \n                \n            \n            \n                \nDeleteDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDevices\n                        \n                    \n                \n            \n            \n                \nGetDevices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDeviceSynchro\n                        \n                    \n                \n            \n            \n                \nGetDeviceSynchro(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceSynchronize\n                        \n                    \n                \n            \n            \n                \ngetDeviceSynchronize(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, _result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:121\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postDevice\n                        \n                    \n                \n            \n            \n                \npostDevice(data: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDevice\n                        \n                    \n                \n            \n            \n                \nUpdateDevice(data: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/device.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/device.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        objectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'devices'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/device.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs'\nimport { catchError, map, retry } from 'rxjs/operators'\nimport { SyncRequestClient } from 'ts-sync-request/dist'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\nimport { Device } from '../shared/device'\nimport { Log, LogIn } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceService {\n  baseurl = environment.baseurl\n  private objectName = 'devices'\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n\n  GetDevices(): Observable {\n    return this.http\n      .get(environment.baseurl + '/' + this.objectName + '/')\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetDevices')))\n  }\n\n  getDeviceSynchronize(id: string): Observable {\n    return of(new SyncRequestClient().get(environment.baseurl + '/' + this.objectName + '/' + id))\n  }\n\n  GetDeviceSynchro(id: string): Observable {\n    return this.http.get(environment.baseurl + '/' + this.objectName + '/' + id).pipe(\n      map((res) => {\n        return res\n      }),\n      catchError(this.handleErrorTemplate('GetDeviceSynchro', id as unknown as Device)),\n    )\n  }\n\n  DeleteDevice(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/' + this.objectName + '/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteDevice', id as unknown as Device)))\n  }\n\n  CreateDevice(data: Device): Observable {\n    return this.http\n      .post(\n        environment.baseurl + '/' + this.objectName + '/',\n        JSON.stringify(data, null, ' '),\n        this.httpOptions,\n      )\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateDevice', data)))\n  }\n\n  CloneDevice(id: string): object {\n    let result: Device = {\n      _id: '',\n      name: '',\n      modelId: '',\n      position: { x: 0, y: 0, h: 0 },\n    }\n    this.getDeviceSynchronize(id).subscribe((value: Device) => {\n      console.info('Get Device: ' + JSON.stringify(value, null, ' '))\n      const deviceToCreate = value\n      if (deviceToCreate._id !== undefined) {\n        delete (deviceToCreate as { _id?: string })._id\n      }\n      console.info('Clone DeviceCreate: ' + JSON.stringify(deviceToCreate, null, ' '))\n      deviceToCreate.name += ' (Clone)'\n      this.CreateDevice(deviceToCreate).subscribe((createdDevice: Device) => {\n        result = createdDevice\n        console.info('Create Cloned Device: ' + JSON.stringify(createdDevice, null, ' '))\n        const log: LogIn = {\n          objectId: result._id,\n          operation: 'Clone',\n          component: 'Device',\n          message: deviceToCreate,\n        }\n        console.log('LogService.CreateLog: ' + JSON.stringify(log, null, ' '))\n        this.http\n          .post(`${environment.baseurl}/logs/`, log, this.httpOptions)\n          .pipe(retry(1), catchError(this.handleErrorTemplate('CreateLog', log)))\n          .subscribe()\n      })\n    })\n    return result // Add this line to return the result\n  }\n\n  UpdateDevice(data: Device): Observable {\n    console.log(\n      'device.service.updateDevice: PUT ' +\n        environment.baseurl +\n        '/devices/' +\n        data._id +\n        '  ' +\n        JSON.stringify(data, null, ' '),\n    )\n    const requestData = JSON.stringify(data, null, ' ')\n    return this.http\n      .put(environment.baseurl + '/devices/' + data._id, requestData, this.httpOptions)\n      .pipe(catchError(this.handleErrorTemplate('updateDevice', data)))\n  }\n\n  postDevice(data: Device): Observable {\n    return this.http\n      .post(`${environment.baseurl}/devices`, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('postDevice', data)))\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private handleErrorTemplate(operation: string, _result?: T) {\n    return (error: Error): Observable => {\n      console.error(`DeviceService.handleErrorTemplate operation: ${operation}, error: ${error.message}`)\n      return throwError(() => error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceType.html":{"url":"classes/DeviceType.html","title":"class - DeviceType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceTypes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceType: DeviceTypeListType)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/deviceTypes.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceType\n                                                  \n                                                        \n                                                                        DeviceTypeListType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceTypes.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceTypes.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface DeviceTypeInterface {\n  name: string\n  description: string\n}\n\nexport type DeviceTypeListType = DeviceTypeInterface\n\nexport class DeviceType {\n  name: string\n  description: string\n\n  constructor(deviceType: DeviceTypeListType) {\n    this.name = deviceType.name\n    this.description = deviceType.description\n  }\n}\n\nexport class DeviceTypeDict {\n  private list: DeviceType[] = [\n    { name: '', description: '' },\n    { name: 'Bridge', description: '' },\n    { name: 'CoolAir', description: '' },\n    { name: 'Copier', description: '' },\n    { name: 'Desktop', description: '' },\n    { name: 'Firewall', description: '' },\n    { name: 'Gateway', description: '' },\n    { name: 'Hubs', description: '' },\n    { name: 'Load Balancer', description: '' },\n    { name: 'Modem', description: '' },\n    { name: 'Multiplexer', description: '' },\n    { name: 'PDU System', description: '' },\n    { name: 'Power', description: '' },\n    { name: 'Printer', description: '' },\n    { name: 'Probe', description: '' },\n    { name: 'Repeaters', description: '' },\n    { name: 'Router', description: '' },\n    { name: 'Security Device', description: '' },\n    { name: 'Server', description: '' },\n    { name: 'Switch', description: '' },\n    { name: 'Telephone', description: '' },\n    { name: 'Terminal', description: '' },\n    { name: 'Traffic shaper', description: '' },\n    { name: 'Transceiver', description: '' },\n    { name: 'UPS System', description: '' },\n    { name: 'Workstations', description: '' },\n  ]\n\n  get(): DeviceType[] {\n    return this.list\n  }\n\n  public getRandom(): DeviceType {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findType(search: string): DeviceType | string {\n    const element = this.list.find((e) => e.name === search)\n    return element || search\n  }\n\n  findTypeByName(obj: string): void {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceTypeDict.html":{"url":"classes/DeviceTypeDict.html","title":"class - DeviceTypeDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceTypeDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceTypes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findType\n                            \n                            \n                                findTypeByName\n                            \n                            \n                                get\n                            \n                            \n                                    Public\n                                getRandom\n                            \n                            \n                                    Public\n                                getRandomName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DeviceType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: '', description: '' },\n    { name: 'Bridge', description: '' },\n    { name: 'CoolAir', description: '' },\n    { name: 'Copier', description: '' },\n    { name: 'Desktop', description: '' },\n    { name: 'Firewall', description: '' },\n    { name: 'Gateway', description: '' },\n    { name: 'Hubs', description: '' },\n    { name: 'Load Balancer', description: '' },\n    { name: 'Modem', description: '' },\n    { name: 'Multiplexer', description: '' },\n    { name: 'PDU System', description: '' },\n    { name: 'Power', description: '' },\n    { name: 'Printer', description: '' },\n    { name: 'Probe', description: '' },\n    { name: 'Repeaters', description: '' },\n    { name: 'Router', description: '' },\n    { name: 'Security Device', description: '' },\n    { name: 'Server', description: '' },\n    { name: 'Switch', description: '' },\n    { name: 'Telephone', description: '' },\n    { name: 'Terminal', description: '' },\n    { name: 'Traffic shaper', description: '' },\n    { name: 'Transceiver', description: '' },\n    { name: 'UPS System', description: '' },\n    { name: 'Workstations', description: '' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceTypes.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findType\n                        \n                    \n                \n            \n            \n                \nfindType(search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceTypes.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DeviceType | string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findTypeByName\n                        \n                    \n                \n            \n            \n                \nfindTypeByName(obj: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceTypes.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceTypes.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DeviceType[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandom\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceTypes.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         DeviceType\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceTypes.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface DeviceTypeInterface {\n  name: string\n  description: string\n}\n\nexport type DeviceTypeListType = DeviceTypeInterface\n\nexport class DeviceType {\n  name: string\n  description: string\n\n  constructor(deviceType: DeviceTypeListType) {\n    this.name = deviceType.name\n    this.description = deviceType.description\n  }\n}\n\nexport class DeviceTypeDict {\n  private list: DeviceType[] = [\n    { name: '', description: '' },\n    { name: 'Bridge', description: '' },\n    { name: 'CoolAir', description: '' },\n    { name: 'Copier', description: '' },\n    { name: 'Desktop', description: '' },\n    { name: 'Firewall', description: '' },\n    { name: 'Gateway', description: '' },\n    { name: 'Hubs', description: '' },\n    { name: 'Load Balancer', description: '' },\n    { name: 'Modem', description: '' },\n    { name: 'Multiplexer', description: '' },\n    { name: 'PDU System', description: '' },\n    { name: 'Power', description: '' },\n    { name: 'Printer', description: '' },\n    { name: 'Probe', description: '' },\n    { name: 'Repeaters', description: '' },\n    { name: 'Router', description: '' },\n    { name: 'Security Device', description: '' },\n    { name: 'Server', description: '' },\n    { name: 'Switch', description: '' },\n    { name: 'Telephone', description: '' },\n    { name: 'Terminal', description: '' },\n    { name: 'Traffic shaper', description: '' },\n    { name: 'Transceiver', description: '' },\n    { name: 'UPS System', description: '' },\n    { name: 'Workstations', description: '' },\n  ]\n\n  get(): DeviceType[] {\n    return this.list\n  }\n\n  public getRandom(): DeviceType {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findType(search: string): DeviceType | string {\n    const element = this.list.find((e) => e.name === search)\n    return element || search\n  }\n\n  findTypeByName(obj: string): void {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceTypeInterface.html":{"url":"interfaces/DeviceTypeInterface.html","title":"interface - DeviceTypeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceTypeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeviceTypeInterface {\n  name: string\n  description: string\n}\n\nexport type DeviceTypeListType = DeviceTypeInterface\n\nexport class DeviceType {\n  name: string\n  description: string\n\n  constructor(deviceType: DeviceTypeListType) {\n    this.name = deviceType.name\n    this.description = deviceType.description\n  }\n}\n\nexport class DeviceTypeDict {\n  private list: DeviceType[] = [\n    { name: '', description: '' },\n    { name: 'Bridge', description: '' },\n    { name: 'CoolAir', description: '' },\n    { name: 'Copier', description: '' },\n    { name: 'Desktop', description: '' },\n    { name: 'Firewall', description: '' },\n    { name: 'Gateway', description: '' },\n    { name: 'Hubs', description: '' },\n    { name: 'Load Balancer', description: '' },\n    { name: 'Modem', description: '' },\n    { name: 'Multiplexer', description: '' },\n    { name: 'PDU System', description: '' },\n    { name: 'Power', description: '' },\n    { name: 'Printer', description: '' },\n    { name: 'Probe', description: '' },\n    { name: 'Repeaters', description: '' },\n    { name: 'Router', description: '' },\n    { name: 'Security Device', description: '' },\n    { name: 'Server', description: '' },\n    { name: 'Switch', description: '' },\n    { name: 'Telephone', description: '' },\n    { name: 'Terminal', description: '' },\n    { name: 'Traffic shaper', description: '' },\n    { name: 'Transceiver', description: '' },\n    { name: 'UPS System', description: '' },\n    { name: 'Workstations', description: '' },\n  ]\n\n  get(): DeviceType[] {\n    return this.list\n  }\n\n  public getRandom(): DeviceType {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findType(search: string): DeviceType | string {\n    const element = this.list.find((e) => e.name === search)\n    return element || search\n  }\n\n  findTypeByName(obj: string): void {\n    for (let i = 0; i ', obj)\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dimension.html":{"url":"interfaces/Dimension.html","title":"interface - Dimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Dimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            depth\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        depth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        depth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Dimension {\n  width: number\n  height: number\n  depth: number\n}\n\ninterface Texture {\n  front: string\n  back: string\n  side: string\n  top: string\n  bottom: string\n}\n\nexport class Model {\n  _id: string\n  name: string\n  dimension: Dimension\n  texture: Texture\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.dimension = {\n      width: 0,\n      height: 0,\n      depth: 0,\n    }\n    this.texture = {\n      front: '',\n      back: '',\n      side: '',\n      top: '',\n      bottom: '',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Floor.html":{"url":"interfaces/Floor.html","title":"interface - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/floor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            dimension\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension:     [FloorDimension]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [FloorDimension]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FloorDimension {\n  description: string\n  x: string\n  y: string\n  h: string\n  xPos: string\n  yPos: string\n  hPos: string\n}\n\nexport interface Floor {\n  _id: string\n  name: string\n  address: {\n    street: string\n    city: string\n    country: string\n    postcode: string\n  }\n  dimension: [FloorDimension]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FloorDimension.html":{"url":"interfaces/FloorDimension.html","title":"interface - FloorDimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FloorDimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/floor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            h\n                                        \n                                \n                                \n                                        \n                                            hPos\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            xPos\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            yPos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        h\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        h:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FloorDimension {\n  description: string\n  x: string\n  y: string\n  h: string\n  xPos: string\n  yPos: string\n  hPos: string\n}\n\nexport interface Floor {\n  _id: string\n  name: string\n  address: {\n    street: string\n    city: string\n    country: string\n    postcode: string\n  }\n  dimension: [FloorDimension]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FloorListComponent.html":{"url":"components/FloorListComponent.html","title":"component - FloorListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FloorListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/floors/floor-list/floor-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-floor-list\n            \n\n\n\n            \n                styleUrls\n                ./floor-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./floor-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                floorList\n                            \n                            \n                                floorListPage\n                            \n                            \n                                selectedFloor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFloor\n                            \n                            \n                                cloneFloor\n                            \n                            \n                                deleteFloor\n                            \n                            \n                                editFloor\n                            \n                            \n                                loadFloors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(floorService: FloorService, logService: LogService, router: Router, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        floorService\n                                                  \n                                                        \n                                                                        FloorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFloor\n                        \n                    \n                \n            \n            \n                \naddFloor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cloneFloor\n                        \n                    \n                \n            \n            \n                \ncloneFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFloor\n                        \n                    \n                \n            \n            \n                \ndeleteFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editFloor\n                        \n                    \n                \n            \n            \n                \neditFloor(floor: Floor)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                floor\n                                            \n                                                            Floor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFloors\n                        \n                    \n                \n            \n            \n                \nloadFloors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Floors'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        floorList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        floorListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFloor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { FloorService } from '../../../services/floor.service'\nimport { LogService } from '../../../services/log.service'\nimport { Floor } from '../../../shared/floor'\n\n@Component({\n  selector: 'app-floor-list',\n  templateUrl: './floor-list.component.html',\n  styleUrls: ['./floor-list.component.scss'],\n})\nexport class FloorListComponent implements OnInit {\n  floorList: Floor[] = []\n  selectedFloor: Floor\n  component: string = 'Floors'\n  floorListPage: number = 1\n\n  ngOnInit() {\n    this.loadFloors()\n  }\n\n  constructor(\n    private floorService: FloorService,\n    private logService: LogService,\n    private router: Router,\n    private ngZone: NgZone,\n  ) {}\n\n  loadFloors() {\n    return this.floorService.GetFloors().subscribe((data: Floor[]) => {\n      this.floorList = data\n    })\n  }\n\n  deleteFloor(id: string) {\n    const idString = id // Convert ObjectId to string\n    this.logService.CreateLog({\n      message: { id: idString },\n      objectId: idString,\n      operation: 'Delete',\n      component: this.component,\n    })\n    return this.floorService.DeleteFloor(idString).subscribe((data: Floor) => {\n      console.log(data)\n      this.loadFloors()\n      this.router.navigate(['/floor-list/'])\n    })\n  }\n\n  cloneFloor(id: string) {\n    const id_new: string = this.floorService.CloneFloor(id)\n    this.logService\n      .CreateLog({\n        message: { id: id, id_new: id_new },\n        operation: 'Clone',\n        component: this.component,\n      })\n      .subscribe(() => {\n        this.ngZone.run(() => this.router.navigateByUrl('floor-list'))\n      })\n    this.loadFloors()\n  }\n\n  addFloor() {\n    this.router.navigateByUrl('add-floor')\n  }\n\n  editFloor(floor: Floor) {\n    this.selectedFloor = floor\n    this.router.navigate(['edit-floor/', floor._id])\n  }\n}\n\n    \n\n    \n        \n   Floors\n  \n    \n      \n        Name/Address\n        Dimension\n      \n    \n    \n      \n        \n          {{ floor.name }}\n          \n            {{ floor.address.street }}\n            {{ floor.address.city }} {{ floor.address.postcode }} {{ floor.address.country }}\n          \n        \n        \n          \n            \n              {{ d.description }}\n               {{ d.x }}\n              {{ d.y }} {{ d.h }}\n              \n              {{ d.xPos }} {{ d.yPos }}\n              {{ d.hPos }}\n            \n          \n        \n        \n          \n            \n              Edit\n            \n            \n              Delete\n            \n            \n              Clone\n            \n          \n        \n      \n    \n  \n  \n     Add\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./floor-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Floors                    Name/Address        Dimension                                      {{ floor.name }}                      {{ floor.address.street }}            {{ floor.address.city }} {{ floor.address.postcode }} {{ floor.address.country }}                                                              {{ d.description }}               {{ d.x }}              {{ d.y }} {{ d.h }}                            {{ d.xPos }} {{ d.yPos }}              {{ d.hPos }}                                                                          Edit                                      Delete                                      Clone                                                 Add    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FloorListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FloorService.html":{"url":"injectables/FloorService.html","title":"injectable - FloorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FloorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/floor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneFloor\n                            \n                            \n                                CreateFloor\n                            \n                            \n                                DeleteFloor\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetFloor\n                            \n                            \n                                GetFloors\n                            \n                            \n                                getFloorSynchronize\n                            \n                            \n                                UpdateFloor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/floor.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneFloor\n                        \n                    \n                \n            \n            \n                \nCloneFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Clones a floor by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the floor to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned floor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateFloor\n                        \n                    \n                \n            \n            \n                \nCreateFloor(data: Floor)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Creates a new floor.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Floor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The floor data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created floor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteFloor\n                        \n                    \n                \n            \n            \n                \nDeleteFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Deletes a floor by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the floor to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted floor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Handles the error response from an API call.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetFloor\n                        \n                    \n                \n            \n            \n                \nGetFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves a floor by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the floor to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved floor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetFloors\n                        \n                    \n                \n            \n            \n                \nGetFloors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of floors.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Floor objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFloorSynchronize\n                        \n                    \n                \n            \n            \n                \ngetFloorSynchronize(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Retrieves a floor synchronously by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the floor to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Floor\n\n                        \n                            \n                                The floor object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateFloor\n                        \n                    \n                \n            \n            \n                \nUpdateFloor(id: string, data: never)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Updates a floor with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the floor to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        never\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated floor data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated floor.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/floor.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/floor.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\nimport { SyncRequestClient } from 'ts-sync-request'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Floor } from '../shared/floor'\nimport { Log, LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FloorService {\n  baseurl = environment.baseurl\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the list of floors.\n   * @returns An Observable that emits an array of Floor objects.\n   */\n  GetFloors(): Observable {\n    return this.http.get(environment.baseurl + '/floors/').pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Retrieves a floor synchronously by its ID.\n   * @param id - The ID of the floor to retrieve.\n   * @returns The floor object.\n   */\n  getFloorSynchronize(id: string | null): Floor {\n    return new SyncRequestClient().get(environment.baseurl + '/floors/' + id)\n  }\n\n  /**\n   * Retrieves a floor by its ID.\n   * @param id - The ID of the floor to retrieve.\n   * @returns An Observable that emits the retrieved floor.\n   */\n  GetFloor(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/floor/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Deletes a floor by its ID.\n   * @param id - The ID of the floor to delete.\n   * @returns An Observable that emits the deleted floor.\n   */\n  DeleteFloor(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/floor/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Creates a new floor.\n   * @param data The floor data to be created.\n   * @returns An Observable that emits the created floor.\n   */\n  CreateFloor(data: Floor): Observable {\n    return this.http\n      .post(environment.baseurl + '/floor/', JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Clones a floor by its ID.\n   *\n   * @param id - The ID of the floor to clone.\n   * @returns The UUID of the cloned floor.\n   */\n  CloneFloor(id: string): string {\n    const id_uuid: string = uuidv4.toString().substr(6, 36)\n    this.GetFloor(id).subscribe((value: Floor) => {\n      console.log('Get Floor: ' + JSON.stringify(value, null, ' '))\n      value._id = id_uuid\n      this.CreateFloor(value).subscribe({\n        next: (v) => {\n          console.log('Create Floor: ' + JSON.stringify(v, null, ' '))\n          this.ngZone.run(() => this.router.navigateByUrl('floor-list'))\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('floor-list')),\n      })\n    })\n    return id_uuid\n  }\n\n  /**\n   * Updates a floor with the specified ID.\n   *\n   * @param id - The ID of the floor to update.\n   * @param data - The updated floor data.\n   * @returns An Observable that emits the updated floor.\n   */\n  UpdateFloor(id: string, data: never): Observable {\n    return this.http\n      .put(environment.baseurl + '/floor/' + id, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Handles the error response from an API call.\n   * @param error - The error object containing the error message and status.\n   * @returns An Observable that emits the error message.\n   */\n  errorHandl(error: { error: { message: string }; status: unknown; message: Log }): Observable {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.log(JSON.stringify(errorMessage, null, ' '))\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authToken\n                            \n                            \n                                baseUrl\n                            \n                            \n                                githubIssuesUrl\n                            \n                            \n                                githubIssuesUrl2\n                            \n                            \n                                httpOptions\n                            \n                            \n                                issues\n                            \n                            \n                                md\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoad\n                        \n                    \n                \n            \n            \n                \nonLoad(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.github.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        githubIssuesUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.github.com/karol-preiskorn/3d-inventory-angular-ui/issues'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        githubIssuesUrl2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.github.com/repositories/600698591/issues'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Methods': 'DELETE, POST, GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With',\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer' + this.authToken,\n      'Access-Control-Allow-Origin': 'https://api.github.com/',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { provideMarkdown } from 'ngx-markdown';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  md: string | undefined\n  githubIssuesUrl = 'https://api.github.com/karol-preiskorn/3d-inventory-angular-ui/issues'\n  githubIssuesUrl2 = 'https://api.github.com/repositories/600698591/issues'\n  authToken = ''\n  baseUrl = 'https://api.github.com'\n  issues = ''\n\n  constructor(private http: HttpClient) {}\n  httpOptions: {\n    headers: HttpHeaders\n  } = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Methods': 'DELETE, POST, GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With',\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer' + this.authToken,\n      'Access-Control-Allow-Origin': 'https://api.github.com/',\n    }),\n  }\n\n  async ngOnInit(): Promise {\n    this.http.get('/assets/README.md', { responseType: 'text' }).subscribe((data: string) => {\n      console.log('Get Markdown ' + JSON.stringify(data, null, ' '))\n      this.md = data.replaceAll('src/', '')\n    })\n\n    this.http.get(this.githubIssuesUrl, this.httpOptions).subscribe((data) => {\n      console.log('Get Issues ' + JSON.stringify(data, null, ' '))\n      this.issues = data as string\n    })\n  }\n\n  onLoad(data: unknown) {\n    console.log(this.md + ' ' + data)\n  }\n\n  onError(data: unknown) {\n    console.log(this.md + ' ' + data)\n  }\n\n  // async getIssues() {\n  //   const octokit = new Octokit({ auth: `personal-access-token123` })\n  //   const { data: root } = await octokit.request('GET /')\n  //   console.log(root)\n  //   octokit.rest.users.getAuthenticated()\n  //   octokit\n  //     .paginate(\n  //       'GET /repos/{owner}/{repo}/issues',\n  //       { owner: 'octokit', repo: 'rest.js' },\n  //       (response: { data: any[] }) => response.data.map((issue: { title: any }) => issue.title),\n  //     )\n  //     .then((issueTitles: string[]) => {\n  //       // issueTitles is now an array with the titles only\n  //     })\n  // }\n}\n\n    \n\n    \n        \n  \n\n\n  {{ issues | json }}\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                img[alt='drawing'] {\n  width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ issues | json }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Log.html":{"url":"interfaces/Log.html","title":"interface - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            objectId\n                                        \n                                \n                                \n                                        \n                                            operation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable, Input } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParamteres {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: object // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  @Input() attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component.toLowerCase()\n    console.log('LogComponent.GetComponentLogs(' + component.toLowerCase() + '): ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/device/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attribute/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific object.\n   * @param objectId - The object ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetObjectLogs(objectId: string): Observable {\n    if (objectId == null) {\n      return of([])\n    }\n    const url = environment.baseurl + '/logs/object/' + objectId\n    console.log('LogService.GetObjectLogs: ' + url + ', objectId: ' + objectId)\n    return this.http.get(url).pipe(catchError(this.handleErrorTemplate('GetObjectsLogs', [])))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogId(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log input data.\n   * @returns An Observable that emits a Log or LogIn object.\n   */\n  CreateLog(data: LogIn): Observable {\n    const log: LogIn = {\n      objectId: data.objectId,\n      operation: data.operation,\n      component: data.component,\n      message: data.message,\n    }\n    console.log('LogService.CreateLog: ' + JSON.stringify(log, null, ' '))\n    return this.http\n      .post(`${environment.baseurl}/logs/`, log, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateLog', log)))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: JSON): Observable {\n    const sData = JSON.stringify(data, null, ' ')\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', data as unknown as LogIn)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request.\n   * If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body.\n   * Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error)\n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error)\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`LogService.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogIn.html":{"url":"interfaces/LogIn.html","title":"interface - LogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the input for creating a log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            objectId\n                                        \n                                \n                                \n                                        \n                                            operation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable, Input } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParamteres {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: object // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  @Input() attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component.toLowerCase()\n    console.log('LogComponent.GetComponentLogs(' + component.toLowerCase() + '): ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/device/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attribute/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific object.\n   * @param objectId - The object ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetObjectLogs(objectId: string): Observable {\n    if (objectId == null) {\n      return of([])\n    }\n    const url = environment.baseurl + '/logs/object/' + objectId\n    console.log('LogService.GetObjectLogs: ' + url + ', objectId: ' + objectId)\n    return this.http.get(url).pipe(catchError(this.handleErrorTemplate('GetObjectsLogs', [])))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogId(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log input data.\n   * @returns An Observable that emits a Log or LogIn object.\n   */\n  CreateLog(data: LogIn): Observable {\n    const log: LogIn = {\n      objectId: data.objectId,\n      operation: data.operation,\n      component: data.component,\n      message: data.message,\n    }\n    console.log('LogService.CreateLog: ' + JSON.stringify(log, null, ' '))\n    return this.http\n      .post(`${environment.baseurl}/logs/`, log, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateLog', log)))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: JSON): Observable {\n    const sData = JSON.stringify(data, null, ' ')\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', data as unknown as LogIn)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request.\n   * If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body.\n   * Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error)\n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error)\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`LogService.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogParamteres.html":{"url":"interfaces/LogParamteres.html","title":"interface - LogParamteres","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogParamteres\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the parameters for retrieving logs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable, Input } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParamteres {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: object // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  @Input() attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component.toLowerCase()\n    console.log('LogComponent.GetComponentLogs(' + component.toLowerCase() + '): ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/device/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attribute/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific object.\n   * @param objectId - The object ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetObjectLogs(objectId: string): Observable {\n    if (objectId == null) {\n      return of([])\n    }\n    const url = environment.baseurl + '/logs/object/' + objectId\n    console.log('LogService.GetObjectLogs: ' + url + ', objectId: ' + objectId)\n    return this.http.get(url).pipe(catchError(this.handleErrorTemplate('GetObjectsLogs', [])))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogId(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log input data.\n   * @returns An Observable that emits a Log or LogIn object.\n   */\n  CreateLog(data: LogIn): Observable {\n    const log: LogIn = {\n      objectId: data.objectId,\n      operation: data.operation,\n      component: data.component,\n      message: data.message,\n    }\n    console.log('LogService.CreateLog: ' + JSON.stringify(log, null, ' '))\n    return this.http\n      .post(`${environment.baseurl}/logs/`, log, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateLog', log)))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: JSON): Observable {\n    const sData = JSON.stringify(data, null, ' ')\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', data as unknown as LogIn)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request.\n   * If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body.\n   * Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error)\n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error)\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`LogService.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateLog\n                            \n                            \n                                DeleteLog\n                            \n                            \n                                GetAttributeLogs\n                            \n                            \n                                GetComponentLogs\n                            \n                            \n                                GetDeviceLogs\n                            \n                            \n                                GetLogId\n                            \n                            \n                                GetLogs\n                            \n                            \n                                GetObjectLogs\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/log.service.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateLog\n                        \n                    \n                \n            \n            \n                \nCreateLog(data: LogIn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Creates a new log entry.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LogIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log input data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a Log or LogIn object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteLog\n                        \n                    \n                \n            \n            \n                \nDeleteLog(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Deletes a log by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits a Log object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributeLogs\n                        \n                    \n                \n            \n            \n                \nGetAttributeLogs(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetComponentLogs\n                        \n                    \n                \n            \n            \n                \nGetComponentLogs(component: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe component name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDeviceLogs\n                        \n                    \n                \n            \n            \n                \nGetDeviceLogs(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific device.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe device ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetLogId\n                        \n                    \n                \n            \n            \n                \nGetLogId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Retrieves a log by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits a Log object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetLogs\n                        \n                    \n                \n            \n            \n                \nGetLogs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Retrieves all logs.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetObjectLogs\n                        \n                    \n                \n            \n            \n                \nGetObjectLogs(objectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Handles the error response from an HTTP request.\nIf the error status is 0, it logs the error message.\nOtherwise, it logs the error status and body.\nReturns an Observable that throws an Error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HttpErrorResponse object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that throws an Error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:191\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateLog\n                        \n                    \n                \n            \n            \n                \nUpdateLog(id: string | null, data: JSON)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:161\n                        \n                    \n\n\n            \n                \n                        Updates a log entry.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        JSON\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated log data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a Log object.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable, Input } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParamteres {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: object // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  @Input() attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component.toLowerCase()\n    console.log('LogComponent.GetComponentLogs(' + component.toLowerCase() + '): ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/device/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attribute/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific object.\n   * @param objectId - The object ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetObjectLogs(objectId: string): Observable {\n    if (objectId == null) {\n      return of([])\n    }\n    const url = environment.baseurl + '/logs/object/' + objectId\n    console.log('LogService.GetObjectLogs: ' + url + ', objectId: ' + objectId)\n    return this.http.get(url).pipe(catchError(this.handleErrorTemplate('GetObjectsLogs', [])))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogId(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log input data.\n   * @returns An Observable that emits a Log or LogIn object.\n   */\n  CreateLog(data: LogIn): Observable {\n    const log: LogIn = {\n      objectId: data.objectId,\n      operation: data.operation,\n      component: data.component,\n      message: data.message,\n    }\n    console.log('LogService.CreateLog: ' + JSON.stringify(log, null, ' '))\n    return this.http\n      .post(`${environment.baseurl}/logs/`, log, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateLog', log)))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: JSON): Observable {\n    const sData = JSON.stringify(data, null, ' ')\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', data as unknown as LogIn)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request.\n   * If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body.\n   * Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error)\n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error)\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`LogService.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Model.html":{"url":"classes/Model.html","title":"class - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                dimension\n                            \n                            \n                                name\n                            \n                            \n                                texture\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dimension\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dimension\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        texture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Texture\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface Dimension {\n  width: number\n  height: number\n  depth: number\n}\n\ninterface Texture {\n  front: string\n  back: string\n  side: string\n  top: string\n  bottom: string\n}\n\nexport class Model {\n  _id: string\n  name: string\n  dimension: Dimension\n  texture: Texture\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.dimension = {\n      width: 0,\n      height: 0,\n      depth: 0,\n    }\n    this.texture = {\n      front: '',\n      back: '',\n      side: '',\n      top: '',\n      bottom: '',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelAddComponent.html":{"url":"components/ModelAddComponent.html","title":"component - ModelAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/models/add-model/add-model.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-model\n            \n\n\n\n            \n                styleUrls\n                ./add-model.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-model.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addModelForm\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                model\n                            \n                            \n                                    Public\n                                modelsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeValue\n                            \n                            \n                                generateModel\n                            \n                            \n                                getControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone, router: Router, modelsService: ModelsService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/models/add-model/add-model.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeValue\n                        \n                    \n                \n            \n            \n                \nchangeValue(controlName: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateModel\n                        \n                    \n                \n            \n            \n                \ngenerateModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addModelForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl('', null),\n    name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    dimension: new FormGroup({\n      width: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(6),\n        Validators.pattern('^[0-9]*$'),\n      ]),\n      height: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(6),\n        Validators.pattern('^[0-9]*$'),\n      ]),\n      depth: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(6),\n        Validators.pattern('^[0-9]*$'),\n      ]),\n    }),\n    texture: new FormGroup({\n      front: new FormControl('', null),\n      back: new FormControl('', null),\n      side: new FormControl('', null),\n      top: new FormControl('', null),\n      bottom: new FormControl('', null),\n    }),\n    type: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { faker } from '@faker-js/faker'\n\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/deviceTypes'\nimport { Model } from '../../../shared/model'\n\n@Component({\n  selector: 'app-add-model',\n  templateUrl: './add-model.component.html',\n  styleUrls: ['./add-model.component.scss'],\n})\nexport class ModelAddComponent implements OnInit {\n  addModelForm = new FormGroup({\n    id: new FormControl('', null),\n    name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n    dimension: new FormGroup({\n      width: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(6),\n        Validators.pattern('^[0-9]*$'),\n      ]),\n      height: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(6),\n        Validators.pattern('^[0-9]*$'),\n      ]),\n      depth: new FormControl('', [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(6),\n        Validators.pattern('^[0-9]*$'),\n      ]),\n    }),\n    texture: new FormGroup({\n      front: new FormControl('', null),\n      back: new FormControl('', null),\n      side: new FormControl('', null),\n      top: new FormControl('', null),\n      bottom: new FormControl('', null),\n    }),\n    type: new FormControl('', Validators.required),\n    category: new FormControl('', Validators.required),\n  })\n  model: Model\n  isSubmitted = false\n  deviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict = new DeviceCategoryDict()\n\n  constructor(\n    private ngZone: NgZone,\n    private router: Router,\n    public modelsService: ModelsService,\n    private logService: LogService,\n  ) {}\n\n  ngOnInit(): void {\n    this.model = new Model()\n  }\n\n  changeValue(controlName: string, value: string) {\n    const control = this.getControl(controlName)\n    if (control) {\n      control.setValue(value, { onlySelf: true })\n    }\n  }\n\n  getControl(controlName: string) {\n    return this.addModelForm.get(controlName)\n  }\n\n  generateModel() {\n    if (this.addModelForm.controls.name !== null && this.addModelForm.controls.name !== undefined) {\n      this.addModelForm.controls.name.setValue(faker.company.name() + ' ' + faker.company.buzzPhrase())\n    }\n    if (this.addModelForm.controls.dimension.controls.depth) {\n      this.addModelForm.controls.dimension.controls.depth.setValue(faker.number.int(10).toString())\n    }\n    if (this.addModelForm.controls.dimension.controls.height) {\n      this.addModelForm.controls.dimension.controls.height.setValue(faker.number.int(10).toString())\n    }\n    if (this.addModelForm.controls.dimension.controls.width) {\n      this.addModelForm.controls.dimension.controls.width.setValue(faker.number.int(10).toString())\n    }\n    if (this.addModelForm.controls.type) {\n      this.addModelForm.controls.type.setValue(this.deviceTypeDict.getRandomName())\n    }\n    if (this.addModelForm.controls.category) {\n      this.addModelForm.controls.category.setValue(this.deviceCategoryDict.getRandomName())\n    }\n  }\n\n  submitForm() {\n    console.log('Submit Model: ' + JSON.stringify(this.addModelForm.value))\n    this.modelsService.CreateModel(this.model).subscribe((res) => {\n      this.logService\n        .CreateLog({\n          message: this.addModelForm.value,\n          objectId: res._id,\n          operation: 'Create',\n          component: 'Model',\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n        })\n    })\n  }\n}\n\n    \n\n    \n        \n  \n     Add Model\n    \n      \n        \n          \n            Name\n            \n            \n              Name is required\n              Name must be at least 4 characters\n            \n          \n        \n      \n      \n        \n          \n            Width\n            \n            \n              Width is required\n              \n                Width must be at least 1 number.\n              \n            \n            \n              Number Only\n            \n          \n        \n        \n          \n            Height\n            \n            \n              Height is required\n              \n                Height must be at least 1 number\n              \n            \n          \n        \n        \n          \n            Depth\n            \n            \n              Depth is required\n              \n                Depth must be at least 1 number\n              \n            \n          \n        \n      \n      \n        \n          \n            Front\n            \n            \n              Width is required\n              \n                Width must be at least 1 number.\n              \n            \n          \n        \n        \n          \n            Back\n            \n            \n              back side is required\n              \n                back must be at least 1 number\n              \n            \n          \n        \n        \n          \n            Side\n            \n            \n              side is required\n              \n                side must be at least 1 number\n              \n            \n          \n        \n        \n          \n            Top\n            \n            \n              Top is required\n              Top must be at least 1 number\n            \n          \n        \n        \n          \n            bottom\n            \n            \n              bottom is required\n              \n                bottom must be at least 2 characters\n              \n            \n          \n        \n      \n       -->\n       -->\n       -->\n      Type -->\n      \n      \n      \n      \n      // 'is-invalid': this.addModelForm.controls.type.status !== 'VALID', // 'is-valid':\n      this.addModelForm.controls.type.status === 'VALID', // 'form-select': true,\n      \n       -->\n       -->\n      \n       -->\n       -->\n       -->\n      type have to selected -->\n       -->\n       -->\n       -->\n       -->\n       -->\n      Category -->\n      \n      \n      \n      \n      \n      \n      \n      \n       -->\n       -->\n      \n       -->\n       -->\n       -->\n      category have to selected -->\n       -->\n       -->\n       -->\n       -->\n      \n        \n          \n             Add Model\n          \n        \n        \n          \n            \n               Generate random data\n            \n          \n          Form Status: {{ addModelForm.status }}.\n          Form Value: {{ addModelForm.value | json }}.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-model.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Add Model                                        Name                                      Name is required              Name must be at least 4 characters                                                                        Width                                      Width is required                              Width must be at least 1 number.                                                    Number Only                                                            Height                                      Height is required                              Height must be at least 1 number                                                                          Depth                                      Depth is required                              Depth must be at least 1 number                                                                                      Front                                      Width is required                              Width must be at least 1 number.                                                                          Back                                      back side is required                              back must be at least 1 number                                                                          Side                                      side is required                              side must be at least 1 number                                                                          Top                                      Top is required              Top must be at least 1 number                                                            bottom                                      bottom is required                              bottom must be at least 2 characters                                                         -->       -->       -->      Type -->                              // \\'is-invalid\\': this.addModelForm.controls.type.status !== \\'VALID\\', // \\'is-valid\\':      this.addModelForm.controls.type.status === \\'VALID\\', // \\'form-select\\': true,             -->       -->             -->       -->       -->      type have to selected -->       -->       -->       -->       -->       -->      Category -->                                                       -->       -->             -->       -->       -->      category have to selected -->       -->       -->       -->       -->                                     Add Model                                                               Generate random data                                Form Status: {{ addModelForm.status }}.          Form Value: {{ addModelForm.value | json }}.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelEditComponent.html":{"url":"components/ModelEditComponent.html","title":"component - ModelEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/models/edit-model/edit-model.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CommonModule\n                \n            \n\n\n            \n                selector\n                app-edit-model\n            \n\n\n\n            \n                styleUrls\n                ./edit-model.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-model.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                attributeComponent\n                            \n                            \n                                attributeComponentObject\n                            \n                            \n                                component\n                            \n                            \n                                editModelForm\n                            \n                            \n                                inputId\n                            \n                            \n                                model\n                            \n                            \n                                    Public\n                                modelsService\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteForm\n                            \n                            \n                                    Private\n                                getModel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, activatedRoute: ActivatedRoute, modelsService: ModelsService, ngZone: NgZone, router: Router, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteForm\n                        \n                    \n                \n            \n            \n                \ndeleteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponentObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editModelForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/models/edit-model/edit-model.component.ts:96\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/models/edit-model/edit-model.component.ts:100\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Subscription } from 'rxjs'\n\nimport { CommonModule } from '@angular/common'\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\n\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Model } from '../../../shared/model'\n\n@Component({\n  selector: 'app-edit-model',\n  templateUrl: './edit-model.component.html',\n  styleUrls: ['./edit-model.component.scss'],\n  providers: [CommonModule],\n})\nexport class ModelEditComponent implements OnInit {\n  attributeComponent: string = ''\n  attributeComponentObject: string = ''\n  inputId: string\n  model: Model\n  component = ''\n  submitted = false\n  editModelForm: FormGroup\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public activatedRoute: ActivatedRoute,\n    public modelsService: ModelsService,\n    private ngZone: NgZone,\n    private router: Router,\n    private logService: LogService,\n  ) {}\n\n  ngOnInit() {\n    this.editModelForm = this.formBuilder.group({\n      id: ['', [Validators.required, Validators.minLength(10)]],\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      dimension: this.formBuilder.group({\n        width: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n        height: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n        depth: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n      }),\n      texture: this.formBuilder.group({\n        front: ['', null],\n        back: ['', null],\n        side: ['', null],\n        top: ['', null],\n        bottom: ['', null],\n      }),\n    })\n\n    this.inputId = this.activatedRoute.snapshot.paramMap.get('id') as string\n    this.component = this.inputId.toString()\n    this.getModel()\n  }\n\n  private getModel(): Subscription {\n    return this.modelsService.GetModel(this.inputId).subscribe((data: Model) => {\n      console.log('GetModel ' + JSON.stringify(data, null, ' '))\n      this.model = data\n      this.editModelForm.setValue({\n        id: data._id,\n        name: data.name,\n        dimension: {\n          width: data.dimension.width.toString(),\n          height: data.dimension.height.toString(),\n          depth: data.dimension.depth.toString(),\n        },\n        texture: {\n          front: data.texture.front,\n          back: data.texture.back,\n          side: data.texture.side,\n          top: data.texture.top,\n          bottom: data.texture.bottom,\n        },\n      })\n    })\n  }\n\n  onChange(event: Event) {\n    const newValue = (event.target as HTMLInputElement).value\n    console.log('Input value changed:', newValue)\n  }\n\n  get id() {\n    return this.editModelForm.get('id') as FormControl\n  }\n\n  get name() {\n    return this.editModelForm.get('name') as FormControl\n  }\n\n  deleteForm() {\n    this.logService.CreateLog({\n      objectId: this.editModelForm.value.id,\n      operation: 'Delete',\n      component: 'Model',\n      message: { id: this.editModelForm.value },\n    })\n    this.modelsService.DeleteModel(this.inputId).subscribe(() => {\n      this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n    })\n  }\n\n  submitForm() {\n    this.submitted = true\n    if (this.editModelForm.valid && this.editModelForm.touched) {\n      this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n      const log = {\n        message: { model: this.editModelForm.value },\n        operation: 'Update',\n        component: 'Model',\n        objectId: this.editModelForm.value.id,\n      }\n      this.logService.CreateLog(log).subscribe(() => {\n        console.log('logService.CreateLog(log): ' + JSON.stringify(log))\n      })\n      this.modelsService\n        .UpdateModel(this.inputId.toString(), this.editModelForm.value as unknown as Model)\n        .subscribe(() => {\n          this.router.navigate(['edit-model/', this.model._id])\n        })\n    }\n  }\n}\n\n    \n\n    \n        \n   Edit Model\n  \n    \n      \n        \n          Id\n          \n          \n            \n              Id is required and must be at least 4 characters\n            \n          \n        \n      \n      \n        \n          Name\n          \n          \n            \n              Name is required and must be at least 4 characters\n            \n          \n        \n      \n    \n    \n      \n        \n          Width\n          \n          \n          Width is required and must be at least 1 number\n          Width must be less than 6 numbers\n        \n      \n      \n        \n          Height\n          \n          \n            \n              Height is required and must be at least 1 number\n            \n            \n              Height must be less than 6 numbers\n            \n          \n        \n      \n      \n        \n          Depth\n          \n\n          \n            \n              Depth is required and must be at least 1 number\n            \n            Depth must be less than 4 numbers\n          \n        \n      \n    \n    \n      \n        \n          Front\n          \n          \n          \n            Front is required and must be at least 1 number\n          \n        \n      \n      \n        \n          Back\n          \n          \n            \n              Back side is required and must be at least 1 number\n            \n          \n        \n      \n      \n        \n          Side\n          \n          \n            \n              Side is required and must be at least 1 number\n            \n          \n        \n      \n      \n        \n          Top\n          \n          \n            \n              Top is required and must be at least 1 number\n            \n          \n        \n      \n      \n        \n          Bottom\n          \n          \n            \n              Bottom is required and must be at least 2 characters\n            \n          \n        \n      \n    \n    \n      \n        \n          \n             Update\n          \n          \n             Delete\n          \n        \n      \n      \n        Form is valid\n      \n      Form Status: {{ editModelForm.status }}.\n    \n  \n\n\n\n    \n\n    \n                \n                    ./edit-model.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Model                              Id                                              Id is required and must be at least 4 characters                                                            Name                                              Name is required and must be at least 4 characters                                                                    Width                              Width is required and must be at least 1 number          Width must be less than 6 numbers                                      Height                                              Height is required and must be at least 1 number                                      Height must be less than 6 numbers                                                            Depth                                              Depth is required and must be at least 1 number                        Depth must be less than 4 numbers                                                        Front                                          Front is required and must be at least 1 number                                                Back                                              Back side is required and must be at least 1 number                                                            Side                                              Side is required and must be at least 1 number                                                            Top                                              Top is required and must be at least 1 number                                                            Bottom                                              Bottom is required and must be at least 2 characters                                                                                 Update                                 Delete                                      Form is valid            Form Status: {{ editModelForm.status }}.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelsList.html":{"url":"classes/ModelsList.html","title":"class - ModelsList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelsList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/modelsList.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modelsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        modelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/modelsList.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/modelsList.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Model[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pop\n                        \n                    \n                \n            \n            \n                \npop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/modelsList.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Model | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(model: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/modelsList.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Model } from './model'\n\nexport class ModelsList {\n  modelsList: Model[] = []\n\n  get(): Model[] {\n    return this.modelsList\n  }\n\n  push(model: Model) {\n    this.modelsList.push(model)\n  }\n\n  pop(): Model | undefined {\n    return this.modelsList.pop()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelsListComponent.html":{"url":"components/ModelsListComponent.html","title":"component - ModelsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/models/model-list/model-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-models-list\n            \n\n\n\n            \n                styleUrls\n                ./model-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./model-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                modelListPage\n                            \n                            \n                                ModelsList\n                            \n                            \n                                    Public\n                                modelsService\n                            \n                            \n                                selectedModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddModel\n                            \n                            \n                                    Async\n                                CloneModel\n                            \n                            \n                                DeleteModel\n                            \n                            \n                                EditModel\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                loadModels\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelsService: ModelsService, logService: LogService, router: Router, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/models/model-list/model-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddModel\n                        \n                    \n                \n            \n            \n                \nAddModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Navigates to the 'add-model' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CloneModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    CloneModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Clones a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to clone.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The ID of the newly cloned model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteModel\n                        \n                    \n                \n            \n            \n                \nDeleteModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Deletes a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditModel\n                        \n                    \n                \n            \n            \n                \nEditModel(model: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Edits the specified model.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The model to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:110\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the error result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Loads the models by calling the GetModels method of the models service.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the loaded models data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Models'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Observable, of } from 'rxjs'\n\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Model } from '../../../shared/model'\n\n@Component({\n  selector: 'app-models-list',\n  templateUrl: './model-list.component.html',\n  styleUrls: ['./model-list.component.scss'],\n})\nexport class ModelsListComponent implements OnInit {\n  ModelsList: Array = []\n  selectedModel: Model\n  modelListPage = 1\n  component: string = 'Models'\n\n  constructor(\n    public modelsService: ModelsService,\n    private logService: LogService,\n    private router: Router,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * Loads the models by calling the GetModels method of the models service.\n   * @returns An Observable that emits the loaded models data.\n   */\n  loadModels(): Observable {\n    return this.modelsService.GetModels()\n  }\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit(): void {\n    this.loadModels().subscribe((data: Model[]) => {\n      this.ModelsList = data\n    })\n  }\n\n  /**\n   * Deletes a model with the specified ID.\n   * @param id The ID of the model to delete.\n   */\n  DeleteModel(id: string) {\n    this.logService.CreateLog({\n      message: { id: id },\n      objectId: id,\n      operation: 'Delete',\n      component: this.component,\n    })\n    return this.modelsService.DeleteModel(id).subscribe(() => {\n      console.log(id + ' deleted')\n      this.ngOnInit()\n      this.router.navigate(['/models-list/'])\n    })\n  }\n\n  /**\n   * Clones a model with the specified ID.\n   *\n   * @param id The ID of the model to clone.\n   * @returns The ID of the newly cloned model.\n   */\n  async CloneModel(id: string): Promise {\n    const idCloned = this.modelsService.CloneModel(id)\n    this.logService\n      .CreateLog({\n        message: { id: id, new_id: idCloned },\n        operation: 'Clone',\n        component: 'Model',\n      })\n      .subscribe(() => {\n        this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n      })\n    this.loadModels()\n    this.router.navigate(['/models-list'])\n    return idCloned\n  }\n\n  /**\n   * Navigates to the 'add-model' route.\n   */\n  AddModel(): void {\n    this.router.navigate(['/add-model'])\n  }\n\n  /**\n   * Edits the specified model.\n   *\n   * @param model The model to be edited.\n   */\n  EditModel(model: Model): void {\n    this.selectedModel = model\n    this.router.navigate(['edit-model', model._id])\n    this.ngZone.run(() => this.router.navigateByUrl(`edit-model/${model._id}`))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   * @returns An Observable with the error result.\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T): (error: Error) => Observable {\n    return (error: Error): Observable => {\n      console.error(`ModelsListComponent.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n    \n        \n   Models\n  \n    \n      \n        Name\n        Dimensions\n        Textures\n        \n      \n    \n    \n      \n        \n          {{ model.name }}\n          {{ model._id }}\n        \n        ({{ model.dimension.width + ', ' + model.dimension.height + ', ' + model.dimension.depth }})\n        \n          front,\n          back,\n          side,\n          top,\n          bottom\n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n    \n  \n  \n    \n       Add\n    \n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./model-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Models                    Name        Dimensions        Textures                                              {{ model.name }}          {{ model._id }}                ({{ model.dimension.width + \\', \\' + model.dimension.height + \\', \\' + model.dimension.depth }})                  front,          back,          side,          top,          bottom                                                                                                                                                                                       Add              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AsyncObservablePipeComponent', 'selector': 'async-observable-pipe'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelsService.html":{"url":"injectables/ModelsService.html","title":"injectable - ModelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/models.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneModel\n                            \n                            \n                                CreateModel\n                            \n                            \n                                DeleteModel\n                            \n                            \n                                GetModel\n                            \n                            \n                                GetModels\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/models.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneModel\n                        \n                    \n                \n            \n            \n                \nCloneModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Clones a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the model to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateModel\n                        \n                    \n                \n            \n            \n                \nCreateModel(data: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Creates a new model.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data of the model to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteModel\n                        \n                    \n                \n            \n            \n                \nDeleteModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Deletes a model by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetModel\n                        \n                    \n                \n            \n            \n                \nGetModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Retrieves a model by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetModels\n                        \n                    \n                \n            \n            \n                \nGetModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Retrieves the models from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Model objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:119\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateModel\n                        \n                    \n                \n            \n            \n                \nUpdateModel(id: string, data: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Updates a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the model to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data for the model.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated model.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/models.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/models.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Default value : {} as Model\n                    \n                \n                    \n                        \n                                Defined in src/app/services/models.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Model } from '../shared/model'\nimport { LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModelsService {\n  baseurl = environment.baseurl\n  model: Model = {} as Model\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the models from the server.\n   * @returns An Observable that emits an array of Model objects.\n   */\n  GetModels(): Observable {\n    return this.http\n      .get(environment.baseurl + '/models/')\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetModel')))\n  }\n  /**\n   * Retrieves a model by its ID.\n   * @param id The ID of the model to retrieve.\n   * @returns An Observable that emits the retrieved model.\n   */\n  GetModel(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/models/' + String(id), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetModel', id as unknown as Model)))\n  }\n\n  /**\n   * Deletes a model by its ID.\n   * @param id The ID of the model to delete.\n   * @returns An Observable that emits the deleted model.\n   */\n  DeleteModel(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/models/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteModel', id as unknown as Model)))\n  }\n\n  /**\n   * Creates a new model.\n   * @param data The data of the model to be created.\n   * @returns An Observable that emits the created model.\n   */\n  CreateModel(data: Model): Observable {\n    console.log('Service.CreateModel: ' + JSON.stringify(data, null, ' '))\n    return this.http\n      .post(environment.baseurl + '/models/', JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateModel', data)))\n  }\n\n  /**\n   * Clones a model with the specified ID.\n   * @param id - The ID of the model to clone.\n   * @returns The UUID of the cloned model.\n   */\n  CloneModel(id: string): string {\n    console.log(`ModelService.CloneModel: ${JSON.stringify(id, null, ' ')}`)\n    let idConed = ''\n    this.GetModel(id).subscribe((value: Model) => {\n      console.log('Get Model: ' + JSON.stringify(value, null, ' '))\n      this.CreateModel(value).subscribe({\n        next: (v) => {\n          console.log('Create Model: ' + JSON.stringify(v, null, ' '))\n          this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n          idConed = String(v._id) // Convert 'ObjectId' to string\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('models-list')),\n        error: (err) => {\n          console.error(err) // Fix: Replace 'error' with 'err'\n          catchError(this.handleErrorTemplate('CloneModel', value))\n        },\n      })\n    })\n    console.log('Get after Model: ' + JSON.stringify(this.model, null, ' '))\n    return idConed\n  }\n\n  /**\n   * Updates a model with the specified ID.\n   * @param id - The ID of the model to update.\n   * @param data - The updated data for the model.\n   * @returns An Observable that emits the updated model.\n   */\n  UpdateModel(id: string, data: Model): Observable {\n    console.log(`ModelService.UpdateModel: ${JSON.stringify(data, null, ' ')}`)\n    return this.http\n      .put(environment.baseurl + '/models/' + id, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateModel', data)))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`ModelsService.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is used to store information about a device, including its ID, name, model ID, and position.\nclass operating on device. Structure data accessed via Oracle DB/Mongo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            h\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        h\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        h:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Position {\n  x: number\n  y: number\n  h: number\n}\n\nexport interface DeviceInterface {\n  _id: string\n  name: string\n  modelId: string\n  position: Position\n}\n\nexport class Device {\n  _id!: string\n  name: string = ''\n  modelId: string = ''\n  position: Position = { x: 0, y: 0, h: 0 }\n\n  constructor(name?: string, modelId?: string, position?: Position) {\n    if (name && modelId && position) {\n      this.name = name\n      this.modelId = modelId\n      this.position = position\n    }\n  }\n\n  toString(): string {\n    return `Device ID: ${this._id}, Name: ${this.name}`\n  }\n}\n\n// @TODO: #2:30min Continue implementing the tests for the Device class. Add tests for the constructor and the toString method. Make sure to test the case where the constructor is called with no arguments. Add object data to the constructor and test the toString method.\nconst debug = true\nif (debug === true) {\n  const d1 = new Device()\n  console.log(d1.toString())\n\n  const d2Data = { name: 'Device 1', modelId: '1', position: { x: 1, y: 2, h: 3 } }\n  const d2 = new Device(d2Data.name, d2Data.modelId, d2Data.position)\n\n  d1.toString()\n  d2.toString()\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rack.html":{"url":"classes/Rack.html","title":"class - Rack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/rack.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                device\n                            \n                            \n                                units\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addUnit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(devicesService: DeviceService, modelsService: ModelsService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/rack.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                \n                    \n                        Default value : new Device()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/rack.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/rack.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addUnit\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUnit(device: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/rack.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                device\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeviceService } from '../services/device.service'\nimport { LogService } from '../services/log.service'\nimport { ModelsService } from '../services/models.service'\nimport { Device } from './device'\n\nexport class Rack {\n  device: Device = new Device()\n  units: Array = [] // rendudance we need only Id\n\n  constructor(\n    private devicesService: DeviceService,\n    private modelsService: ModelsService,\n    private logService: LogService,\n  ) {}\n\n  private addUnit(device: Device) {\n    this.units.push(device)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResolverDevice.html":{"url":"guards/ResolverDevice.html","title":"guard - ResolverDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResolverDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolverDevice.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DeviceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolverDevice.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/resolverDevice.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable } from 'rxjs'\n\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\n\nimport { DeviceService } from './services/device.service'\nimport { Device } from './shared/device'\n\n@Injectable()\nexport class ResolverDevice implements Resolve> {\n  constructor(private api: DeviceService) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  resolve(route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable {\n    console.log('Resolver')\n    return this.api.GetDevices()\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResolverModel.html":{"url":"guards/ResolverModel.html","title":"guard - ResolverModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResolverModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolverModel.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(modelsService: ModelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolverModel.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/resolverModel.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\n\nimport { ModelsService } from './services/models.service';\nimport { Model } from './shared/model';\n\n@Injectable()\nexport class ResolverModel implements Resolve> {\n  constructor(private modelsService: ModelsService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log('ResolverModel')\n    return this.modelsService.GetModels()\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplatePageTitleStrategy.html":{"url":"injectables/TemplatePageTitleStrategy.html","title":"injectable - TemplatePageTitleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplatePageTitleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TitleStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                updateTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing.module.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTitle(routerState: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app-routing.module.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                routerState\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Injectable, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport {\n    provideRouter, RouterModule, RouterStateSnapshot, Routes, TitleStrategy\n} from '@angular/router';\n\nimport { CubeComponent } from './components/3d/3d.component';\nimport {\n    AttributeDictionaryAddComponent\n} from './components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component';\nimport {\n    AttributeDictionaryListComponent\n} from './components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component';\nimport {\n    AttributeDictionaryEditComponent\n} from './components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component';\nimport {\n    AttributeAddComponent\n} from './components/attribute/add-attribute/add-attribute.component';\nimport {\n    AttributeListComponent\n} from './components/attribute/attribute-list/attribute-list.component';\nimport {\n    AttributeEditComponent\n} from './components/attribute/edit-attribute/edit-attribute.component';\nimport {\n    ConnectionAddComponent\n} from './components/connection/add-connection/add-connection.component';\nimport {\n    ConnectionListComponent\n} from './components/connection/connection-list/connection-list.component';\nimport {\n    ConnectionEditComponent\n} from './components/connection/edit-connection/edit-connection.component';\nimport { DeviceAddComponent } from './components/devices/add-device/add-device.component';\nimport { DeviceListComponent } from './components/devices/devices-list/devices-list.component';\nimport { DeviceEditComponent } from './components/devices/edit-device/edit-device.component';\nimport { FloorAddComponent } from './components/floors/add-floor/add-floor.component';\nimport { FloorEditComponent } from './components/floors/edit-floor/edit-floor.component';\nimport { FloorListComponent } from './components/floors/floor-list/floor-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ModelAddComponent } from './components/models/add-model/add-model.component';\nimport { ModelEditComponent } from './components/models/edit-model/edit-model.component';\nimport { ModelsListComponent } from './components/models/model-list/model-list.component';\nimport { ResolverDevice } from './resolverDevice';\nimport { ResolverModel } from './resolverModel';\n\n@Injectable()\nexport class TemplatePageTitleStrategy extends TitleStrategy {\n  constructor(private readonly title: Title) {\n    super()\n  }\n\n  override updateTitle(routerState: RouterStateSnapshot) {\n    const title = this.buildTitle(routerState)\n    if (title !== undefined) {\n      this.title.setTitle(`3d-inventory: ${title}`)\n    }\n  }\n}\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    title: 'Home',\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    title: 'Home',\n  },\n  {\n    path: '3d',\n    component: CubeComponent,\n    title: '3d',\n    resolve: {\n      resolveDeviceList: ResolverDevice,\n      resolveModelList: ResolverModel,\n    },\n  },\n  {\n    path: 'device-list',\n    component: DeviceListComponent,\n    title: 'Device List',\n  },\n  {\n    path: 'edit-device/:id',\n    component: DeviceEditComponent,\n    title: 'Edit Device',\n  },\n  {\n    path: 'add-device',\n    component: DeviceAddComponent,\n    title: 'Add Device',\n  },\n  {\n    path: 'models-list',\n    component: ModelsListComponent,\n    title: 'Models List',\n  },\n  {\n    path: 'edit-model/:id',\n    component: ModelEditComponent,\n    title: 'Edit Model',\n  },\n  {\n    path: 'add-model',\n    component: ModelAddComponent,\n    title: 'Add Model',\n  },\n  {\n    path: 'attribute-dictionary-list',\n    component: AttributeDictionaryListComponent,\n    title: 'Attribute Dictionary List',\n  },\n  {\n    path: 'add-attribute-dictionary',\n    component: AttributeDictionaryAddComponent,\n  },\n  {\n    path: 'edit-attribute-dictionary/:id',\n    component: AttributeDictionaryEditComponent,\n    title: 'Edit Attribute Dictionary',\n  },\n  {\n    path: 'attribute-list',\n    component: AttributeListComponent,\n    title: 'Attribute List',\n  },\n  {\n    path: 'add-attribute',\n    component: AttributeAddComponent,\n    title: 'Add Attribute',\n  },\n  {\n    path: 'edit-attribute/:id',\n    component: AttributeEditComponent,\n    title: 'Edit Attribute',\n  },\n  {\n    path: 'connection-list',\n    component: ConnectionListComponent,\n    title: 'Connections List',\n  },\n  {\n    path: 'add-connection',\n    component: ConnectionAddComponent,\n    title: 'Add Connections',\n  },\n  {\n    path: 'edit-connection/:id',\n    component: ConnectionEditComponent,\n    title: 'Edit Connections',\n  },\n  {\n    path: 'floor-list',\n    component: FloorListComponent,\n    title: 'Floor List',\n  },\n  {\n    path: 'add-floor',\n    component: FloorAddComponent,\n    title: 'Add Floor',\n  },\n  {\n    path: 'edit-floor/:id',\n    component: FloorEditComponent,\n    title: 'Edit Floor',\n  },\n]\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule.forRoot(\n      routes,\n      { enableTracing: false }, // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Texture.html":{"url":"interfaces/Texture.html","title":"interface - Texture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Texture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            back\n                                        \n                                \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        back\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        back:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Dimension {\n  width: number\n  height: number\n  depth: number\n}\n\ninterface Texture {\n  front: string\n  back: string\n  side: string\n  top: string\n  bottom: string\n}\n\nexport class Model {\n  _id: string\n  name: string\n  dimension: Dimension\n  texture: Texture\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.dimension = {\n      width: 0,\n      height: 0,\n      depth: 0,\n    }\n    this.texture = {\n      front: '',\n      back: '',\n      side: '',\n      top: '',\n      bottom: '',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tools3D.html":{"url":"classes/Tools3D.html","title":"class - Tools3D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tools3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/3d/3dTools.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deviceList\n                            \n                            \n                                getRandomH\n                            \n                            \n                                getRandomX\n                            \n                            \n                                getRandomY\n                            \n                            \n                                    Private\n                                modelList\n                            \n                            \n                                    Private\n                                racks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDistanceInDeviceList\n                            \n                            \n                                generateRacksList\n                            \n                            \n                                generateRandomDeviceRack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        racks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkDistanceInDeviceList\n                        \n                    \n                \n            \n            \n                \ncheckDistanceInDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/3d/3dTools.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRacksList\n                        \n                    \n                \n            \n            \n                \ngenerateRacksList(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/3d/3dTools.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomDeviceRack\n                        \n                    \n                \n            \n            \n                \ngenerateRandomDeviceRack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/3d/3dTools.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Device\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid'\n\nimport { faker } from '@faker-js/faker'\n\nimport { Device } from '../../shared/device'\nimport { Model } from '../../shared/model'\n\nclass Tools3D {\n  private racks: Array = []\n  private deviceList: Device[] = []\n  private modelList: Model[] = []\n\n  getRandomX = () => Math.round(Math.random() * 40 - 20)\n  getRandomY = () => Math.round(Math.random() * 40 - 20)\n  getRandomH = () => Math.round(Math.random() * 10)\n\n  checkDistanceInDeviceList() {\n    let x = this.getRandomX()\n    let y = this.getRandomY()\n    let distance = true\n    let counter = 0\n    while (distance == true && counter  {\n        // console.log('Generate rack (' + x + ', ' + y + ') ' + Math.sqrt(Math.pow(Math.abs(x - element.x), 2) + Math.pow(Math.abs(y - element.y), 2)))\n        if (\n          Math.sqrt(Math.pow(Math.abs(x - element.position.x), 2) + Math.pow(Math.abs(y - element.position.y), 2))  {\n  //     this.createRack3d(element.position.x, element.position.y, Math.round(Math.random() * 10))\n  //   })\n  // }\n\n  // createRack3d(floor_x: number, floor_y: number, h: number): void {\n  //   for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOneValidator\n                            \n                            \n                                numberValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        atLeastOneValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validation.ts:48\n                        \n                    \n\n            \n                \n                    One of deviceId, modelId and connectionId have to set\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validation.ts:68\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validation.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n/**\n * @description custom validation form shared module\n * @export\n * @class Validation\n */\nexport default class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n\n  /**\n   * One of deviceId, modelId and connectionId have to set\n   *\n   * @param {AbstractControl} control\n   * @type {ValidatorFn}\n   * @memberof Validation\n   */\n  atLeastOneValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    let i = 0\n    if (control.get('deviceId')?.value != '') i++\n    if (control.get('modelId')?.value != '') i++\n    if (control.get('connectionId')?.value != '') i++\n    console.log('count Ids => ' + i)\n    if (i > 1 || i == 0) {\n      return { atLeastOneValidator: true }\n    } else if (i == 1) {\n      return null\n    } else {\n      return { atLeastOneValidator: true }\n    }\n  }\n  /**\n   * @description check is it number\n   * @param {AbstractControl} control\n   * @type {ValidatorFn}\n   * @memberof Validation\n   */\n  numberValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const value: number = control?.value as number\n    if (typeof value !== 'number' || isNaN(value)) {\n      return {\n        number: true,\n      }\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            injectable\n            TemplatePageTitleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/3d/3d.component.ts\n            \n            component\n            CubeComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/app/components/3d/3dTools.ts\n            \n            class\n            Tools3D\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts\n            \n            component\n            AttributeDictionaryAddComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts\n            \n            component\n            AttributeDictionaryListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts\n            \n            component\n            AttributeDictionaryEditComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/attribute/add-attribute/add-attribute.component.ts\n            \n            component\n            AttributeAddComponent\n            \n                3 %\n                (1/30)\n            \n        \n        \n            \n                \n                src/app/components/attribute/add-attribute/add-attribute.component.ts\n            \n            function\n            uuidv4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/attribute/attribute-list/attribute-list.component.ts\n            \n            component\n            AttributeListComponent\n            \n                3 %\n                (1/33)\n            \n        \n        \n            \n                \n                src/app/components/attribute/edit-attribute/edit-attribute.component.ts\n            \n            component\n            AttributeEditComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/connection/add-connection/add-connection.component.ts\n            \n            component\n            ConnectionAddComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/connection/connection-list/connection-list.component.ts\n            \n            component\n            ConnectionListComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/connection/edit-connection/edit-connection.component.ts\n            \n            component\n            ConnectionEditComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/devices/add-device/add-device.component.ts\n            \n            component\n            DeviceAddComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/devices/devices-list/devices-list.component.ts\n            \n            component\n            DeviceListComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/devices/edit-device/edit-device.component.ts\n            \n            component\n            DeviceEditComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/floors/add-floor/add-floor.component.ts\n            \n            component\n            FloorAddComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/floors/edit-floor/edit-floor.component.ts\n            \n            component\n            FloorEditComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/floors/floor-list/floor-list.component.ts\n            \n            component\n            FloorListComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/log/log.component.ts\n            \n            component\n            LogComponent\n            \n                46 %\n                (19/41)\n            \n        \n        \n            \n                \n                src/app/components/log/log.component.ts\n            \n            function\n            isApiName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/log/log.component.ts\n            \n            function\n            isComponentName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/log/log.component.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/models/add-model/add-model.component.ts\n            \n            component\n            ModelAddComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/models/edit-model/edit-model.component.ts\n            \n            component\n            ModelEditComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/models/model-list/model-list.component.ts\n            \n            component\n            ModelsListComponent\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/pipe/pipe.component.ts\n            \n            component\n            AsyncObservablePipeComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/resolverDevice.ts\n            \n            guard\n            ResolverDevice\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolverModel.ts\n            \n            guard\n            ResolverModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/attribute-dictionary.service.ts\n            \n            injectable\n            AttributeDictionaryService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/services/attribute.service.ts\n            \n            injectable\n            AttributeService\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                src/app/services/connection.service.ts\n            \n            injectable\n            ConnectionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/app/services/device.service.ts\n            \n            injectable\n            DeviceService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/errorHandler.service.ts\n            \n            injectable\n            CustomErrorHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/floor.service.ts\n            \n            injectable\n            FloorService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            injectable\n            LogService\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            interface\n            Log\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            interface\n            LogIn\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            interface\n            LogParamteres\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/models.service.ts\n            \n            injectable\n            ModelsService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/shared/attribute-dictionary.ts\n            \n            class\n            AttributeDictionary\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/attribute.ts\n            \n            class\n            Attribute\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/bug.ts\n            \n            class\n            Bug\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/component-dictionary.ts\n            \n            class\n            ComponentDictionary\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/component-dictionary.ts\n            \n            interface\n            ComponentDictionaryItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/connection.ts\n            \n            class\n            Connection\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/connection.ts\n            \n            interface\n            ConnectionInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            class\n            Device\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            interface\n            DeviceInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            interface\n            Position\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            variable\n            debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/deviceCategories.ts\n            \n            class\n            DeviceCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/deviceCategories.ts\n            \n            class\n            DeviceCategoryDict\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            class\n            DeviceType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            class\n            DeviceTypeDict\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/deviceTypes.ts\n            \n            interface\n            DeviceTypeInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/devicesList.ts\n            \n            class\n            DeviceList\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/floor.ts\n            \n            interface\n            Floor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/floor.ts\n            \n            interface\n            FloorDimension\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/model.ts\n            \n            class\n            Model\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/model.ts\n            \n            interface\n            Dimension\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/model.ts\n            \n            interface\n            Texture\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/modelsList.ts\n            \n            class\n            ModelsList\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/rack.ts\n            \n            class\n            Rack\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/utils.ts\n            \n            function\n            getDateString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/validation.ts\n            \n            class\n            Validation\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/platform-server : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @faker-js/faker : ^8.4.1\n        \n            @jest/globals : ^29.7.0\n        \n            @ng-bootstrap/ng-bootstrap : ^17.0.0\n        \n            @octokit/core : ^6.1.2\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            browserify-zlib : ^0.2.0\n        \n            chalk : ^5.3.0\n        \n            cors : ^2.8.5\n        \n            date-fns : ^3.6.0\n        \n            depcheck : ^1.4.7\n        \n            eslint-scope : ^8.0.2\n        \n            express : ^4.19.2\n        \n            https-browserify : ^1.0.0\n        \n            install : ^0.13.0\n        \n            jquery : ^3.7.1\n        \n            jsdom : ^24.1.1\n        \n            lodash : ^4.17.21\n        \n            mkdirp : ^3.0.1\n        \n            mongodb : ^6.8.0\n        \n            nav-bar : ^1.0.3\n        \n            ngx-markdown : ^18.0.0\n        \n            ngx-pagination : ^6.0.3\n        \n            node-gyp : ^10.2.0\n        \n            node-sass : ^9.0.0\n        \n            npm-check-updates : ^17.0.6\n        \n            octokit : ^4.0.2\n        \n            path-browserify : ^1.0.1\n        \n            prismjs : ^1.29.0\n        \n            process : ^0.11.10\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ~7.8.1\n        \n            stream : ^0.0.3\n        \n            stream-browserify : ^3.0.0\n        \n            three-orbitcontrols-ts : ^0.1.2\n        \n            timers : ^0.1.1\n        \n            timers-browserify : ^2.0.12\n        \n            ts-sync-request : ^1.4.1\n        \n            tslib : ^2.6.3\n        \n            winston : ^3.14.2\n        \n            zone.js : ^0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getDateString   (src/.../utils.ts)\n                        \n                        \n                            isApiName   (src/.../log.component.ts)\n                        \n                        \n                            isComponentName   (src/.../log.component.ts)\n                        \n                        \n                            uuidv4   (src/.../add-attribute.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDateString\n                        \n                    \n                \n            \n            \n                \ngetDateString()\n                \n            \n\n\n\n\n            \n                \n                        Export date in format 'yyyy/MM/dd kk:mm:ss.SS'\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                date {string} 'yyyy/MM/dd kk:mm:ss.SS'\n\n                            \n                \n            \n        \n    \n    src/app/components/log/log.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isApiName\n                        \n                    \n                \n            \n            \n                \nisApiName(component: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponentName\n                        \n                    \n                \n            \n            \n                \nisComponentName(apiName: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/components/attribute/add-attribute/add-attribute.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uuidv4\n                        \n                    \n                \n            \n            \n                \nuuidv4()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n3d inventory\n\n3d inventory\nAbout project\nTechnology stack\nDemo\nData Model\nLogical model\n\n\nAplication\nList devices\nModels\nAttributes\nAttribute Dictionary\nConnections\n\n\nRun\nDeploy\nGoogle Cloud\nAPIs repos\nContributing\nNext todo\n\n\n\n   \n   \nAbout project\nProject create ✨3d inventory✨— solution that allows you to build a spatial and database representation of yours datacenters.\nExample :Motivation\n\nI'm programming to incorporate database systems. This project it is sandbox to covers relevant topics and issues related to create simple and efficient platform for IT inventory.\n\nProject contain three repos:\n\n⚓ https://github.com/karol-preiskorn/3d-inventory-angular-ui\n⚓ https://github.com/karol-preiskorn/3d-inventory-mongo-api\n⚓ https://github.com/karol-preiskorn/3d-inventory-oracle-api\n\nTechnology stack\n\nAngular 17+ - as a Corp framework.\nBootstrap 5.3+ - logic for insert UI data\ntree.js 163+ - as best graph framework.\nMongoAtlas|Oracle - I want in this project try different solution and different data structure and storage datamodels relational and noSQL.\nREST - prepared API in use in Swagger.\nPodman --> Google Cloud as containers\n\nDemo\nDemo 3d inventory use Angular and three.js framework for graphics representation.\n\nThis project build from this example contain three.js in Angular Tutorial to render 3D 3d in Angular + Three.js.\nData Model\nThis is implementation parametric generic attribute class. All attributes for Devices, Models and Connections are stored in this model.\nParameters types are defined in Attribute Dictionary.\nIn Attributes are stored values defined in Attributes Dictionary for Devices, Model and Connections. Attributes Dictionary are defined for specyfice parameters this entities.\nLogical model\nRelational data model is maped to noSQL model im MondoDb.\n\n\nAplication\nList devices\n\n\nModels\n\n\nAttributes\n\n\nAttribute Dictionary\n\n\nConnections\n\n\nRun\nExample :git clone https://github.com/karol-preiskorn/3d-inventory-angular-ui.git\ncd 3d-inventory-angular-ui\nnpm install\nnpm run startor run separately json-server and ui\nExample :npm run start:json-server\nnpm run start:ngGoto in browser http://localhost:4200\nDeploy\nhttps://angular.io/guide/deployment\nBuild in first terminal: ng build --watch in npm alias:\nExample :npm run buildGoogle Cloud\ntbc\nAPIs repos\n\nOracle 3d-inventory-oracle-api\nMongo Atlas ✨ 3d-inventory-mongo-api\n\nContributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\nPlease make sure to update tests as appropriate.\nNot forget about code guide-lines.\nNext todo\n\n connection between showing 3d and defined devices.\n build interfance to Mongo Atlas\n Set position and model in data ans show this data in 3d.\n Show attributes of DEVICES, MODELS and CONNECTIONS. Waiting for MongoDB|Oracle API.\n Generate FLOOR\n as array of square (x, y, h)\n Use Mongo to strore JSON data. (starting)\n Docker -> serve application in Github Pages --> AWS EC2\n Use Dev container in GitHub for development.\n Recognize Grunt/Glup to CI/DI use in this project.\n Add actual tasks form GitHub during build in README.md.\n Add light/dark theme switch in UI\n Use https://formly.dev/ ?\n Create blog on GitHub Pages or use https://ultimasolution.pl\n Try use NgDoc to document how to use code https://medium.com/@askoropad/ngdoc-documentation-for-angular-projects-3f6ea8fc22b0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAsyncObservablePipeComponent\n\nAsyncObservablePipeComponent\n\nAppModule -->\n\nAsyncObservablePipeComponent->AppModule\n\n\n\n\n\nAttributeAddComponent\n\nAttributeAddComponent\n\nAppModule -->\n\nAttributeAddComponent->AppModule\n\n\n\n\n\nAttributeDictionaryAddComponent\n\nAttributeDictionaryAddComponent\n\nAppModule -->\n\nAttributeDictionaryAddComponent->AppModule\n\n\n\n\n\nAttributeDictionaryEditComponent\n\nAttributeDictionaryEditComponent\n\nAppModule -->\n\nAttributeDictionaryEditComponent->AppModule\n\n\n\n\n\nAttributeDictionaryListComponent\n\nAttributeDictionaryListComponent\n\nAppModule -->\n\nAttributeDictionaryListComponent->AppModule\n\n\n\n\n\nAttributeEditComponent\n\nAttributeEditComponent\n\nAppModule -->\n\nAttributeEditComponent->AppModule\n\n\n\n\n\nAttributeListComponent\n\nAttributeListComponent\n\nAppModule -->\n\nAttributeListComponent->AppModule\n\n\n\n\n\nConnectionAddComponent\n\nConnectionAddComponent\n\nAppModule -->\n\nConnectionAddComponent->AppModule\n\n\n\n\n\nConnectionEditComponent\n\nConnectionEditComponent\n\nAppModule -->\n\nConnectionEditComponent->AppModule\n\n\n\n\n\nConnectionListComponent\n\nConnectionListComponent\n\nAppModule -->\n\nConnectionListComponent->AppModule\n\n\n\n\n\nCubeComponent\n\nCubeComponent\n\nAppModule -->\n\nCubeComponent->AppModule\n\n\n\n\n\nDeviceAddComponent\n\nDeviceAddComponent\n\nAppModule -->\n\nDeviceAddComponent->AppModule\n\n\n\n\n\nDeviceEditComponent\n\nDeviceEditComponent\n\nAppModule -->\n\nDeviceEditComponent->AppModule\n\n\n\n\n\nDeviceListComponent\n\nDeviceListComponent\n\nAppModule -->\n\nDeviceListComponent->AppModule\n\n\n\n\n\nFloorAddComponent\n\nFloorAddComponent\n\nAppModule -->\n\nFloorAddComponent->AppModule\n\n\n\n\n\nFloorEditComponent\n\nFloorEditComponent\n\nAppModule -->\n\nFloorEditComponent->AppModule\n\n\n\n\n\nFloorListComponent\n\nFloorListComponent\n\nAppModule -->\n\nFloorListComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLogComponent\n\nLogComponent\n\nAppModule -->\n\nLogComponent->AppModule\n\n\n\n\n\nModelAddComponent\n\nModelAddComponent\n\nAppModule -->\n\nModelAddComponent->AppModule\n\n\n\n\n\nModelEditComponent\n\nModelEditComponent\n\nAppModule -->\n\nModelEditComponent->AppModule\n\n\n\n\n\nModelsListComponent\n\nModelsListComponent\n\nAppModule -->\n\nModelsListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAttributeDictionaryService\n\nAttributeDictionaryService\n\nAppModule -->\n\nAttributeDictionaryService->AppModule\n\n\n\n\n\nAttributeService\n\nAttributeService\n\nAppModule -->\n\nAttributeService->AppModule\n\n\n\n\n\nCustomErrorHandler\n\nCustomErrorHandler\n\nAppModule -->\n\nCustomErrorHandler->AppModule\n\n\n\n\n\nDeviceService\n\nDeviceService\n\nAppModule -->\n\nDeviceService->AppModule\n\n\n\n\n\nFloorService\n\nFloorService\n\nAppModule -->\n\nFloorService->AppModule\n\n\n\n\n\nLogService\n\nLogService\n\nAppModule -->\n\nLogService->AppModule\n\n\n\n\n\nModelsService\n\nModelsService\n\nAppModule -->\n\nModelsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.37.22\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeviceTypeListType   (src/.../deviceTypes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/deviceTypes.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeListType\n                \n            \n            \n                \n                            DeviceTypeInterface\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../log.component.ts)\n                        \n                        \n                            debug   (src/.../device.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/log/log.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { component: 'Models', api: 'models' },\n  { component: 'Devices', api: 'devices' },\n  { component: 'Logs', api: 'logs' },\n  { component: 'Attributes', api: 'attributes' },\n  { component: 'Attribute Dictionary', api: 'attribute-dictionary' },\n  { component: 'Connection', api: 'connections' },\n  { component: 'Connections', api: 'connections' },\n  { component: 'Floors', api: 'floors' },\n  { component: '3d', api: '3d' },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/device.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseurl: 'http://localhost:8080',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  baseurl: 'http://localhost:8080',\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
