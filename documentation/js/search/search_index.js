var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.425,1,1.313]],["body/components/AppComponent.html",[0,0.614,1,2.068,2,1.552,3,0.135,4,0.135,5,1.195,6,1.317,7,1.254,8,1.254,9,0.118,10,2.805,11,1.254,12,2.942,13,2.126,14,1.879,15,1.976,16,1.552,17,1.627,18,4.175,19,1.879,20,5.42,21,1.789,22,4.648,23,0.118,24,0.242,25,2.623,26,5.42,27,0.812,28,4.648,29,6.499,30,5.91,31,2.275,32,4.648,33,4.648,34,4.648,35,5.91,36,4.648,37,0.507,38,0.8,39,3.256,40,0.782,41,0.018,42,0.357,43,0.242,44,0.828,45,6.84,46,0.938,47,1.85,48,3.256,49,1.293,50,5.91,51,6.961,52,3.523,53,3.256,54,2.871,55,3.256,56,3.256,57,4.648,58,3.256,59,4.648,60,3.256,61,4.648,62,3.256,63,3.256,64,0.541,65,0.439,66,6.499,67,3.256,68,0.852,69,0.627,70,0.827,71,0.152,72,0.06,73,5.91,74,3.256,75,3.256,76,4.648,77,4.648,78,0.415,79,0.721,80,3.256,81,0.541,82,2.109,83,3.256,84,3.256,85,3.256,86,2.234,87,2.508,88,2.286,89,1.962,90,3.256,91,3.256,92,6.25,93,4.648,94,5.42,95,4.648,96,4.648,97,3.256,98,3.256,99,3.664,100,3.561,101,2.62,102,2.322,103,1.729,104,3.829,105,4.648,106,1.578,107,2.196,108,5.91,109,4.648,110,4.004,111,2.196,112,4.648,113,4.648,114,4.648,115,4.004,116,4.648,117,3.256,118,5.42,119,6.961,120,6.157,121,2.719,122,2.305,123,3.256,124,2.508,125,2.286,126,3.256,127,2.805,128,5.42,129,2.196,130,4.648,131,3.256,132,3.256,133,1.836,134,2.027,135,4.648,136,2.805,137,2.62,138,5.91,139,5.91,140,5.42,141,5.91,142,5.91,143,4.004,144,4.648,145,3.256,146,4.648,147,2.462,148,4.648,149,2.8,150,4.648,151,3.256,152,1.962,153,3.256,154,4.648,155,4.648,156,3.256,157,3.256,158,3.256,159,3.256,160,3.256,161,5.42,162,5.42,163,3.256,164,1.195,165,1.789,166,1.789,167,1.195,168,1.254,169,1.254,170,1.088,171,1.789,172,1.039,173,1.138,174,1.789,175,1.088,176,2.274,177,1.039,178,2.406,179,1.088,180,1.088,181,1.039,182,1.789,183,1.039,184,1.039,185,0.791,186,1.088,187,1.254,188,1.039,189,1.789,190,1.039,191,1.039,192,0.463,193,1.088,194,1.789,195,1.088,196,1.039,197,0.791,198,1.039,199,1.254,200,1.195,201,1.254,202,1.039,203,1.789,204,1.039,205,1.039,206,0.569,207,1.254,208,1.254,209,0.011,210,0.011]],["title/modules/AppRoutingModule.html",[211,2.89,212,2.634]],["body/modules/AppRoutingModule.html",[0,0.873,3,0.159,4,0.159,9,0.139,17,1.342,18,4.012,41,0.018,68,1.425,69,0.738,70,0.974,71,0.276,72,0.095,81,0.866,86,2.48,99,2.936,100,2.31,103,1.661,106,2.038,107,2.795,170,1.74,172,1.661,173,1.454,175,1.74,176,2.598,177,1.661,179,1.74,180,1.74,181,1.661,183,1.661,184,1.661,185,1.265,186,1.74,188,1.661,190,1.661,191,1.661,192,0.944,193,1.74,195,1.74,196,1.661,197,1.611,198,1.886,202,1.661,204,1.661,205,1.661,206,1.297,209,0.012,210,0.012,212,3.657,213,2.954,214,2.954,215,2.954,216,1.323,217,4.487,218,6.003,219,2.954,220,2.693,221,3.657,222,5.095,223,4.487,224,3.304,225,5.095,226,3.657,227,4.487,228,2.693,229,3.374,230,5.271,231,4.012,232,3.304,233,2.954,234,4.487,235,3.304,236,3.304,237,2.954,238,3.304,239,2.693,240,4.487,241,3.304,242,2.693,243,3.304,244,2.693,245,3.304,246,2.693,247,4.487,248,3.304,249,2.693,250,3.304,251,2.693,252,3.304,253,2.954,254,4.487,255,3.304,256,2.954,257,3.304,258,2.693,259,3.304,260,3.304,261,2.693,262,4.487,263,3.304,264,2.693,265,3.304,266,2.693,267,3.831,268,3.831,269,2.693,270,3.304,271,1.812,272,1.551,273,3.304,274,3.304,275,3.304,276,3.304,277,1.281,278,3.304,279,5.936,280,4.556,281,2.31,282,3.304,283,3.304,284,3.304,285,3.304,286,1.138,287,3.304,288,3.304,289,3.304,290,3.304,291,3.304,292,2.954]],["title/classes/Attribute.html",[72,0.069,173,0.722]],["body/classes/Attribute.html",[3,0.223,4,0.223,9,0.195,23,0.195,24,0.338,37,0.538,38,0.858,41,0.018,43,0.271,65,0.935,71,0.252,72,0.118,104,3.489,173,1.246,209,0.015,210,0.015,293,2.074,294,4.64,295,1.131,296,1.686,297,5.981,298,5.981,299,4.875,300,3.678,301,1.097,302,6.475,303,5.386,304,5.386,305,2.137,306,5.386,307,5.386,308,5.386,309,2.691,310,5.386,311,3.782,312,5.386,313,5.386,314,5.386]],["title/components/AttributeDictionaryAddComponent.html",[0,0.425,172,1.196]],["body/components/AttributeDictionaryAddComponent.html",[0,0.715,1,0.864,2,1.265,3,0.102,4,0.102,5,0.906,6,0.999,7,0.951,8,0.951,9,0.089,11,0.951,12,2.853,13,2.062,15,1.611,16,2.044,17,1.326,19,1.532,21,1.458,23,0.221,24,0.198,25,1.612,27,0.662,31,1.988,37,0.318,38,0.845,40,0.736,41,0.018,42,0.385,43,0.265,44,0.78,46,0.872,47,1.604,54,3.731,64,0.977,65,0.792,68,1.232,69,0.475,70,0.628,71,0.115,72,0.045,78,0.804,79,1.398,81,0.411,86,2.389,103,0.788,106,1.781,121,1.988,164,0.906,165,1.458,166,1.458,167,0.906,168,0.951,169,0.951,170,0.825,171,1.458,172,1.647,173,1.513,174,1.458,175,0.825,176,2.057,177,0.788,178,2.144,179,0.825,180,0.825,181,0.788,182,1.458,183,0.788,184,0.788,185,0.6,186,0.825,187,0.951,188,0.788,189,1.458,190,0.788,191,0.788,192,0.351,193,0.825,194,1.458,195,0.825,196,0.788,197,0.6,198,0.788,199,0.951,200,1.895,201,0.951,202,0.788,203,1.458,204,0.788,205,0.788,206,0.805,207,0.951,208,0.951,209,0.009,210,0.009,226,5.467,281,1.488,286,0.729,295,1.131,296,0.92,301,0.598,305,0.687,315,5.764,316,2.128,317,1.208,318,1.863,319,1.959,320,2.597,321,4.606,322,3.788,323,4.606,324,4.798,325,4.279,326,3.558,327,3.558,328,3.344,329,2.984,330,4.089,331,3.788,332,3.788,333,2.66,334,3.788,335,3.788,336,5.165,337,2.911,338,2.135,339,2.135,340,2.951,341,4.193,342,1.17,343,5.57,344,1.6,345,3.313,346,2.141,347,2.044,348,1.555,349,2.47,350,3.788,351,2.47,352,3.911,353,3.788,354,2.47,355,2.918,356,2.47,357,3.788,358,2.47,359,3.788,360,2.47,361,2.47,362,2.47,363,2.47,364,2.66,365,2.47,366,0.475,367,2.597,368,2.47,369,3.356,370,2.47,371,2.47,372,2.47,373,2.47,374,2.47,375,1.611,376,2.47,377,2.47,378,2.47,379,1.488,380,2.47,381,2.47,382,2.47,383,2.47,384,2.47,385,2.47,386,2.47,387,1.735,388,2.47,389,2.47,390,2.47,391,2.47,392,2.47,393,2.47,394,3.608,395,1.392,396,1.234,397,0.999,398,2.128,399,2.128,400,1.05,401,1.903,402,1.903,403,1.903,404,1.903,405,2.47,406,2.47,407,2.47,408,0.947,409,2.47,410,1.6,411,3.14,412,1.903,413,1.903,414,1.735,415,3.608,416,3.608,417,2.47,418,2.47,419,2.47,420,2.47,421,2.47,422,2.47,423,2.47,424,2.47,425,2.47,426,2.47,427,1.167,428,2.47,429,1.326,430,0.906,431,0.788,432,2.47,433,2.47,434,2.47,435,2.47,436,1.309,437,1.234,438,0.753,439,0.687,440,2.47,441,0.719,442,1.167,443,1.106,444,0.864,445,1.735,446,2.47,447,3.788,448,3.788,449,3.3,450,3.788,451,2.66,452,2.135,453,5.165,454,2.47,455,2.777,456,3.788,457,3.788,458,3.788,459,2.454,460,3.788,461,6.312,462,3.788,463,5.165,464,3.788,465,3.788,466,3.788,467,3.788,468,3.788,469,3.788,470,3.788,471,3.788,472,1.892,473,2.282,474,2.47]],["title/components/AttributeDictionaryListComponent.html",[0,0.425,177,1.196]],["body/components/AttributeDictionaryListComponent.html",[0,0.761,1,1.063,2,1.476,3,0.126,4,0.126,5,1.114,6,1.228,7,1.169,8,1.169,9,0.11,11,1.169,12,2.921,13,2.111,15,1.88,16,1.912,17,1.547,19,1.787,21,1.702,23,0.11,24,0.231,25,1.824,27,0.772,31,2.203,37,0.492,38,0.833,40,0.731,41,0.018,42,0.357,43,0.264,44,0.775,46,0.883,47,1.613,49,1.45,64,1.055,65,0.855,68,1.202,69,0.585,70,0.772,71,0.142,72,0.056,78,0.563,81,0.505,86,2.286,87,3.405,88,2.133,103,0.969,104,2.863,106,2.288,121,2.203,134,1.287,164,1.114,165,1.702,166,1.702,167,1.114,168,1.169,169,1.169,170,1.014,171,1.702,172,0.969,173,1.447,174,1.702,175,1.014,176,2.349,177,1.825,178,2.341,179,1.014,180,1.014,181,0.969,182,1.702,183,0.969,184,0.969,185,0.737,186,1.014,187,1.169,188,0.969,189,1.702,190,0.969,191,0.969,192,0.432,193,1.014,194,1.702,195,1.014,196,0.969,197,0.737,198,0.969,199,1.169,200,2.1,201,1.169,202,0.969,203,1.702,204,0.969,205,0.969,206,1.109,207,1.169,208,1.169,209,0.01,210,0.01,228,5.188,229,4.786,301,0.698,315,5.692,317,1.41,318,2.107,324,3.808,325,4.433,340,3.222,341,2.863,342,1.613,346,2.293,347,2.188,348,1.665,366,0.851,369,4.399,398,2.617,399,2.617,400,1.291,401,2.339,408,0.956,436,1.609,437,1.517,438,0.925,439,1.23,441,1.287,443,1.36,444,1.547,445,2.133,455,2.088,475,1.83,476,3.376,477,3.376,478,2.863,479,6.082,480,5.211,481,5.211,482,3.659,483,5.211,484,4.409,485,3.808,486,3.808,487,3.808,488,3.808,489,5.723,490,3.037,491,2.339,492,3.037,493,3.808,494,3.037,495,4.42,496,3.037,497,4.42,498,3.808,499,3.037,500,4.42,501,3.037,502,2.617,503,2.133,504,3.037,505,2.208,506,2.133,507,2.339,508,1.967,509,1.967,510,1.967,511,3.104,512,1.967,513,2.617,514,1.609,515,1.712,516,1.517,517,1.609,518,5.211,519,3.037,520,3.037,521,3.037,522,2.003,523,3.037,524,2.617,525,1.967,526,3.037,527,3.037,528,3.037,529,2.133,530,2.617,531,4.42,532,3.037,533,4.014,534,3.037,535,1.824,536,2.339,537,3.037,538,1.712,539,3.037,540,2.617,541,3.037,542,4.42,543,4.42,544,4.42,545,4.42,546,4.42,547,4.42]],["title/injectables/AttributeDictionaryService.html",[216,0.953,325,2.43]],["body/injectables/AttributeDictionaryService.html",[3,0.125,4,0.125,9,0.109,14,1.222,23,0.109,24,0.23,27,0.997,37,0.496,38,0.787,40,0.787,41,0.018,42,0.341,43,0.251,44,0.833,46,0.983,52,2.483,64,0.732,65,0.594,68,1.23,69,0.582,70,0.768,71,0.141,72,0.055,78,0.897,79,1.577,81,0.949,106,2.248,122,1.873,173,1.486,206,0.908,209,0.01,210,0.01,216,1.119,295,1.107,296,1.07,301,0.696,325,2.853,342,1.953,346,2.289,347,2.185,348,1.662,366,1.404,369,4.288,401,2.329,408,1.2,429,1.058,439,1.689,442,2.456,444,1.058,445,2.123,449,2.853,485,3.795,487,3.795,493,3.795,498,3.795,522,1.542,524,2.604,535,1.542,548,1.51,549,6.063,550,2.604,551,2.21,552,2.327,553,4.405,554,4.405,555,5.71,556,4.405,557,4.405,558,1.601,559,2.557,560,4.405,561,2.428,562,3.023,563,2.483,564,3.795,565,4.405,566,3.795,567,4.405,568,2.947,569,7.038,570,2.334,571,4.405,572,5.197,573,3.023,574,2.101,575,2.428,576,3.023,577,2.081,578,2.334,579,4.405,580,3.023,581,2.334,582,2.658,583,2.201,584,2.654,585,1.819,586,2.483,587,1.873,588,2.698,589,3.023,590,2.853,591,5.71,592,4.405,593,3.023,594,2.853,595,2.853,596,4.405,597,3.023,598,2.081,599,2.101,600,2.853,601,2.081,602,1.973,603,2.327,604,2.557,605,3.393,606,4.92,607,3.699,608,3.441,609,3.795,610,3.795,611,3.023,612,3.166,613,0.88,614,1.428,615,1.428,616,1.821,617,1.354,618,1.164,619,1.354,620,1.821,621,1.285,622,2.456,623,1.51,624,2.456,625,6.07,626,2.138,627,5.197,628,4.405,629,2.604,630,2.853,631,3.023,632,2.604,633,3.023,634,3.023,635,3.023,636,2.604,637,3.023,638,2.081,639,2.604,640,3.023,641,2.334,642,3.795,643,2.604,644,2.604,645,2.329,646,2.604,647,3.023,648,3.023,649,3.023,650,3.023,651,2.604,652,2.654,653,3.795,654,3.023,655,3.649,656,2.123,657,1.958,658,2.123,659,2.123,660,4.405,661,1.354,662,2.604,663,1.428,664,1.821,665,2.604,666,2.604]],["title/injectables/AttributeService.html",[216,0.953,667,2.89]],["body/injectables/AttributeService.html",[0,0.643,3,0.094,4,0.094,9,0.082,13,0.986,14,0.917,23,0.082,24,0.185,27,0.619,37,0.52,38,0.792,40,0.815,41,0.018,42,0.364,43,0.257,44,0.873,46,0.991,49,0.631,52,1.278,64,0.725,65,0.721,68,1.206,69,0.436,70,0.576,71,0.106,72,0.041,78,0.904,79,1.186,81,0.82,104,4.799,122,1.507,173,1.5,192,0.975,206,0.619,209,0.008,210,0.008,216,0.901,277,1.184,286,0.95,295,1.148,301,0.56,305,1.579,342,1.959,346,2.076,347,1.981,348,1.507,366,1.286,408,1.157,429,2.076,430,1.301,439,1.65,441,1.836,444,1.241,445,2.489,486,3.054,522,1.241,535,1.241,548,1.133,551,1.856,552,1.954,558,1.201,559,2.21,561,2.098,563,1.998,568,2.91,570,1.878,574,1.433,575,2.098,577,1.675,578,1.878,581,1.878,582,2.689,583,1.771,585,1.527,586,1.998,587,1.856,588,3.302,590,3.424,594,2.296,595,2.296,598,1.675,599,1.433,600,2.465,601,2.332,602,1.588,603,1.954,604,1.588,612,1.771,613,0.66,614,2.332,615,1.072,616,1.366,617,1.016,618,0.873,619,1.016,620,1.366,621,0.964,622,2.9,623,2.675,624,2.53,626,2.186,629,1.954,638,2.9,641,1.201,655,3.465,656,1.592,657,1.469,658,1.592,659,1.592,661,1.588,663,1.675,664,1.366,667,2.731,668,1.954,669,3.545,670,3.545,671,2.731,672,3.545,673,4.935,674,4.086,675,4.935,676,3.545,677,3.545,678,3.545,679,3.545,680,2.136,681,3.545,682,2.656,683,3.76,684,2.21,685,3.545,686,3.545,687,2.268,688,2.465,689,2.136,690,3.545,691,2.268,692,3.545,693,2.268,694,2.731,695,2.731,696,2.268,697,2.614,698,3.545,699,2.268,700,2.268,701,3.338,702,3.637,703,2.268,704,3.545,705,6.452,706,4.935,707,3.545,708,4.179,709,2.268,710,4.935,711,4.935,712,2.136,713,3.545,714,3.545,715,3.545,716,2.268,717,3.545,718,2.268,719,3.054,720,3.545,721,2.268,722,2.296,723,2.981,724,2.675,725,2.268,726,1.878,727,2.465,728,1.878,729,1.201,730,2.827,731,3.545,732,2.268,733,2.268,734,3.801,735,2.268,736,1.072,737,2.268,738,2.268,739,3.76,740,4.89,741,3.545,742,2.268,743,2.973,744,3.065,745,4.364,746,3.197,747,2.268,748,4.364,749,2.268,750,2.268,751,3.545,752,2.268,753,2.268,754,2.268,755,2.268,756,4.364,757,3.054,758,4.364,759,3.054,760,2.268,761,3.545,762,2.268,763,2.268,764,2.268,765,2.268,766,2.268,767,3.545,768,1.133,769,1.469,770,2.268,771,2.268,772,1.747,773,1.592,774,2.268,775,1.592,776,1.747,777,1.747,778,1.747,779,1.278,780,1.954,781,1.747,782,2.268,783,2.268,784,1.954,785,1.592]],["title/classes/AttributesDictionary.html",[72,0.069,369,2.26]],["body/classes/AttributesDictionary.html",[3,0.205,4,0.205,9,0.179,23,0.179,24,0.321,37,0.524,38,0.831,40,0.595,41,0.018,42,0.365,43,0.276,44,0.631,49,1.711,64,1.196,65,0.969,71,0.231,72,0.09,106,1.441,173,1.346,185,1.493,192,0.995,209,0.014,210,0.014,286,1.183,293,1.905,295,0.864,296,1.624,301,0.782,340,3.544,341,4.333,369,3.704,427,2.905,729,2.622,786,4.264,787,2.216,788,6.148,789,5.763,790,6.148,791,6.148,792,4.949,793,4.949,794,4.949,795,4.736,796,4.736,797,4.736,798,4.736,799,4.736,800,4.736,801,4.736,802,4.736,803,4.736,804,4.736,805,4.736,806,2.614,807,4.949,808,4.949]],["title/classes/ComponentDictionary.html",[72,0.069,326,2.115]],["body/classes/ComponentDictionary.html",[0,0.769,2,1.949,3,0.189,4,0.189,9,0.165,23,0.165,24,0.304,27,1.019,37,0.52,38,0.814,40,0.702,41,0.018,42,0.406,43,0.254,44,0.743,46,0.946,47,1.483,64,0.757,65,0.614,71,0.273,72,0.083,78,0.865,81,0.97,100,3.515,102,2.915,173,1.123,185,1.417,192,1.052,197,1.648,206,1.124,209,0.013,210,0.013,272,2.603,277,1.949,286,1.306,293,1.753,295,1.337,326,3.289,408,1.181,708,3.779,809,3.508,810,5.834,811,5.848,812,3.827,813,3.827,814,5.834,815,5.243,816,3.515,817,4.097,818,5.026,819,3.515,820,5.026,821,4.494,822,4.097,823,3.04,824,5.848,825,4.554,826,5.026,827,4.554,828,4.554,829,4.554,830,4.554,831,5.026,832,4.554,833,0.614,834,2.567,835,3.198,836,3.198,837,2.275,838,3.198,839,2.95,840,3.198,841,3.198,842,3.924,843,2.275]],["title/interfaces/ComponentDictionaryItem.html",[815,2.634,833,0.505]],["body/interfaces/ComponentDictionaryItem.html",[0,0.714,2,1.719,3,0.213,4,0.213,9,0.186,23,0.186,24,0.328,37,0.527,41,0.018,42,0.404,43,0.246,47,1.308,71,0.294,72,0.094,78,0.904,81,1.047,100,3.101,102,2.571,173,0.99,185,1.25,192,1.009,197,1.529,206,0.899,209,0.014,210,0.014,272,2.081,277,1.719,286,1.212,295,1.34,326,2.901,408,0.944,708,4.08,809,3.964,811,4.434,812,2.901,813,2.901,815,5.199,816,3.101,817,3.614,818,4.434,819,3.101,820,4.434,821,3.964,822,3.614,823,2.821,824,5.426,826,4.434,831,4.434,833,0.693,834,2.901,835,3.614,836,3.614,837,2.571,838,3.614,839,3.334,840,3.614,841,3.614,842,4.434,843,2.571,844,1.981]],["title/classes/Connection.html",[72,0.069,185,0.911]],["body/classes/Connection.html",[3,0.222,4,0.222,9,0.194,23,0.194,24,0.337,37,0.538,38,0.834,40,0.645,41,0.018,42,0.384,43,0.266,44,0.684,71,0.302,72,0.098,102,3.228,185,1.787,209,0.015,210,0.015,293,2.066,295,0.937,296,1.747,301,0.848,309,2.681,729,2.843,787,2.893,822,4.537,833,0.723,845,4.134,846,5.052,847,5.052,848,5.566,849,5.052,850,6.461,851,5.367,852,5.367,853,5.367,854,4.624,855,2.843,856,4.624,857,4.624,858,4.624,859,4.624,860,4.624]],["title/components/ConnectionAddComponent.html",[0,0.425,181,1.196]],["body/components/ConnectionAddComponent.html",[0,0.622,1,0.973,2,1.384,3,0.115,4,0.115,5,1.02,6,1.124,7,1.071,8,1.071,9,0.101,11,1.071,12,2.893,13,2.091,15,1.761,16,2.054,17,1.45,19,1.675,21,1.595,23,0.212,24,0.216,27,0.724,31,2.112,37,0.425,38,0.843,40,0.766,41,0.018,42,0.388,43,0.25,44,0.812,46,0.917,47,1.663,54,3.707,64,0.912,65,0.739,68,1.267,69,0.535,70,0.707,71,0.13,72,0.051,78,0.783,79,1.299,81,0.462,86,2.436,103,0.887,106,0.81,107,1.314,121,2.112,164,1.02,165,1.595,166,1.595,167,1.02,168,1.071,169,1.071,170,0.929,171,1.595,172,0.887,173,1.056,174,1.595,175,0.929,176,2.152,177,0.887,178,2.258,179,0.929,180,0.929,181,1.749,182,1.595,183,0.887,184,0.887,185,1.79,186,0.929,187,1.071,188,0.887,189,1.595,190,0.887,191,0.887,192,1.024,193,0.929,194,1.595,195,0.929,196,0.887,197,0.675,198,0.887,199,1.071,200,2.012,201,1.071,202,0.887,203,1.595,204,0.887,205,0.887,206,0.865,207,1.071,208,1.071,209,0.009,210,0.009,239,5.242,299,2.909,301,0.654,305,0.774,317,1.321,318,2.002,319,2.105,320,2.79,326,3.69,329,3.207,333,2.909,337,3.092,338,2.335,339,2.335,342,1.663,344,1.801,345,3.466,346,2.229,347,2.128,348,1.619,352,3.851,355,3.191,364,2.909,366,0.797,367,2.79,375,1.761,379,1.675,387,1.953,395,1.567,396,1.389,397,1.124,400,1.182,402,2.142,408,1.128,410,1.801,411,3.092,412,2.142,413,2.142,414,1.953,415,3.553,416,3.553,429,0.973,430,1.02,431,0.887,436,1.473,437,1.389,438,0.847,439,0.774,441,0.81,442,1.314,443,1.245,444,0.973,449,3.072,451,2.909,452,2.335,455,2.592,472,2.07,473,2.496,538,1.567,682,2.853,689,1.675,736,1.314,846,3.851,847,3.851,861,6.431,862,2.142,863,4.95,864,3.569,865,4.95,866,4.126,867,3.569,868,3.569,869,3.569,870,5.485,871,3.851,872,3.569,873,3.838,874,3.569,875,4.142,876,2.781,877,4.142,878,2.781,879,4.142,880,2.781,881,2.781,882,2.781,883,2.781,884,3.569,885,2.781,886,2.396,887,2.781,888,2.781,889,2.781,890,2.781,891,2.781,892,2.781,893,2.781,894,2.781,895,2.781,896,2.396,897,2.781,898,2.396,899,2.781,900,1.953,901,2.909,902,2.142,903,1.567,904,1.953,905,2.781,906,2.781,907,2.781,908,2.142,909,2.781,910,2.781,911,2.781,912,2.781,913,2.781,914,2.781,915,2.781,916,2.142,917,2.396,918,2.396,919,1.953,920,2.781,921,2.781,922,2.781,923,2.781,924,2.142,925,2.396,926,4.142,927,4.142,928,2.781,929,2.781,930,3.191,931,2.781,932,2.781,933,2.335,934,3.191,935,4.725,936,3.569,937,2.781,938,4.725,939,3.569,940,4.142,941,4.142,942,4.142,943,4.142,944,4.142,945,4.142,946,2.781,947,2.781,948,2.781,949,2.781,950,2.781]],["title/components/ConnectionEditComponent.html",[0,0.425,183,1.196]],["body/components/ConnectionEditComponent.html",[0,0.696,1,0.873,2,1.275,3,0.103,4,0.103,5,0.915,7,0.96,8,0.96,9,0.09,11,0.96,12,2.856,13,2.064,16,1.734,17,1.336,21,1.469,23,0.203,24,0.199,25,2.065,27,0.667,31,1.999,37,0.458,38,0.844,40,0.557,41,0.018,42,0.38,43,0.24,44,0.591,46,0.754,47,1.422,54,2.75,64,1.02,65,0.942,68,1.269,69,0.48,70,0.634,71,0.117,72,0.046,78,0.827,79,1.438,81,1.052,86,1.971,103,0.796,106,0.726,107,1.179,121,1.999,164,0.915,165,1.469,166,1.469,167,0.915,168,0.96,169,0.96,170,0.833,171,1.469,172,0.796,173,0.999,174,1.469,175,0.833,176,2.391,177,0.796,178,2.154,179,0.833,180,0.833,181,0.796,182,1.469,183,1.656,184,0.796,185,1.751,186,0.833,187,0.96,188,0.796,189,1.469,190,0.796,191,0.796,192,0.942,193,0.833,194,1.469,195,0.833,196,0.796,197,0.606,198,0.796,199,0.96,200,1.905,201,0.96,202,0.796,203,1.469,204,0.796,205,0.796,206,0.436,207,0.96,208,0.96,209,0.009,210,0.009,244,5.244,296,0.927,297,4.473,301,0.603,305,1.289,317,1.217,318,1.874,319,1.971,320,2.613,326,3.57,329,3.002,333,3.254,337,2.926,338,2.151,339,2.151,342,1.422,344,1.616,345,3.659,346,2.149,347,2.051,348,1.56,352,3.645,364,2.68,366,0.999,367,2.926,375,1.623,379,1.503,387,1.752,394,3.624,395,1.406,396,1.907,397,1.009,400,1.061,402,1.922,408,1.161,411,2.926,412,1.922,413,1.922,414,1.752,415,3.363,416,3.363,429,1.622,430,1.4,431,0.796,438,1.582,439,0.694,441,0.726,444,0.873,449,2.948,451,3.645,452,2.151,455,2.453,472,3.067,473,2.299,517,1.322,525,1.616,568,1.784,599,1.874,613,0.726,674,3.002,682,2.749,734,2.94,736,1.179,744,3.645,843,1.246,846,3.928,847,3.928,862,1.922,864,3.288,866,3.977,867,3.993,868,3.993,869,3.993,871,3.645,873,3.699,874,2.149,886,2.149,896,2.149,898,2.149,902,1.922,903,1.406,904,1.752,908,1.922,916,1.922,917,2.149,918,2.149,919,1.752,924,1.922,925,2.149,930,2.94,933,2.926,934,2.94,935,4.473,936,3.288,938,4.473,939,3.288,951,6.434,952,4.651,953,3.993,954,3.993,955,3.288,956,4.635,957,3.816,958,3.288,959,2.495,960,2.495,961,2.495,962,2.495,963,2.495,964,2.495,965,2.495,966,2.495,967,2.495,968,2.495,969,2.495,970,2.495,971,2.495,972,2.495,973,2.495,974,2.495,975,2.495,976,2.495,977,2.495,978,2.495,979,2.495,980,2.495,981,2.495,982,2.94,983,3.816,984,3.816,985,3.993,986,1.922,987,2.495,988,4.635,989,2.299,990,2.495,991,2.495,992,2.495,993,2.495,994,2.495,995,2.495,996,2.495,997,2.495,998,4.635,999,2.495,1000,2.495,1001,2.495,1002,2.495,1003,2.495,1004,2.495,1005,2.495,1006,2.495,1007,2.495,1008,2.495,1009,2.495,1010,2.495,1011,2.495,1012,2.495,1013,4.635,1014,2.495,1015,2.495,1016,2.495,1017,2.495,1018,3.816,1019,3.816,1020,3.816,1021,3.816,1022,3.816,1023,3.816,1024,3.816,1025,2.495,1026,2.495,1027,2.495,1028,2.495,1029,3.816,1030,3.816,1031,3.816,1032,3.816,1033,3.816,1034,3.816,1035,5.191,1036,2.68,1037,3.816,1038,2.495,1039,2.495,1040,2.495,1041,2.495]],["title/interfaces/ConnectionInterface.html",[833,0.505,849,2.634]],["body/interfaces/ConnectionInterface.html",[3,0.227,4,0.227,9,0.199,23,0.199,24,0.341,37,0.544,41,0.018,42,0.386,43,0.262,71,0.306,72,0.1,102,2.74,185,1.589,209,0.015,210,0.015,296,1.798,309,2.74,787,2.456,822,3.851,833,0.739,844,2.111,845,4.224,846,5.2,847,5.2,848,4.725,849,4.913,854,4.725,855,2.905,856,4.725,857,4.725,858,4.725,859,4.725,860,4.725]],["title/components/ConnectionListComponent.html",[0,0.425,184,1.196]],["body/components/ConnectionListComponent.html",[0,0.751,1,1.017,2,1.429,3,0.12,4,0.12,5,1.066,6,1.175,7,1.119,8,1.119,9,0.105,11,1.119,12,2.907,13,2.101,15,1.82,16,1.429,17,1.498,19,1.731,21,1.648,23,0.105,24,0.223,25,1.778,27,0.748,31,2.158,37,0.501,38,0.844,40,0.752,41,0.018,42,0.359,43,0.264,44,0.796,46,0.912,47,1.424,49,1.798,64,1.125,65,0.912,68,1.262,69,0.559,70,0.738,71,0.136,72,0.053,78,0.714,79,1.125,81,0.483,86,2.214,103,0.927,106,0.846,107,3.133,111,2.022,120,2.504,121,2.158,124,2.239,125,2.041,134,1.246,164,1.066,165,1.648,166,1.648,167,1.066,168,1.119,169,1.119,170,0.971,171,1.648,172,0.927,173,1.079,174,1.648,175,0.971,176,2.187,177,0.927,178,2.3,179,0.971,180,0.971,181,0.927,182,1.648,183,0.927,184,1.787,185,1.834,186,0.971,187,1.119,188,0.927,189,1.648,190,0.927,191,0.927,192,1.055,193,0.971,194,1.648,195,0.971,196,0.927,197,0.706,198,0.927,199,1.119,200,2.056,201,1.119,202,0.927,203,1.648,204,0.927,205,0.927,206,1.091,207,1.119,208,1.119,209,0.01,210,0.01,242,5.25,299,3.567,301,0.676,317,1.365,318,2.054,319,2.16,340,2.691,342,1.72,346,2.261,347,2.158,348,1.642,366,0.824,397,1.175,400,1.236,408,1.028,427,1.373,436,2.267,437,2.138,438,0.885,439,1.191,441,1.246,443,1.301,444,1.017,455,2.022,475,1.751,476,3.291,477,3.291,478,2.772,482,4.537,484,4.317,491,2.239,503,2.041,505,3.122,506,2.041,507,2.239,508,1.882,509,1.882,510,1.882,512,1.882,514,1.54,515,1.638,516,1.452,517,1.54,522,1.017,530,3.687,533,3.913,535,1.017,536,2.239,538,2.412,674,3.291,682,2.893,736,1.373,866,3.291,871,3.935,872,3.687,873,4.077,884,3.687,902,2.239,903,1.638,904,2.041,908,2.239,916,2.239,919,2.041,924,2.239,1042,6.442,1043,5.974,1044,6.461,1045,3.567,1046,5.08,1047,3.913,1048,3.687,1049,3.687,1050,4.28,1051,4.28,1052,5.604,1053,2.906,1054,2.906,1055,2.906,1056,3.687,1057,2.906,1058,3.687,1059,2.906,1060,4.28,1061,2.504,1062,4.28,1063,2.906,1064,2.906,1065,2.906,1066,2.504,1067,2.041,1068,2.906,1069,3.005,1070,2.504,1071,5.08,1072,2.906,1073,2.906,1074,2.906,1075,2.504,1076,2.504,1077,4.28,1078,2.906,1079,2.906,1080,2.906,1081,2.906,1082,5.604,1083,3.005,1084,4.28,1085,4.28,1086,4.28,1087,4.28,1088,4.28,1089,4.28,1090,2.906,1091,2.906]],["title/injectables/ConnectionService.html",[216,0.953,873,2.26]],["body/injectables/ConnectionService.html",[3,0.127,4,0.127,9,0.111,13,1.236,14,1.237,23,0.111,24,0.232,27,0.776,37,0.514,38,0.8,40,0.825,41,0.018,42,0.363,43,0.266,44,0.887,46,0.985,49,0.851,64,0.87,65,0.822,68,1.277,69,0.589,70,0.777,71,0.143,72,0.056,78,0.909,79,0.984,81,0.509,107,3.24,122,1.89,185,1.898,206,0.776,209,0.01,210,0.01,216,1.129,295,1.147,301,0.702,305,1.236,342,1.943,346,2.298,347,2.193,348,1.668,366,1.373,408,1.204,430,1.631,438,0.932,439,1.77,441,2.028,444,1.555,522,1.555,535,1.555,548,1.529,551,2.225,552,2.344,558,1.621,559,2.572,561,2.442,563,2.505,568,2.95,570,2.354,574,1.797,575,2.442,577,2.1,578,2.354,581,2.354,582,2.714,583,2.22,585,2.298,586,2.505,587,2.225,588,3.291,590,2.869,594,2.879,595,2.879,598,2.1,599,1.797,600,2.869,601,2.1,602,1.99,603,2.344,604,1.99,612,2.22,613,0.891,614,1.446,615,1.446,616,1.843,617,1.37,618,1.178,619,1.37,620,1.843,621,1.301,622,2.882,623,2.22,624,2.882,626,2.187,638,2.714,641,1.621,655,4.033,656,2.148,657,1.982,658,2.148,659,2.148,661,1.99,663,1.446,671,3.423,680,2.677,688,2.869,689,3.153,694,3.423,695,3.423,697,2.354,722,2.879,723,3.007,724,3.048,726,2.354,727,2.869,728,2.354,729,1.621,768,1.529,769,1.982,772,2.357,773,2.148,775,2.148,776,2.357,777,2.357,778,2.357,779,1.725,781,2.357,785,2.148,873,2.677,900,2.148,901,3.675,904,2.148,955,3.829,958,3.829,1048,3.829,1049,3.829,1056,3.829,1058,3.829,1092,2.636,1093,4.444,1094,5.743,1095,4.444,1096,4.444,1097,3.06,1098,4.444,1099,3.06,1100,3.06,1101,3.06,1102,3.06,1103,3.06,1104,3.06,1105,4.444,1106,3.06,1107,3.06,1108,3.829,1109,3.829,1110,3.06,1111,3.06,1112,5.233,1113,3.06,1114,3.06,1115,2.357,1116,3.06,1117,3.06,1118,3.06,1119,4.444,1120,3.06,1121,3.06,1122,2.636]],["title/classes/Device.html",[72,0.069,192,0.534]],["body/classes/Device.html",[3,0.166,4,0.166,9,0.145,23,0.145,24,0.28,27,0.938,37,0.539,38,0.803,40,0.483,41,0.018,42,0.402,43,0.251,44,0.512,46,0.871,49,1.684,64,1.12,65,0.908,71,0.283,72,0.111,78,0.512,99,3.799,129,3.678,134,2.212,192,1.117,209,0.012,210,0.012,286,1.363,293,1.546,295,0.938,296,1.636,300,3.901,301,0.634,309,2.006,311,2.819,338,3.644,342,1.8,375,2.285,427,2.538,574,2.172,585,1.405,586,3.029,626,1.931,787,2.406,806,2.949,816,3.895,823,2.895,833,0.816,855,2.846,1123,2.819,1124,5.191,1125,3.922,1126,3.772,1127,5.372,1128,4.138,1129,5.342,1130,5.054,1131,5.191,1132,3.465,1133,3.465,1134,4.015,1135,3.029,1136,3.772,1137,4.138,1138,4.138,1139,4.138,1140,4.015,1141,3.208,1142,4.015,1143,4.015,1144,4.015,1145,3.772,1146,2.601,1147,3.093,1148,3.772]],["title/components/DeviceAddComponent.html",[0,0.425,188,1.196]],["body/components/DeviceAddComponent.html",[0,0.569,1,0.82,2,1.215,3,0.097,4,0.097,5,0.86,6,0.948,7,0.903,8,0.903,9,0.085,11,0.903,12,2.834,13,2.048,15,1.547,16,2.073,17,1.273,19,1.471,21,1.401,23,0.161,24,0.19,25,1.56,27,0.635,31,1.934,37,0.251,38,0.85,40,0.722,41,0.018,42,0.379,43,0.252,44,0.765,46,0.894,47,1.655,54,3.693,64,0.904,65,0.733,68,1.266,69,0.451,70,0.596,71,0.11,72,0.043,78,0.858,79,1.544,81,0.605,86,2.385,103,0.748,106,0.683,121,1.934,129,2.374,134,0.683,164,0.86,165,1.401,166,1.401,167,0.86,168,0.903,169,0.903,170,0.783,171,1.401,172,0.748,173,0.967,174,1.401,175,0.783,176,2.014,177,0.748,178,2.094,179,0.783,180,0.783,181,0.748,182,1.401,183,0.748,184,0.748,185,0.569,186,0.783,187,0.903,188,1.602,189,1.401,190,0.748,191,0.748,192,1.028,193,0.783,194,1.401,195,0.783,196,0.748,197,0.569,198,0.748,199,0.903,200,0.86,201,0.903,202,0.748,203,1.401,204,0.748,205,0.748,206,0.779,207,0.903,208,0.903,209,0.008,210,0.008,246,5.279,277,0.783,286,1.313,296,1.082,300,2.881,301,0.575,305,1.24,317,1.16,318,1.803,319,1.896,320,2.513,327,3.498,328,3.288,329,2.888,333,2.554,337,2.832,338,2.051,339,2.051,344,1.519,345,3.244,346,2.101,347,2.005,348,1.526,352,3.819,355,2.802,364,2.554,366,0.967,367,3.244,375,1.547,379,1.413,394,2.888,395,1.322,396,1.171,397,0.948,400,0.997,403,1.806,404,1.806,408,1.138,411,3.066,414,1.646,415,3.523,416,3.523,430,0.86,431,1.16,436,1.242,437,1.171,438,0.714,439,0.652,441,0.683,442,1.108,443,1.05,444,0.82,449,3.254,452,2.051,455,1.719,472,2.227,511,3.13,575,0.997,583,1.171,587,1.547,613,0.683,645,3.434,682,2.435,683,3.84,684,2.25,736,1.108,806,2.769,816,1.413,903,1.322,1036,3.13,1132,3.365,1133,3.101,1149,6.477,1150,1.806,1151,3.84,1152,3.134,1153,4.458,1154,4.189,1155,3.819,1156,3.638,1157,3.638,1158,3.638,1159,3.638,1160,5.024,1161,5.024,1162,3.528,1163,3.84,1164,3.84,1165,3.84,1166,2.02,1167,3.638,1168,2.344,1169,3.638,1170,2.344,1171,2.344,1172,3.638,1173,2.344,1174,3.638,1175,2.344,1176,2.344,1177,2.02,1178,2.344,1179,2.02,1180,2.344,1181,2.888,1182,2.344,1183,2.02,1184,2.344,1185,2.344,1186,2.02,1187,2.344,1188,2.344,1189,2.344,1190,2.344,1191,3.523,1192,2.344,1193,2.344,1194,2.02,1195,2.344,1196,2.02,1197,2.344,1198,2.02,1199,2.02,1200,2.02,1201,2.344,1202,2.02,1203,2.344,1204,2.02,1205,2.344,1206,2.02,1207,2.344,1208,2.02,1209,2.344,1210,2.554,1211,1.646,1212,2.344,1213,1.322,1214,1.171,1215,2.02,1216,2.344,1217,1.646,1218,3.84,1219,4.458,1220,3.84,1221,4.895,1222,3.84,1223,2.344,1224,1.806,1225,2.344,1226,2.802,1227,2.344,1228,2.344,1229,2.344,1230,2.344,1231,2.344,1232,2.344,1233,3.638,1234,3.638,1235,3.638,1236,3.638,1237,2.344,1238,2.02,1239,2.344,1240,2.344,1241,4.458,1242,2.344,1243,2.344,1244,2.344,1245,2.344,1246,2.344,1247,2.344,1248,2.344,1249,2.344,1250,2.02,1251,2.344,1252,2.344,1253,3.638,1254,2.02,1255,2.344,1256,4.328,1257,3.434,1258,3.134,1259,2.02,1260,2.344,1261,2.344,1262,1.322,1263,2.02,1264,2.344,1265,2.02,1266,3.638,1267,3.638,1268,3.638,1269,2.554,1270,2.344,1271,2.344,1272,2.344,1273,2.344,1274,5.755,1275,2.344,1276,2.344,1277,2.344,1278,2.344,1279,2.344,1280,2.344,1281,2.344,1282,2.344,1283,4.328,1284,3.134,1285,3.638,1286,3.638,1287,3.638,1288,3.134,1289,2.344,1290,2.344,1291,2.344,1292,2.344,1293,2.344,1294,2.344,1295,2.344,1296,2.344,1297,2.344,1298,2.344,1299,2.344,1300,2.344]],["title/classes/DeviceCategory.html",[72,0.069,1301,2.634]],["body/classes/DeviceCategory.html",[3,0.207,4,0.207,9,0.181,23,0.181,24,0.323,25,2.354,37,0.515,38,0.702,41,0.018,42,0.389,43,0.224,64,1.03,65,0.835,71,0.289,72,0.113,78,0.895,89,3.018,107,2.927,147,2.654,197,1.216,206,0.875,209,0.014,210,0.014,293,1.929,295,1.302,327,2.824,366,1.416,529,3.517,812,2.824,813,2.824,817,3.517,837,2.503,1301,5.07,1302,3.859,1303,5.009,1304,5.009,1305,4.316,1306,5.337,1307,5.337,1308,4.316,1309,4.316,1310,2.824,1311,4.316,1312,4.316,1313,6.053,1314,4.316,1315,4.316,1316,4.316,1317,4.316,1318,3.859,1319,4.316,1320,3.859,1321,4.316,1322,3.859,1323,4.316,1324,4.316,1325,3.517,1326,3.859,1327,5.794,1328,4.316,1329,4.316,1330,4.316,1331,4.316,1332,3.859,1333,4.316,1334,4.316,1335,4.316,1336,4.316,1337,4.316,1338,3.859,1339,4.316,1340,4.316,1341,4.316,1342,4.316,1343,4.316,1344,4.316,1345,4.316,1346,4.316,1347,4.316,1348,4.316,1349,4.357,1350,5.337,1351,4.316,1352,5.337,1353,4.316]],["title/classes/DeviceCategoryDict.html",[72,0.069,327,2.115]],["body/classes/DeviceCategoryDict.html",[3,0.183,4,0.183,9,0.16,23,0.16,24,0.298,25,2.597,27,0.998,37,0.513,38,0.787,40,0.53,41,0.018,42,0.39,43,0.207,44,0.562,46,0.903,64,0.733,65,0.594,71,0.267,72,0.104,78,0.854,89,3.442,107,3.168,147,3.026,197,1.387,206,1.107,209,0.013,210,0.013,293,1.697,295,1.296,327,3.22,366,1.46,427,2.083,529,4.011,812,3.78,813,3.78,817,4.011,837,2.202,1301,5.211,1302,3.395,1305,4.921,1306,5.777,1307,5.777,1308,4.921,1309,4.921,1310,3.22,1311,4.921,1312,4.921,1313,6.326,1314,4.921,1315,4.921,1316,4.921,1317,4.921,1318,4.4,1319,4.921,1320,4.4,1321,4.921,1322,4.4,1323,4.921,1324,4.921,1325,4.011,1326,4.4,1327,6.132,1328,4.921,1329,4.921,1330,4.921,1331,4.921,1332,4.4,1333,4.921,1334,4.921,1335,4.921,1336,4.921,1337,4.921,1338,4.4,1339,4.921,1340,4.921,1341,4.921,1342,4.921,1343,4.921,1344,4.921,1345,4.921,1346,4.921,1347,4.921,1348,5.777,1349,4.106,1350,4.921,1351,4.921,1352,5.777,1353,3.797,1354,5.713,1355,4.407,1356,4.407,1357,4.407,1358,4.407,1359,4.407]],["title/components/DeviceEditComponent.html",[0,0.425,190,1.196]],["body/components/DeviceEditComponent.html",[0,0.687,1,0.841,2,1.239,3,0.1,4,0.1,5,0.882,6,0.972,7,0.925,8,0.925,9,0.087,11,0.925,12,2.843,13,2.054,16,0.803,17,1.298,19,1.499,21,1.428,23,0.164,24,0.193,25,2.034,27,0.648,31,1.96,37,0.419,38,0.843,40,0.289,41,0.018,42,0.371,43,0.242,44,0.306,46,0.686,47,1.398,49,1.26,64,0.846,65,0.741,68,1.272,69,0.462,70,0.611,71,0.112,72,0.044,78,0.874,79,1.501,81,0.846,86,1.942,102,1.201,103,0.766,106,0.7,111,1.752,121,1.96,129,2.956,143,2.07,164,0.882,165,1.428,166,1.428,167,0.882,168,0.925,169,0.925,170,0.803,171,1.428,172,0.766,173,0.98,174,1.428,175,0.803,176,2.452,177,0.766,178,2.118,179,0.803,180,1.7,181,0.766,182,1.428,183,0.766,184,0.766,185,0.583,186,0.803,187,0.925,188,0.766,189,1.428,190,1.624,191,0.766,192,1.032,193,0.803,194,1.428,195,0.803,196,0.766,197,0.583,198,0.766,199,0.925,200,1.868,201,0.925,202,0.766,203,1.428,204,0.766,205,0.766,206,0.648,207,0.925,208,0.925,209,0.008,210,0.008,229,1.557,230,1.851,251,5.237,272,1.831,286,1.119,296,1.519,300,3.079,301,0.586,305,1.26,317,1.183,318,1.831,319,1.925,320,2.552,337,2.87,339,2.09,342,1.539,345,3.415,347,2.024,348,1.539,366,0.462,367,3.101,379,1.448,394,3.297,395,1.355,396,1.201,397,0.972,400,1.022,408,0.934,410,2.402,411,3.818,429,0.841,431,0.766,438,0.732,439,0.669,441,0.7,449,3.384,452,3.277,455,1.752,472,2.262,473,2.234,476,2.933,514,1.273,515,1.355,516,1.201,517,1.273,582,2.356,599,2.058,607,1.557,613,0.7,641,1.273,674,3.765,682,2.463,684,2.713,736,1.135,743,2.728,744,3.574,746,2.933,806,2.788,823,1.076,903,1.355,952,4.508,953,3.901,982,2.856,986,1.851,989,1.448,1036,3.862,1108,2.07,1132,3.466,1133,3.276,1150,1.851,1151,3.901,1152,3.195,1154,4.237,1155,3.862,1162,3.574,1163,3.901,1164,3.901,1165,3.901,1166,2.07,1177,2.07,1179,2.07,1183,2.07,1186,2.07,1191,3.765,1194,2.07,1196,2.07,1198,2.07,1199,2.07,1200,2.07,1202,2.07,1204,2.07,1206,2.07,1208,2.07,1213,1.355,1214,1.201,1215,2.07,1217,3.179,1218,3.901,1220,4.386,1221,3.862,1222,4.386,1224,1.851,1226,1.851,1263,2.07,1269,3.574,1283,4.386,1284,3.195,1360,6.426,1361,3.901,1362,3.901,1363,6.256,1364,3.901,1365,5.09,1366,2.403,1367,3.708,1368,2.403,1369,2.403,1370,2.403,1371,2.403,1372,2.403,1373,2.403,1374,2.403,1375,3.901,1376,2.403,1377,2.403,1378,2.403,1379,2.403,1380,2.403,1381,2.403,1382,2.403,1383,2.403,1384,2.403,1385,2.403,1386,2.403,1387,2.403,1388,2.403,1389,3.195,1390,2.403,1391,2.07,1392,2.403,1393,2.403,1394,2.403,1395,2.07,1396,2.403,1397,5.813,1398,2.403,1399,2.403,1400,2.07,1401,2.403,1402,2.403,1403,2.403,1404,2.403,1405,2.07,1406,2.403,1407,2.403,1408,2.403,1409,2.403,1410,2.403,1411,2.403,1412,2.403,1413,3.574,1414,2.07,1415,2.07,1416,2.403,1417,2.403,1418,2.403,1419,2.403,1420,2.403,1421,3.708,1422,1.577,1423,2.403,1424,1.273,1425,2.403,1426,2.403,1427,2.403,1428,2.403,1429,2.403,1430,2.403,1431,3.708,1432,3.708,1433,3.708,1434,2.403,1435,2.403,1436,2.403,1437,3.708,1438,3.708,1439,3.708,1440,3.708,1441,2.403,1442,2.403,1443,2.403,1444,2.403,1445,2.403,1446,3.708,1447,2.403,1448,2.403,1449,2.403,1450,2.403,1451,3.708,1452,3.708,1453,3.708,1454,5.09,1455,3.708,1456,3.708,1457,4.528,1458,2.403,1459,2.403,1460,2.403,1461,2.403,1462,2.403,1463,2.403,1464,2.403,1465,2.403,1466,2.403,1467,2.403,1468,2.403,1469,2.403,1470,2.403,1471,2.403,1472,2.403]],["title/interfaces/DeviceInterface.html",[833,0.505,1146,2.43]],["body/interfaces/DeviceInterface.html",[3,0.187,4,0.187,9,0.164,23,0.164,24,0.303,37,0.538,41,0.018,42,0.4,43,0.245,46,0.782,49,1.784,71,0.3,72,0.106,78,0.576,99,3.615,129,3.68,134,2.171,192,1.108,209,0.013,210,0.013,286,1.303,295,0.789,296,1.74,300,3.95,309,2.257,311,3.172,338,2.547,342,1.72,375,1.921,427,2.135,574,1.827,585,2.031,586,2.547,626,2.045,787,2.023,806,2.878,816,3.497,823,3.031,833,0.912,844,1.739,855,3.075,1123,3.172,1124,4.94,1125,2.927,1126,3.172,1128,3.48,1129,4.94,1130,4.916,1131,4.94,1132,3.382,1133,3.382,1135,2.547,1136,3.172,1137,3.48,1138,3.48,1139,3.48,1141,3.075,1145,3.172,1146,3.76,1147,3.48,1148,4.076]],["title/components/DeviceListComponent.html",[0,0.425,191,1.196]],["body/components/DeviceListComponent.html",[0,0.734,1,0.939,2,1.347,3,0.111,4,0.111,5,0.984,6,1.085,7,1.033,8,1.033,9,0.097,11,1.033,12,2.881,13,2.082,15,1.715,16,1.618,17,1.411,19,1.631,21,1.553,23,0.097,24,0.21,27,0.704,31,2.074,37,0.498,38,0.822,40,0.73,41,0.018,42,0.357,43,0.251,44,0.773,46,0.909,47,1.025,49,0.746,54,1.421,64,0.96,65,0.778,68,1.257,69,0.516,70,0.682,71,0.125,72,0.049,78,0.802,79,0.594,81,0.67,86,2.163,102,3.508,103,0.856,106,0.781,121,2.074,129,1.906,164,0.984,165,1.553,166,1.553,167,0.984,168,1.033,169,1.033,170,0.896,171,1.553,172,0.856,173,1.037,174,1.553,175,0.896,176,2.124,177,0.856,178,2.224,179,0.896,180,0.896,181,0.856,182,1.553,183,0.856,184,0.856,185,0.651,186,0.896,187,1.033,188,0.856,189,1.553,190,0.856,191,1.719,192,1.091,193,0.896,194,1.553,195,0.896,196,0.856,197,0.651,198,0.856,199,1.033,200,1.977,201,1.033,202,0.856,203,1.553,204,0.856,205,0.856,206,1.179,207,1.033,208,1.033,209,0.009,210,0.009,249,5.122,272,2.454,277,1.347,281,1.617,286,1.319,295,0.469,301,0.637,305,1.607,317,1.286,318,1.959,319,2.06,340,2.567,342,1.843,346,2.203,347,2.103,348,1.6,366,0.776,397,1.085,400,1.141,408,1.113,429,0.939,431,0.856,438,0.818,439,1.122,441,1.569,444,0.939,455,1.906,475,1.617,476,3.139,477,3.139,478,2.612,484,4.151,488,3.474,491,2.067,503,1.884,505,2.886,508,1.738,509,1.738,510,1.738,512,1.738,514,1.421,515,1.513,516,1.341,517,1.421,522,0.939,525,2.612,535,0.939,538,1.513,563,2.273,564,3.474,570,2.137,578,1.421,585,1.696,613,0.781,626,0.856,657,1.738,674,4.498,682,2.413,684,2.819,723,1.268,734,3.107,736,1.268,743,2.919,744,4.261,746,2.612,757,4.642,759,4.642,866,3.742,871,3.784,903,1.513,919,2.832,952,3.784,989,2.43,1045,3.784,1067,1.884,1069,4.056,1075,2.312,1083,2.832,1154,3.107,1155,3.402,1162,3.784,1213,1.513,1214,1.341,1224,3.107,1226,2.067,1265,2.312,1325,2.832,1413,2.832,1415,2.312,1422,1.141,1424,1.421,1473,6.285,1474,6.295,1475,4.845,1476,4.174,1477,3.474,1478,4.033,1479,5.388,1480,4.033,1481,2.683,1482,3.733,1483,2.312,1484,2.312,1485,3.474,1486,2.683,1487,2.137,1488,4.033,1489,3.474,1490,3.474,1491,2.683,1492,4.033,1493,2.067,1494,4.033,1495,2.683,1496,2.683,1497,2.683,1498,2.683,1499,4.033,1500,2.683,1501,2.683,1502,4.033,1503,4.845,1504,2.683,1505,2.312,1506,1.884,1507,2.312,1508,2.683,1509,4.845,1510,2.683,1511,4.033,1512,3.474,1513,3.474,1514,2.612,1515,4.033,1516,3.474,1517,2.683,1518,2.683,1519,2.683,1520,4.033,1521,2.683,1522,2.683,1523,4.033,1524,2.683,1525,4.845,1526,2.683,1527,2.683,1528,2.683,1529,2.683,1530,2.683,1531,2.683,1532,2.683,1533,2.683,1534,2.683,1535,2.683,1536,2.683,1537,2.683,1538,2.683,1539,2.683,1540,2.683,1541,2.683,1542,4.033,1543,4.033,1544,4.033,1545,4.033,1546,4.033,1547,4.033]],["title/injectables/DeviceService.html",[216,0.953,682,1.68]],["body/injectables/DeviceService.html",[0,0.381,3,0.139,4,0.139,9,0.122,14,1.361,23,0.122,24,0.248,27,1.048,37,0.518,38,0.83,40,0.855,41,0.018,42,0.371,43,0.267,44,0.894,46,0.945,64,0.917,65,0.808,68,1.239,69,0.648,71,0.157,72,0.062,78,0.925,79,1.054,81,0.917,86,1.124,102,2.997,111,2.248,122,2.023,129,1.59,134,1.607,192,1.071,209,0.011,210,0.011,216,1.209,271,1.59,272,2.426,277,1.124,296,1.34,300,1.783,301,0.532,305,1.919,342,1.753,366,1.264,375,1.431,408,1.205,429,1.665,430,2.201,431,1.073,438,1.025,439,0.936,441,1.746,443,1.507,522,1.178,535,1.665,548,1.681,551,2.347,552,2.472,558,1.783,559,2.686,561,2.023,568,2.885,570,1.783,582,2.411,585,1.931,601,2.608,602,2.131,603,2.472,604,2.686,605,3.665,606,5.168,607,3.886,608,3.614,609,4.099,610,4.099,612,2.377,613,0.98,614,1.59,615,1.59,616,2.028,617,1.507,618,1.296,619,1.507,620,2.028,621,1.431,622,3.104,623,1.681,624,2.99,638,2.99,661,1.507,680,2.867,682,2.131,722,3.082,723,2.834,724,2.997,729,1.783,736,1.59,768,1.681,769,2.18,773,2.363,779,1.897,806,1.431,843,1.681,1122,2.899,1125,2.18,1132,1.681,1133,1.681,1257,2.592,1422,2.551,1476,4.099,1477,4.099,1485,4.099,1490,4.099,1548,2.899,1549,5.519,1550,4.758,1551,5.999,1552,4.758,1553,4.758,1554,4.758,1555,4.758,1556,4.758,1557,3.366,1558,4.758,1559,3.366,1560,3.366,1561,3.366,1562,4.758,1563,3.366,1564,4.758,1565,3.366,1566,5.519,1567,3.366,1568,4.758,1569,3.366,1570,4.758,1571,3.366,1572,3.366,1573,3.366,1574,3.366,1575,6.329,1576,3.366,1577,2.682,1578,3.366,1579,3.366,1580,3.366,1581,3.366,1582,3.366,1583,3.366,1584,3.366,1585,5.519,1586,3.366,1587,3.366,1588,3.366,1589,3.366,1590,3.366,1591,3.366,1592,3.366,1593,3.366,1594,3.366,1595,3.366,1596,2.18,1597,2.899,1598,3.366,1599,3.366,1600,3.366,1601,3.366,1602,3.366,1603,4.099,1604,4.758,1605,3.366,1606,3.366,1607,3.366]],["title/classes/DeviceType.html",[72,0.069,1608,2.43]],["body/classes/DeviceType.html",[3,0.198,4,0.198,9,0.173,23,0.173,24,0.314,25,2.671,37,0.534,38,0.746,40,0.575,41,0.018,42,0.402,43,0.25,44,0.609,47,1.215,64,0.795,65,0.644,71,0.308,72,0.11,78,0.88,79,1.751,81,0.795,192,0.856,206,0.835,209,0.014,210,0.014,293,1.841,295,1.27,301,0.951,317,1.919,328,2.533,408,0.877,626,1.525,812,2.695,813,2.695,833,0.644,834,2.695,837,2.389,839,3.097,843,2.389,1126,3.357,1349,3.097,1487,2.533,1608,4.781,1609,3.357,1610,4.265,1611,4.781,1612,4.781,1613,4.781,1614,3.683,1615,3.683,1616,3.683,1617,3.683,1618,3.683,1619,3.683,1620,3.683,1621,3.683,1622,3.683,1623,3.683,1624,3.683,1625,3.683,1626,4.635,1627,3.683,1628,3.683,1629,3.683,1630,3.683,1631,3.683,1632,3.683,1633,3.683,1634,3.683,1635,3.683,1636,3.683,1637,3.683,1638,3.683,1639,3.683,1640,3.683,1641,3.683,1642,3.683,1643,4.635,1644,4.635,1645,5.072,1646,3.683,1647,3.683]],["title/classes/DeviceTypeDict.html",[72,0.069,328,1.987]],["body/classes/DeviceTypeDict.html",[3,0.178,4,0.178,9,0.156,23,0.156,24,0.293,25,2.699,27,0.982,37,0.527,38,0.801,40,0.676,41,0.018,42,0.4,43,0.249,44,0.716,46,0.929,47,1.428,64,0.714,65,0.579,71,0.293,72,0.103,78,0.846,79,1.768,81,0.714,192,0.945,206,1.094,209,0.013,210,0.013,293,1.655,295,1.094,301,0.679,317,1.371,328,2.977,408,1.149,626,1.371,812,3.744,813,3.744,833,0.579,834,2.423,837,2.148,839,2.784,843,2.148,1349,2.784,1487,2.977,1608,4.864,1609,3.018,1610,3.641,1614,4.329,1615,4.329,1616,4.329,1617,4.329,1618,4.329,1619,4.329,1620,4.329,1621,4.329,1622,4.329,1623,4.329,1624,4.329,1625,4.329,1626,5.116,1627,4.329,1628,4.329,1629,4.329,1630,4.329,1631,4.329,1632,4.329,1633,4.329,1634,4.329,1635,4.329,1636,4.329,1637,4.329,1638,4.329,1639,4.329,1640,4.329,1641,4.329,1642,4.329,1643,4.329,1644,4.329,1645,5.116,1646,4.329,1647,4.329,1648,5.62,1649,5.62,1650,4.298,1651,4.298,1652,4.298,1653,4.298,1654,4.298,1655,4.298]],["title/interfaces/DeviceTypeInterface.html",[833,0.505,1610,2.43]],["body/interfaces/DeviceTypeInterface.html",[3,0.204,4,0.204,9,0.178,23,0.178,24,0.319,25,2.599,37,0.532,41,0.018,42,0.401,43,0.241,47,1.249,71,0.312,72,0.112,78,0.889,79,1.754,81,0.817,192,0.871,206,0.859,209,0.014,210,0.014,295,1.254,301,0.777,317,1.568,328,2.605,408,0.902,626,1.568,812,2.771,813,2.771,833,0.662,834,2.771,837,2.456,839,3.185,843,2.456,844,1.893,1349,3.185,1487,2.605,1608,4.743,1609,3.452,1610,4.32,1614,3.787,1615,3.787,1616,3.787,1617,3.787,1618,3.787,1619,3.787,1620,3.787,1621,3.787,1622,3.787,1623,3.787,1624,3.787,1625,3.787,1626,4.717,1627,3.787,1628,3.787,1629,3.787,1630,3.787,1631,3.787,1632,3.787,1633,3.787,1634,3.787,1635,3.787,1636,3.787,1637,3.787,1638,3.787,1639,3.787,1640,3.787,1641,3.787,1642,3.787,1643,4.717,1644,4.717,1645,5.137,1646,3.787,1647,3.787]],["title/interfaces/Dimension.html",[833,0.505,1656,1.772]],["body/interfaces/Dimension.html",[3,0.225,4,0.225,9,0.197,23,0.197,24,0.34,37,0.524,41,0.018,42,0.284,43,0.252,49,2.141,71,0.254,72,0.1,133,3.674,134,2.031,137,3.674,147,3.915,149,4.453,209,0.015,210,0.015,286,1.048,296,1.322,301,0.86,309,2.72,833,0.878,844,2.096,855,2.884,1656,3.416,1657,3.823,1658,4.787,1659,3.932,1660,3.926,1661,3.926,1662,3.079,1663,4.194,1664,4.194]],["title/interfaces/FloorDimension.html",[833,0.505,1665,2.634]],["body/interfaces/FloorDimension.html",[3,0.226,4,0.226,9,0.197,23,0.197,24,0.34,37,0.551,41,0.018,42,0.284,43,0.275,71,0.305,101,3.073,209,0.015,210,0.015,295,1.263,296,1.324,806,3.075,833,0.879,844,2.099,1132,3.613,1133,3.613,1656,2.576,1665,4.9,1666,4.199,1667,6.23,1668,6.23,1669,6.23,1670,4.696,1671,4.696,1672,4.696,1673,4.696,1674,4.696]],["title/components/FloorListComponent.html",[0,0.425,196,1.196]],["body/components/FloorListComponent.html",[0,0.77,1,0.965,2,1.375,3,0.114,4,0.114,5,1.012,6,1.115,7,1.061,8,1.061,9,0.1,11,1.061,12,2.89,13,2.089,15,1.75,16,1.375,17,1.44,19,1.664,21,1.585,23,0.1,24,0.215,27,0.719,31,2.103,37,0.477,38,0.834,40,0.737,41,0.018,42,0.34,43,0.258,44,0.781,46,0.899,47,1.775,49,2.026,64,1.085,65,0.88,68,1.224,69,0.531,70,0.701,71,0.129,72,0.05,79,0.912,86,2.181,88,1.936,101,3.98,103,0.879,106,0.803,121,2.103,134,1.198,164,1.012,165,1.585,166,1.585,167,1.012,168,1.061,169,1.061,170,0.921,171,1.585,172,0.879,173,1.051,174,1.585,175,0.921,176,2.285,177,0.879,178,2.25,179,0.921,180,0.921,181,0.879,182,1.585,183,0.879,184,0.879,185,0.669,186,0.921,187,1.061,188,0.879,189,1.585,190,0.879,191,0.879,192,0.392,193,0.921,194,1.585,195,0.921,196,1.742,197,1.811,198,0.879,199,1.061,200,2.004,201,1.061,202,0.879,203,1.585,204,0.879,205,0.879,206,1.021,207,1.061,208,1.061,209,0.009,210,0.009,258,5.194,272,2.208,277,0.921,301,0.65,317,1.313,318,1.991,319,2.094,340,2.609,342,1.696,346,2.223,347,2.122,348,1.614,366,0.531,397,1.115,400,1.172,408,1.165,436,2.18,437,2.056,438,0.84,439,1.145,441,1.198,443,1.843,444,0.965,455,2.581,475,1.661,476,3.19,477,3.19,478,2.666,482,4.103,502,2.375,503,1.936,505,3.063,506,1.936,508,1.786,509,1.786,510,1.786,512,1.786,514,1.461,515,1.554,516,1.377,517,1.461,522,2.145,533,3.17,535,1.724,536,2.124,538,1.554,575,1.172,578,2.18,582,1.807,613,0.803,641,2.18,643,2.375,644,2.375,652,2.48,727,1.377,778,2.124,989,2.48,1045,4.46,1047,3.794,1066,2.375,1067,1.936,1069,4.304,1070,2.375,1076,2.375,1083,2.89,1115,2.124,1422,1.75,1424,1.461,1483,2.375,1484,2.375,1493,2.124,1506,1.936,1512,3.546,1513,2.375,1656,1.945,1675,6.372,1676,4.925,1677,5.844,1678,6.352,1679,4.925,1680,4.925,1681,5.462,1682,3.546,1683,3.546,1684,4.116,1685,5.462,1686,5.462,1687,4.116,1688,4.116,1689,2.757,1690,4.304,1691,2.375,1692,3.546,1693,2.757,1694,3.546,1695,2.757,1696,4.116,1697,2.757,1698,4.116,1699,2.757,1700,4.116,1701,4.243,1702,2.757,1703,2.757,1704,2.375,1705,2.757,1706,3.546,1707,1.936,1708,2.375,1709,5.462,1710,2.757,1711,2.757,1712,4.116,1713,2.757,1714,2.375,1715,2.757,1716,4.116,1717,2.757,1718,4.116,1719,2.757,1720,2.757,1721,2.757,1722,2.757,1723,5.462,1724,4.116,1725,2.375,1726,2.757,1727,2.757,1728,2.757,1729,2.375,1730,2.757,1731,4.116,1732,4.116,1733,4.116,1734,4.116,1735,4.116,1736,4.116,1737,4.705,1738,4.116,1739,4.116,1740,4.116,1741,4.116,1742,4.116,1743,4.116,1744,4.116,1745,4.116]],["title/injectables/FloorService.html",[216,0.953,1690,2.634]],["body/injectables/FloorService.html",[3,0.13,4,0.13,9,0.113,14,1.266,23,0.113,24,0.236,27,0.789,37,0.513,38,0.812,40,0.829,41,0.018,42,0.36,43,0.259,44,0.879,46,1,64,0.751,65,0.609,68,1.265,69,0.603,70,0.796,71,0.146,72,0.057,78,0.892,79,1.421,81,0.881,101,4.444,122,1.922,206,0.926,209,0.01,210,0.01,216,1.148,295,1.155,296,0.76,301,0.714,305,1.713,342,1.972,346,2.314,347,2.209,348,1.68,366,1.347,408,1.213,430,1.658,431,0.999,439,1.615,444,1.096,522,1.582,535,1.582,548,1.565,551,2.255,552,2.375,558,1.659,559,2.6,561,1.922,563,2.548,568,2.989,570,2.394,574,1.828,575,2.469,577,2.136,578,2.394,581,2.394,582,2.674,583,2.258,585,2.155,586,2.548,587,1.922,588,3.488,590,3.205,594,3.761,595,2.928,598,2.136,599,1.828,600,2.901,601,2.136,602,2.024,603,2.375,604,2.024,612,2.258,613,0.912,614,1.48,615,1.48,616,1.887,617,1.403,618,1.206,619,1.403,620,1.887,621,1.332,622,2.743,623,1.565,624,2.743,626,2.159,638,2.743,639,2.698,641,2.394,651,2.698,652,2.723,653,3.894,655,2.199,656,2.199,657,2.029,658,2.199,659,2.199,661,1.403,662,2.698,663,1.48,665,2.698,666,2.698,671,3.482,688,2.258,689,1.887,694,3.482,701,2.258,702,2.548,768,1.565,769,2.029,781,2.413,900,2.199,901,3.174,1109,5.304,1115,3.482,1422,1.332,1577,2.548,1682,3.894,1683,3.894,1690,3.174,1692,3.894,1694,3.894,1704,2.698,1714,5.002,1729,2.698,1746,2.698,1747,4.52,1748,4.52,1749,4.52,1750,4.52,1751,4.52,1752,4.52,1753,3.132,1754,4.52,1755,4.52,1756,3.132,1757,3.132,1758,3.132,1759,3.174,1760,4.52,1761,3.132,1762,4.52,1763,3.132,1764,3.132,1765,4.52,1766,3.132,1767,4.52,1768,3.132,1769,3.132,1770,3.132,1771,4.52,1772,3.132,1773,3.132,1774,3.132,1775,3.132,1776,3.132,1777,3.132]],["title/interfaces/Floors.html",[101,2.115,833,0.505]],["body/interfaces/Floors.html",[3,0.231,4,0.231,9,0.202,23,0.202,24,0.345,37,0.546,41,0.018,42,0.38,43,0.273,71,0.309,101,3.727,209,0.015,210,0.015,295,0.975,296,1.769,695,5.094,806,2.372,833,0.891,844,2.148,1132,2.787,1133,2.787,1656,3.443,1665,5.117,1666,4.298,1667,4.806,1668,4.806,1669,4.806,1670,6.278,1671,4.806,1672,4.806,1673,4.806,1674,4.806]],["title/components/HomeComponent.html",[0,0.425,198,1.196]],["body/components/HomeComponent.html",[0,0.626,1,1.18,2,1.592,3,0.14,4,0.14,5,1.749,6,1.364,7,1.299,8,1.299,9,0.122,11,1.299,12,2.952,13,2.133,15,2.026,16,2.426,17,1.668,19,1.927,21,1.835,23,0.122,24,0.249,27,0.832,31,2.439,37,0.454,38,0.823,40,0.722,41,0.018,42,0.343,43,0.254,44,0.765,46,0.853,47,1.671,54,1.787,64,1.093,65,0.886,68,1.162,69,0.649,71,0.158,72,0.062,79,1.224,81,0.792,86,2.196,88,3.88,103,1.076,106,0.982,121,2.312,122,2.026,127,2.906,164,1.238,165,2.312,166,1.835,167,1.238,168,1.299,169,1.299,170,1.127,171,1.835,172,1.076,173,1.156,174,1.835,175,1.127,176,2.301,177,1.076,178,2.439,179,1.127,180,1.127,181,1.076,182,1.835,183,1.076,184,1.076,185,0.819,186,1.127,187,1.299,188,1.076,189,1.835,190,1.076,191,1.076,192,0.48,193,1.127,194,1.835,195,1.127,196,1.076,197,0.819,198,1.915,199,1.299,200,1.238,201,1.299,202,1.076,203,1.835,204,1.076,205,1.076,206,0.589,207,1.299,208,1.299,209,0.011,210,0.011,271,1.594,272,1.364,280,3.671,295,0.589,301,0.753,305,1.326,317,1.52,318,2.234,319,2.35,366,1.301,375,2.026,397,1.364,427,2.252,429,1.934,430,1.238,431,1.762,443,1.511,473,2.032,551,2.35,552,2.475,558,1.787,559,2.689,561,2.026,582,2.027,585,1.18,587,2.026,602,2.475,603,2.475,604,2.134,617,1.511,618,1.299,619,1.511,636,4.106,641,1.787,652,2.871,784,4.106,787,2.134,1125,3.58,1262,1.901,1413,3.346,1414,4.106,1577,1.901,1759,3.346,1778,2.906,1779,6.334,1780,4.106,1781,5.947,1782,4.765,1783,4.765,1784,4.765,1785,5.526,1786,4.765,1787,5.526,1788,5.526,1789,4.765,1790,4.765,1791,4.765,1792,6.005,1793,3.373,1794,3.373,1795,4.765,1796,3.373,1797,4.765,1798,3.373,1799,4.765,1800,3.373,1801,3.373,1802,4.765,1803,3.373,1804,3.373,1805,3.373,1806,3.373,1807,3.373,1808,3.373,1809,5.526,1810,2.906,1811,4.765,1812,5.526,1813,4.765,1814,3.373,1815,3.373,1816,3.373,1817,3.373,1818,3.373,1819,3.373,1820,3.373,1821,3.373,1822,3.373,1823,3.373,1824,3.373,1825,3.373,1826,3.373,1827,3.373,1828,3.373,1829,3.373,1830,3.373,1831,3.373,1832,3.373,1833,3.373,1834,3.373,1835,6.005,1836,2.906,1837,3.373,1838,3.373,1839,3.373,1840,3.373,1841,3.373,1842,3.373,1843,3.373,1844,4.765,1845,3.373,1846,3.373,1847,3.373,1848,3.373,1849,3.373,1850,3.373,1851,3.373,1852,3.373,1853,3.373,1854,4.765,1855,4.765,1856,4.765,1857,4.765]],["title/interfaces/Log.html",[833,0.505,1422,1.595]],["body/interfaces/Log.html",[0,0.816,3,0.127,4,0.127,9,0.111,13,0.851,14,1.236,23,0.111,24,0.232,37,0.529,40,0.368,41,0.018,42,0.232,43,0.238,44,0.732,46,0.938,52,3.586,65,0.598,68,1.053,69,0.588,71,0.268,72,0.056,78,0.931,79,1.351,81,1.057,82,1.981,111,2.099,122,1.3,134,1.671,152,2.676,173,0.855,192,0.817,197,1.078,209,0.01,210,0.01,216,1.129,271,1.445,277,1.021,286,0.855,295,0.534,296,1.394,305,1.77,342,1.924,348,0.777,366,1.224,408,0.96,429,1.554,430,1.63,431,1.417,438,2,439,1.963,441,2.027,442,2.472,459,2.877,522,1.554,535,1.554,551,1.3,552,1.369,559,1.989,561,2.441,568,2.906,574,1.236,575,1.3,577,1.445,581,1.62,582,2.75,583,1.528,584,1.842,585,2.437,587,2.441,588,3.178,590,3.047,598,1.445,599,1.796,600,1.528,601,2.713,602,1.369,603,1.989,604,1.369,608,1.842,612,2.614,613,0.89,614,1.445,615,1.445,617,1.369,618,1.177,619,1.369,621,1.3,622,2.472,623,1.528,624,2.472,626,2.25,630,1.981,638,2.472,661,2.343,663,1.445,664,3.459,688,1.528,697,1.62,701,2.868,702,3.236,712,2.676,723,3.006,724,2.219,726,1.62,727,2.868,728,2.353,730,3.719,768,1.528,779,1.724,787,2.731,819,3.459,823,2.571,833,0.705,844,1.177,933,1.724,1135,2.504,1141,1.62,1181,3.389,1262,1.724,1310,1.724,1422,3.228,1424,2.353,1487,3.814,1514,1.981,1577,1.724,1596,1.981,1662,2.099,1858,1.981,1859,4.467,1860,3.459,1861,2.147,1862,1.842,1863,2.147,1864,1.842,1865,2.147,1866,3.119,1867,2.147,1868,2.147,1869,2.147,1870,4.609,1871,2.147,1872,2.147,1873,2.147,1874,3.673,1875,2.147,1876,2.147,1877,2.147,1878,2.147,1879,2.147,1880,2.147,1881,2.147,1882,2.147,1883,2.147,1884,2.147,1885,2.147,1886,2.147,1887,2.147,1888,3.119,1889,2.147,1890,1.981,1891,3.119,1892,2.147,1893,1.981,1894,2.147,1895,3.719,1896,2.147,1897,2.147,1898,1.842,1899,2.147,1900,3.119,1901,2.147,1902,2.147,1903,2.147,1904,2.147,1905,3.673,1906,2.877,1907,1.981,1908,1.981,1909,1.724,1910,2.147,1911,2.147,1912,2.147,1913,2.147,1914,2.147,1915,1.981,1916,3.119,1917,2.147,1918,2.147]],["title/interfaces/LogIn.html",[111,1.772,833,0.505]],["body/interfaces/LogIn.html",[0,0.817,3,0.127,4,0.127,9,0.111,13,0.856,14,1.245,23,0.111,24,0.233,37,0.525,40,0.37,41,0.018,42,0.233,43,0.221,44,0.734,46,0.94,52,3.595,65,0.601,68,1.056,69,0.592,71,0.269,72,0.056,78,0.932,79,1.413,81,1.06,82,1.994,111,2.481,122,1.309,134,1.677,152,3.164,173,0.859,192,0.819,197,1.084,209,0.01,210,0.01,216,1.134,271,1.455,277,1.028,286,0.859,295,0.538,296,0.747,305,1.774,342,1.925,348,0.782,366,1.227,408,0.963,429,1.562,430,1.638,431,1.424,438,2.004,439,1.965,441,2.03,442,2.481,459,2.892,522,1.562,535,1.562,551,1.309,552,1.379,559,1.999,561,2.449,568,2.908,574,1.245,575,1.309,577,1.455,581,1.631,582,2.753,583,1.538,584,1.855,585,2.499,587,2.449,588,3.183,590,3.055,598,1.455,599,1.805,600,1.538,601,2.721,602,1.379,603,1.999,604,1.379,608,1.855,612,2.624,613,0.896,614,1.455,615,1.455,617,1.379,618,1.185,619,1.379,621,1.309,622,2.481,623,1.538,624,2.481,626,2.253,630,1.994,638,2.481,661,2.352,663,1.455,664,3.47,688,1.538,697,1.631,701,2.878,702,3.247,712,2.689,723,3.013,724,2.23,726,1.631,727,2.878,728,2.365,730,3.731,768,1.538,779,1.735,787,2.738,819,3.47,823,2.579,833,0.708,844,1.185,933,1.735,1135,2.516,1141,1.631,1181,1.994,1262,1.735,1310,1.735,1422,3.222,1424,2.782,1487,3.819,1514,1.994,1577,1.735,1596,1.994,1662,2.109,1858,1.994,1859,4.478,1860,1.855,1861,2.162,1862,1.855,1863,3.134,1864,1.855,1865,2.162,1866,3.134,1867,2.162,1868,2.162,1869,2.162,1870,4.619,1871,2.162,1872,2.162,1873,2.162,1874,3.687,1875,2.162,1876,2.162,1877,2.162,1878,2.162,1879,2.162,1880,2.162,1881,2.162,1882,2.162,1883,2.162,1884,2.162,1885,2.162,1886,2.162,1887,2.162,1888,3.134,1889,2.162,1890,1.994,1891,3.134,1892,2.162,1893,1.994,1894,2.162,1895,3.731,1896,2.162,1897,2.162,1898,1.855,1899,2.162,1900,3.134,1901,2.162,1902,2.162,1903,2.162,1904,2.162,1905,3.687,1906,2.892,1907,1.994,1908,1.994,1909,1.735,1910,2.162,1911,2.162,1912,2.162,1913,2.162,1914,2.162,1915,1.994,1916,3.134,1917,2.162,1918,2.162]],["title/interfaces/LogParameters.html",[833,0.505,1862,2.26]],["body/interfaces/LogParameters.html",[0,0.819,3,0.129,4,0.129,9,0.113,13,0.868,14,1.261,23,0.113,24,0.235,37,0.523,40,0.542,41,0.018,42,0.235,43,0.192,44,0.574,46,0.942,52,3.611,65,0.607,68,1.063,69,0.6,71,0.271,72,0.057,78,0.934,79,1.362,81,1.065,82,2.02,111,2.129,122,1.326,134,1.687,152,2.715,173,0.867,192,0.824,197,1.094,209,0.01,210,0.01,216,1.145,271,1.474,277,1.042,286,0.867,295,0.545,296,0.757,305,1.782,342,1.942,348,0.793,366,1.233,408,0.97,429,1.577,430,1.653,431,1.437,438,1.766,439,1.881,441,1.923,442,2.5,459,2.919,522,1.577,535,1.577,551,1.326,552,1.397,559,2.018,561,2.464,568,2.912,574,1.261,575,1.326,577,1.474,581,1.652,582,2.757,583,1.558,584,1.879,585,2.448,587,2.464,588,3.195,590,3.071,598,1.474,599,1.822,600,1.558,601,2.738,602,1.397,603,2.018,604,1.397,608,1.879,612,2.643,613,0.908,614,1.474,615,1.474,617,1.397,618,1.201,619,1.397,621,1.326,622,2.5,623,1.558,624,2.5,626,2.259,630,2.02,638,2.5,661,2.369,663,1.474,664,3.491,688,1.558,697,1.652,701,2.895,702,3.267,712,2.715,723,3.026,724,2.251,726,1.652,727,2.895,728,2.387,730,3.754,768,1.558,779,1.758,787,2.752,819,3.491,823,2.595,833,0.713,844,1.201,933,1.758,1135,2.54,1141,1.652,1181,2.02,1262,1.758,1310,1.758,1422,3.217,1424,2.387,1487,3.858,1514,2.02,1577,1.758,1596,2.02,1662,2.129,1858,2.02,1859,4.316,1860,1.879,1861,3.164,1862,2.715,1863,2.19,1864,1.879,1865,2.19,1866,3.164,1867,2.19,1868,2.19,1869,2.19,1870,4.637,1871,2.19,1872,2.19,1873,2.19,1874,3.715,1875,2.19,1876,2.19,1877,2.19,1878,2.19,1879,2.19,1880,2.19,1881,2.19,1882,2.19,1883,2.19,1884,2.19,1885,2.19,1886,2.19,1887,2.19,1888,3.164,1889,2.19,1890,2.02,1891,3.164,1892,2.19,1893,2.02,1894,2.19,1895,3.754,1896,2.19,1897,2.19,1898,1.879,1899,2.19,1900,3.164,1901,2.19,1902,2.19,1903,2.19,1904,2.19,1905,3.715,1906,2.919,1907,2.02,1908,2.02,1909,1.758,1910,2.19,1911,2.19,1912,2.19,1913,2.19,1914,2.19,1915,2.02,1916,3.164,1917,2.19,1918,2.19]],["title/injectables/LogService.html",[216,0.953,348,0.953]],["body/injectables/LogService.html",[0,0.783,3,0.103,4,0.103,9,0.09,13,1.056,14,1.002,23,0.09,24,0.198,27,0.663,37,0.526,38,0.799,40,0.82,41,0.018,42,0.364,43,0.255,44,0.898,46,0.991,52,3.316,64,0.767,65,0.851,68,0.949,69,0.477,71,0.242,72,0.045,78,0.905,79,1.357,81,0.978,82,2.459,89,1.492,111,2.444,122,1.614,134,1.623,152,2.287,173,0.995,192,0.837,197,0.922,209,0.009,210,0.009,216,0.964,271,1.17,277,0.827,286,0.73,295,1.131,296,0.601,301,0.391,305,1.758,342,1.936,348,0.964,366,1.294,408,1.188,429,1.328,430,1.393,431,1.211,437,1.896,438,1.699,439,1.802,441,1.925,442,2.444,459,2.459,522,1.328,535,1.328,548,1.238,551,1.962,552,2.066,558,1.312,559,2.316,561,2.604,568,2.967,574,1.535,575,1.614,577,1.793,581,2.011,582,2.774,583,1.896,584,2.287,585,2.486,587,2.502,588,3.357,590,3.303,598,1.793,599,1.535,600,1.896,601,2.635,602,1.7,603,2.066,604,1.7,608,2.78,612,2.305,613,0.721,614,1.17,615,1.17,617,1.109,618,0.954,619,1.109,621,1.053,622,2.18,623,1.238,624,2.18,626,2.145,630,1.605,638,2.18,661,2.066,663,1.17,664,3.116,680,2.287,688,1.238,697,1.312,701,3.157,702,3.561,712,2.287,723,3.06,724,2.786,726,2.011,727,2.939,728,2.954,729,1.312,730,4.093,768,1.238,779,1.396,787,2.316,819,3.69,823,2.316,833,0.622,933,1.396,1135,2.14,1141,1.312,1181,1.605,1262,1.396,1310,1.396,1422,3.256,1424,2.011,1487,3.86,1514,1.605,1577,1.396,1596,1.605,1662,1.793,1858,1.605,1859,4.3,1860,1.492,1861,1.739,1862,1.492,1863,1.739,1864,1.492,1865,1.739,1866,2.665,1867,3.24,1868,3.632,1869,1.739,1870,4.3,1871,2.665,1872,1.739,1873,1.739,1874,3.24,1875,2.665,1876,1.739,1877,1.739,1878,2.665,1879,1.739,1880,1.739,1881,2.665,1882,2.665,1883,3.632,1884,1.739,1885,2.665,1886,1.739,1887,2.665,1888,2.665,1889,1.739,1890,2.459,1891,3.632,1892,2.665,1893,1.605,1894,1.739,1895,3.35,1896,1.739,1897,1.739,1898,1.492,1899,1.739,1900,2.665,1901,1.739,1902,1.739,1903,1.739,1904,1.739,1905,3.632,1906,2.989,1907,2.459,1908,2.989,1909,2.601,1910,3.24,1911,3.24,1912,3.24,1913,3.24,1914,2.665,1915,1.605,1916,2.665,1917,1.739,1918,1.739,1919,3.796,1920,3.796,1921,3.796,1922,3.796,1923,3.796,1924,3.796,1925,3.796,1926,3.796,1927,2.477,1928,2.477,1929,2.477,1930,2.477,1931,2.477,1932,2.477,1933,2.477,1934,2.477,1935,2.477,1936,2.477,1937,2.477,1938,2.477,1939,2.477]],["title/classes/Model.html",[72,0.069,286,0.722]],["body/classes/Model.html",[3,0.223,4,0.223,9,0.194,23,0.194,24,0.337,37,0.531,38,0.835,41,0.018,42,0.362,43,0.261,49,1.93,71,0.251,72,0.098,133,3.645,134,2.019,137,3.645,147,3.425,149,3.895,209,0.015,210,0.015,286,1.244,293,2.069,296,1.684,301,1.096,309,2.685,833,0.871,855,2.847,1656,3.534,1657,3.773,1658,4.188,1659,4.216,1660,3.895,1661,3.895,1662,3.055,1663,4.139,1664,4.139,1940,6.466,1941,5.373,1942,5.373,1943,5.373]],["title/components/ModelAddComponent.html",[0,0.425,202,1.196]],["body/components/ModelAddComponent.html",[0,0.584,1,0.861,2,1.261,3,0.102,4,0.102,5,0.902,6,0.995,7,0.947,8,0.947,9,0.089,11,0.947,12,2.851,13,2.06,15,1.605,16,1.534,17,1.321,19,1.526,21,1.453,23,0.089,24,0.197,25,1.608,27,0.659,31,1.984,37,0.482,38,0.81,40,0.62,41,0.018,42,0.36,43,0.234,44,0.657,46,0.823,47,1.412,49,1.895,64,0.924,65,0.849,68,1.231,69,0.473,70,0.625,71,0.115,72,0.045,78,0.657,79,1.231,81,0.856,86,2.388,103,0.784,106,0.716,121,1.984,133,3.443,137,3.784,147,3.236,149,3.894,164,0.902,165,1.453,166,1.453,167,0.902,168,0.947,169,0.947,170,0.821,171,1.453,172,0.784,173,0.992,174,1.453,175,0.821,176,2.053,177,0.784,178,2.14,179,0.821,180,0.821,181,0.784,182,1.453,183,0.784,184,0.784,185,0.597,186,0.821,187,0.947,188,0.784,189,1.453,190,0.784,191,0.784,192,0.35,193,0.821,194,1.453,195,0.821,196,0.784,197,0.597,198,0.784,199,0.947,200,0.902,201,0.947,202,1.644,203,1.453,204,0.784,205,0.784,206,0.659,207,0.947,208,0.947,209,0.009,210,0.009,261,5.053,272,2.084,277,0.821,286,1.376,301,0.596,305,1.278,317,1.204,318,1.858,319,1.953,320,2.59,327,3.307,328,3.108,329,2.976,337,2.905,339,2.128,345,3.443,346,2.053,347,2.04,348,1.552,366,0.727,367,3.307,375,2.364,395,1.386,396,1.229,397,0.995,400,1.046,403,1.895,404,1.895,408,0.945,410,2.976,411,2.905,416,1.593,427,2.772,431,2.011,436,1.303,437,1.229,438,0.749,439,0.684,441,0.716,442,1.162,443,1.101,444,0.861,449,3.595,452,3.553,472,2.295,505,3.483,575,1.046,607,3.338,618,0.947,645,2.908,684,2.955,712,2.274,930,2.908,1210,2.651,1211,1.727,1213,1.386,1214,1.229,1217,1.727,1238,2.119,1250,2.119,1254,2.119,1257,3.539,1258,3.252,1259,2.119,1269,2.651,1288,3.252,1506,2.651,1656,1.162,1658,3.957,1659,1.386,1660,3.68,1661,3.68,1662,2.886,1915,2.445,1944,6.2,1945,1.895,1946,3.958,1947,3.252,1948,4.594,1949,6.109,1950,4.594,1951,3.775,1952,5.153,1953,3.775,1954,5.867,1955,3.775,1956,4.594,1957,2.459,1958,3.775,1959,3.775,1960,2.459,1961,3.252,1962,2.459,1963,3.775,1964,2.459,1965,2.459,1966,3.775,1967,2.119,1968,2.459,1969,2.119,1970,2.459,1971,2.119,1972,2.119,1973,2.119,1974,2.119,1975,2.119,1976,2.119,1977,2.459,1978,2.459,1979,2.459,1980,2.459,1981,2.119,1982,2.459,1983,3.958,1984,3.958,1985,3.958,1986,3.539,1987,2.459,1988,2.459,1989,2.459,1990,2.459,1991,2.459,1992,2.459,1993,2.459,1994,2.459,1995,3.775,1996,2.459,1997,2.459,1998,2.459,1999,2.459,2000,2.459,2001,2.459,2002,2.459,2003,2.459,2004,2.459,2005,2.459,2006,2.459,2007,2.459,2008,2.459,2009,3.775,2010,2.459,2011,2.459,2012,3.226,2013,2.459,2014,2.459,2015,2.459,2016,2.459,2017,1.727,2018,3.775,2019,3.775,2020,3.775,2021,3.775,2022,2.459,2023,2.459,2024,2.459,2025,2.459,2026,2.459,2027,2.459,2028,2.459,2029,2.459,2030,2.459,2031,2.459,2032,2.459,2033,2.459,2034,2.459,2035,2.459,2036,2.459,2037,2.459,2038,2.459,2039,5.867,2040,2.459,2041,2.459,2042,2.459,2043,2.459,2044,2.459,2045,2.459,2046,2.459,2047,2.459,2048,2.459,2049,3.775,2050,3.775,2051,2.459,2052,2.459,2053,2.459,2054,2.459,2055,2.459,2056,2.459,2057,2.459,2058,2.459,2059,2.459,2060,2.459,2061,2.459,2062,2.459,2063,2.459,2064,2.459,2065,2.459,2066,2.459,2067,2.459,2068,2.459,2069,2.459,2070,2.459,2071,2.459,2072,2.459,2073,2.459,2074,2.459,2075,2.459,2076,2.459]],["title/components/ModelEditComponent.html",[0,0.425,204,1.196]],["body/components/ModelEditComponent.html",[0,0.734,1,0.865,2,1.266,3,0.102,4,0.102,5,0.907,6,0.999,7,0.952,8,0.952,9,0.089,11,0.952,12,2.853,13,2.069,15,1.051,16,0.826,17,1.326,19,1.532,21,1.459,23,0.089,24,0.198,25,2.057,27,0.662,31,1.989,37,0.447,38,0.816,40,0.456,41,0.018,42,0.36,43,0.243,44,0.483,46,0.751,47,1.313,49,1.941,54,2.737,64,0.926,65,0.792,68,1.212,69,0.476,70,0.628,71,0.115,72,0.045,78,0.587,81,0.63,86,1.963,103,1.952,106,0.72,121,1.989,133,3.314,137,3.314,147,3.345,149,3.804,152,1.489,164,0.907,165,1.459,166,1.459,167,0.907,168,0.952,169,0.952,170,0.826,171,1.459,172,0.788,173,0.994,174,1.459,175,0.826,176,2.465,177,0.788,178,2.145,179,0.826,180,0.826,181,0.788,182,1.459,183,0.788,184,0.788,185,0.6,186,0.826,187,0.952,188,0.788,189,1.459,190,0.788,191,0.788,192,0.352,193,0.826,194,1.459,195,0.826,196,0.788,197,0.6,198,0.788,199,0.952,200,2.157,201,0.952,202,0.788,203,1.459,204,1.648,205,0.788,206,0.805,207,0.952,208,0.952,209,0.009,210,0.009,264,5.087,286,1.343,301,0.599,305,1.756,317,1.209,318,1.863,319,2.369,320,2.598,337,2.912,339,2.136,340,2.441,342,1.679,344,1.601,345,3.314,346,2.142,347,2.044,348,1.555,366,0.476,367,2.598,375,1.611,379,1.489,387,1.735,394,2.985,395,1.393,396,1.235,397,0.999,400,1.051,408,1.122,410,2.985,411,3.14,415,1.601,429,0.865,430,0.907,431,1.209,438,1.154,439,1.054,441,1.103,443,1.107,444,1.326,449,3.639,451,3.628,452,3.314,472,2.581,505,3.486,517,1.309,522,1.613,525,1.601,538,1.393,587,1.611,599,1.863,613,0.72,632,2.129,684,2.959,952,4.639,954,3.97,985,2.129,986,1.904,989,1.489,1036,2.661,1213,1.393,1214,1.235,1217,1.735,1269,4.128,1361,3.97,1362,3.97,1422,1.611,1597,2.129,1603,2.129,1656,1.79,1658,4.09,1659,2.136,1660,3.542,1661,3.542,1662,2.983,1945,1.904,1946,3.97,1947,3.264,1967,2.129,1969,2.129,1971,2.129,1972,2.129,1973,2.129,1974,3.264,1975,2.129,1976,2.129,1981,2.129,1983,3.97,1984,3.97,1985,3.97,1986,3.55,2017,2.661,2077,6.242,2078,3.264,2079,5.571,2080,4.608,2081,5.166,2082,4.451,2083,3.789,2084,2.472,2085,4.608,2086,3.789,2087,2.472,2088,2.472,2089,2.472,2090,2.472,2091,2.472,2092,2.472,2093,2.472,2094,2.472,2095,2.472,2096,2.472,2097,2.472,2098,2.472,2099,2.472,2100,2.472,2101,2.472,2102,2.472,2103,2.472,2104,2.472,2105,2.472,2106,2.472,2107,2.472,2108,2.472,2109,2.472,2110,3.789,2111,2.472,2112,2.472,2113,2.472,2114,2.472,2115,2.472,2116,3.789,2117,4.608,2118,2.472,2119,2.472,2120,2.472,2121,2.472,2122,2.472,2123,2.472,2124,2.472,2125,2.472,2126,2.472,2127,2.472,2128,3.789,2129,3.789,2130,2.472,2131,3.789,2132,3.789,2133,2.472,2134,2.472,2135,5.878,2136,5.064,2137,2.472,2138,2.472,2139,2.472,2140,2.472,2141,2.472,2142,2.472,2143,2.472,2144,2.472,2145,2.472,2146,2.472,2147,2.472,2148,2.472,2149,2.472,2150,2.472,2151,2.472,2152,2.472,2153,2.472,2154,2.472,2155,2.472,2156,2.472,2157,2.472,2158,2.472,2159,3.789,2160,3.789,2161,3.789,2162,2.472,2163,2.472,2164,2.472,2165,2.472,2166,2.472,2167,2.472,2168,2.472,2169,2.472,2170,2.472,2171,2.472,2172,2.472,2173,2.472,2174,2.472,2175,2.472,2176,2.472,2177,2.472,2178,2.472,2179,2.472,2180,2.472,2181,2.472,2182,2.472,2183,2.472,2184,2.472,2185,2.472,2186,2.472,2187,2.472]],["title/components/ModelsListComponent.html",[0,0.425,205,1.196]],["body/components/ModelsListComponent.html",[0,0.772,1,0.914,2,1.32,3,0.108,4,0.108,5,0.958,6,1.056,7,1.005,8,1.005,9,0.095,11,1.005,12,2.872,13,2.089,15,1.68,16,1.32,17,1.668,19,1.598,21,1.521,23,0.095,24,0.206,25,1.668,27,0.69,31,2.046,37,0.477,38,0.813,40,0.722,41,0.018,42,0.355,43,0.255,44,0.795,46,0.903,47,1.632,49,1.671,64,1.068,65,0.903,68,1.206,69,0.503,70,0.664,71,0.122,72,0.048,78,0.765,79,0.579,81,0.434,86,2.196,103,2.27,106,0.76,121,2.046,133,2.228,134,1.15,137,2.228,164,0.958,165,1.521,166,1.521,167,0.958,168,1.005,169,1.005,170,0.872,171,1.521,172,0.833,173,1.023,174,1.521,175,0.872,176,2.102,177,0.833,178,2.198,179,0.872,180,0.872,181,0.833,182,1.521,183,0.833,184,0.833,185,0.634,186,0.872,187,1.005,188,0.833,189,1.521,190,0.833,191,0.833,192,0.372,193,0.872,194,1.521,195,0.872,196,0.833,197,0.634,198,0.833,199,1.005,200,2.095,201,1.005,202,0.833,203,1.521,204,0.833,205,1.695,206,0.997,207,1.005,208,1.005,209,0.009,210,0.009,266,5.07,272,1.928,286,1.48,295,0.928,301,0.624,305,1.479,317,1.26,318,1.928,319,2.027,340,2.525,342,1.856,346,2.183,347,2.006,348,1.585,366,1.023,397,1.056,400,1.111,408,1.102,436,1.384,437,1.305,438,0.796,439,1.099,441,2.01,443,1.17,444,1.383,455,1.867,475,1.574,477,3.088,478,2.56,482,4.38,505,2.656,506,1.834,507,2.012,508,1.692,509,1.692,510,1.692,511,2.775,512,1.692,513,2.25,514,1.384,515,1.472,516,1.305,517,1.384,522,1.668,525,1.692,535,1.86,538,1.472,540,2.25,561,1.68,563,2.228,568,2.658,570,2.525,577,1.867,578,1.384,582,2.413,588,1.867,613,0.76,626,1.821,641,1.384,652,2.381,661,1.17,680,2.381,684,3.002,688,3.001,701,1.974,722,2.56,723,3.035,724,2.852,726,2.094,727,2.852,728,2.094,729,1.384,743,1.574,746,1.692,785,1.834,823,1.17,989,2.872,1045,1.834,1047,3.672,1061,2.25,1067,2.775,1083,2.775,1162,3.732,1213,1.472,1214,1.305,1391,2.25,1405,2.25,1413,2.775,1489,2.25,1493,2.012,1660,2.381,1661,2.381,1662,1.867,1691,2.25,1706,3.404,1707,1.834,1708,2.25,1895,2.56,2017,1.834,2188,6.221,2189,4.767,2190,6.238,2191,5.709,2192,5.315,2193,5.315,2194,3.404,2195,3.404,2196,3.952,2197,2.612,2198,2.612,2199,3.404,2200,2.612,2201,3.952,2202,3.404,2203,2.612,2204,3.952,2205,3.952,2206,3.952,2207,2.612,2208,3.952,2209,3.952,2210,3.404,2211,3.952,2212,3.952,2213,3.952,2214,3.952,2215,2.25,2216,3.952,2217,3.952,2218,2.612,2219,2.612,2220,2.612,2221,2.612,2222,2.612,2223,4.767,2224,2.612,2225,2.612,2226,2.612,2227,2.612,2228,2.612,2229,2.612,2230,2.612,2231,2.612,2232,4.767,2233,2.612,2234,2.612,2235,3.952,2236,3.952,2237,3.952,2238,3.952,2239,3.952,2240,3.952,2241,6.703]],["title/injectables/ModelsService.html",[216,0.953,684,1.68]],["body/injectables/ModelsService.html",[3,0.128,4,0.128,5,1.138,9,0.112,13,1.249,14,1.254,23,0.112,24,0.234,27,0.784,37,0.515,38,0.802,40,0.812,41,0.018,42,0.359,43,0.261,44,0.877,46,0.973,64,0.961,65,0.888,68,1.238,69,0.597,70,0.788,71,0.145,72,0.057,78,0.89,79,1.28,103,1.844,122,1.909,206,0.784,209,0.01,210,0.01,216,1.14,286,1.518,295,1.117,296,0.753,301,0.709,305,1.779,342,1.941,346,2.307,347,2.202,348,1.675,366,1.376,408,1.209,427,1.466,429,1.086,430,1.647,438,0.945,441,2.06,444,1.571,522,1.571,535,1.571,548,1.55,551,2.243,552,2.362,558,1.643,559,2.588,561,2.458,563,2.53,568,2.935,570,2.378,574,1.815,575,2.458,577,2.121,578,2.378,582,1.935,585,1.086,587,1.319,588,3.301,590,2.888,594,2.907,595,2.907,598,2.121,599,1.815,600,2.888,601,2.121,602,2.01,603,2.362,604,2.01,613,0.903,614,2.121,615,1.466,616,1.869,617,1.389,618,1.194,619,1.389,620,1.869,621,1.319,622,2.898,624,2.121,626,2.153,638,2.898,652,1.869,661,2.01,680,2.704,684,2.01,688,2.888,689,2.704,697,2.378,701,2.242,702,2.53,722,2.907,723,3.115,724,3.194,726,2.378,727,3.194,728,2.378,729,1.643,739,4.544,740,4.544,768,1.55,769,2.009,772,3.457,773,2.178,775,3.703,776,2.389,777,2.389,780,2.672,785,2.178,1148,3.152,1214,1.55,1256,3.867,2017,3.152,2082,3.867,2194,3.867,2195,3.867,2199,3.867,2202,3.867,2210,4.98,2242,2.672,2243,4.488,2244,4.488,2245,4.488,2246,3.102,2247,4.488,2248,3.102,2249,3.102,2250,4.488,2251,3.102,2252,3.102,2253,3.102,2254,4.488,2255,3.102,2256,3.102,2257,3.102,2258,3.102,2259,3.102,2260,3.102,2261,3.102,2262,3.102,2263,3.102,2264,3.102,2265,3.102,2266,3.102,2267,5.78,2268,3.102,2269,3.102,2270,3.102,2271,3.102,2272,2.672,2273,3.102,2274,3.102,2275,3.102,2276,3.102,2277,3.102,2278,3.102,2279,3.102,2280,3.102,2281,3.102,2282,2.672,2283,3.102,2284,3.102]],["title/interfaces/Position.html",[129,1.772,833,0.505]],["body/interfaces/Position.html",[3,0.188,4,0.188,9,0.165,23,0.165,24,0.304,37,0.529,41,0.018,42,0.395,43,0.233,46,0.785,49,2.077,71,0.301,72,0.107,78,0.579,99,3.824,129,3.655,134,2.173,192,1.106,209,0.013,210,0.013,286,1.306,295,0.794,296,1.562,300,3.802,309,2.271,311,3.191,338,2.562,342,1.724,375,1.933,427,2.148,574,1.838,585,1.591,586,2.562,626,2.051,787,2.609,806,3.103,816,3.511,823,3.038,833,0.867,844,1.75,855,3.087,1123,3.191,1124,4.954,1125,2.944,1126,3.191,1128,3.501,1129,4.954,1130,4.925,1131,5.225,1132,3.646,1133,3.646,1135,2.562,1136,3.191,1137,3.501,1138,3.501,1139,3.501,1141,3.087,1145,3.191,1146,2.944,1147,3.501,1148,4.092]],["title/guards/ResolverDevice.html",[267,2.43,2285,2.89]],["body/guards/ResolverDevice.html",[3,0.226,4,0.226,9,0.198,14,2.207,23,0.198,27,1.14,38,0.74,40,0.785,41,0.018,42,0.34,43,0.236,44,0.832,46,0.735,68,1.356,69,1.05,70,1.387,71,0.255,72,0.1,78,0.695,192,0.776,209,0.015,210,0.015,216,1.658,221,5.08,267,4.228,271,2.579,281,4.359,301,0.862,317,1.741,568,2.688,613,1.589,621,2.321,682,3.24,736,2.579,903,3.076,1482,4.204,1759,4.583,1909,3.076,2286,4.204,2287,4.702,2288,5.458,2289,5.458,2290,5.623,2291,6.233,2292,6.982,2293,5.458,2294,4.702,2295,3.832,2296,4.702,2297,5.458,2298,5.458]],["title/guards/ResolverModel.html",[268,2.43,2285,2.89]],["body/guards/ResolverModel.html",[3,0.226,4,0.226,9,0.198,14,2.207,23,0.198,27,1.14,38,0.74,40,0.785,41,0.018,42,0.34,43,0.236,44,0.832,46,0.735,68,1.356,69,1.05,70,1.387,71,0.255,72,0.1,78,0.695,209,0.015,210,0.015,216,1.658,221,5.08,268,4.228,271,2.579,281,4.359,286,1.05,301,0.862,317,1.741,568,2.688,613,1.589,621,2.321,684,3.362,1213,3.076,1214,2.727,1482,4.204,1909,3.076,2215,4.702,2286,4.204,2290,5.623,2291,6.233,2294,4.702,2295,3.832,2296,4.702,2299,4.702,2300,5.458,2301,5.458,2302,6.982,2303,5.458,2304,5.458]],["title/injectables/TemplatePageTitleStrategy.html",[216,0.953,269,2.634]],["body/injectables/TemplatePageTitleStrategy.html",[0,0.871,3,0.154,4,0.154,9,0.135,17,1.303,18,3.932,23,0.135,27,0.892,38,0.579,40,0.614,41,0.018,42,0.266,43,0.185,44,0.65,46,0.502,47,0.946,68,1.421,69,0.717,70,0.946,71,0.272,72,0.093,81,0.848,86,2.468,99,2.878,100,2.244,103,1.628,106,2.022,107,2.752,170,1.705,172,1.628,173,1.448,175,1.705,176,2.586,177,1.628,179,1.705,180,1.705,181,1.628,183,1.628,184,1.628,185,1.24,186,1.705,188,1.628,190,1.628,191,1.628,192,0.934,193,1.705,195,1.705,196,1.628,197,1.594,198,1.858,202,1.628,204,1.628,205,1.628,206,1.291,209,0.012,210,0.012,212,2.615,214,4.487,215,2.868,216,1.297,217,4.398,218,6.015,219,2.868,220,2.615,221,4.401,222,5.019,223,5.019,224,3.208,225,5.019,226,3.585,227,4.398,228,2.615,229,3.307,230,5.225,231,3.932,232,3.208,233,2.868,234,4.398,235,3.208,236,3.208,237,2.868,238,3.208,239,2.615,240,4.398,241,3.208,242,2.615,243,3.208,244,2.615,245,3.208,246,2.615,247,4.398,248,3.208,249,2.615,250,3.208,251,2.615,252,3.208,253,2.868,254,4.398,255,3.208,256,2.868,257,3.208,258,2.615,259,3.208,260,3.208,261,2.615,262,4.398,263,3.208,264,2.615,265,3.208,266,2.615,267,3.774,268,3.774,269,3.585,270,4.398,271,1.759,272,1.506,273,3.208,274,3.208,275,4.398,276,3.208,277,1.244,278,3.208,279,5.919,280,4.487,281,2.244,282,3.208,283,3.208,284,3.208,285,3.208,286,1.121,287,3.208,288,3.208,289,3.208,290,3.208,291,3.208,292,2.868,301,0.588,548,1.86,2305,5.105,2306,3.724,2307,3.724,2308,3.724,2309,3.724]],["title/interfaces/Texture.html",[833,0.505,1659,2.115]],["body/interfaces/Texture.html",[3,0.222,4,0.222,9,0.194,23,0.194,24,0.336,37,0.544,41,0.018,42,0.279,43,0.266,49,1.927,71,0.25,72,0.098,133,4.147,134,2.016,137,4.147,147,3.418,149,3.887,209,0.015,210,0.015,286,1.03,296,1.3,301,0.846,309,2.675,833,0.869,844,2.061,855,2.836,1656,3.272,1657,3.759,1658,4.179,1659,4.052,1660,4.432,1661,4.432,1662,3.476,1663,4.124,1664,4.124]],["title/classes/Tools3D.html",[72,0.069,2310,2.89]],["body/classes/Tools3D.html",[3,0.191,4,0.191,9,0.167,16,1.967,23,0.167,24,0.307,27,1.028,38,0.848,40,0.556,41,0.018,42,0.241,43,0.247,44,0.589,46,0.873,47,1.647,49,1.961,64,1.198,65,0.971,68,1.252,72,0.084,134,1.714,192,0.971,209,0.013,210,0.013,286,1.247,293,1.778,408,1.373,431,2.177,511,4.134,689,2.783,701,2.942,736,2.183,806,1.964,866,4.198,900,3.244,901,3.244,1132,2.942,1133,2.942,1155,4.551,1210,4.134,1211,3.244,1214,2.308,1221,4.134,1320,4.992,2310,4.535,2311,3.98,2312,6.481,2313,6.481,2314,6.481,2315,6.824,2316,5.888,2317,6.481,2318,4.62,2319,4.62,2320,4.62,2321,4.62,2322,4.62,2323,4.62,2324,4.62,2325,4.62,2326,4.62,2327,4.62,2328,4.62,2329,6.824,2330,5.888,2331,4.62,2332,4.62,2333,5.888,2334,5.888,2335,4.62,2336,4.62,2337,5.888,2338,4.62,2339,5.888,2340,4.62,2341,4.62,2342,5.888,2343,4.62,2344,4.62,2345,4.62]],["title/classes/UnitDictionary.html",[72,0.069,330,2.43]],["body/classes/UnitDictionary.html",[3,0.139,4,0.139,9,0.122,23,0.122,24,0.248,27,0.831,37,0.491,38,0.744,40,0.572,41,0.018,42,0.414,43,0.2,44,0.606,46,0.853,47,1.208,64,0.559,65,0.453,71,0.222,72,0.061,78,0.764,81,0.79,125,5.236,206,0.964,209,0.011,210,0.011,272,2.231,277,1.588,293,1.295,295,1.383,330,3.08,341,3.08,366,1.468,408,1.012,708,3.08,795,4.25,796,4.25,797,4.25,798,4.25,799,4.25,800,4.25,801,4.25,802,4.25,803,4.25,804,4.25,805,4.25,806,2.346,833,0.453,834,1.896,835,2.361,836,2.361,837,1.68,838,2.361,840,2.361,841,2.361,843,1.68,1707,4.612,2012,3.339,2346,2.591,2347,4.755,2348,5.166,2349,5.166,2350,5.166,2351,4.755,2352,4.925,2353,4.097,2354,5.942,2355,4.097,2356,4.097,2357,4.097,2358,4.097,2359,5.659,2360,4.097,2361,4.097,2362,4.097,2363,5.166,2364,4.097,2365,5.942,2366,5.06,2367,4.097,2368,4.097,2369,3.663,2370,4.097,2371,4.097,2372,4.097,2373,4.097,2374,4.097,2375,4.097,2376,4.097,2377,4.097,2378,4.097,2379,5.166,2380,4.097,2381,4.097,2382,4.097,2383,4.097,2384,4.097,2385,4.097,2386,5.659,2387,4.097,2388,4.097,2389,4.097,2390,4.097,2391,4.097,2392,4.097,2393,5.942,2394,4.097,2395,4.097,2396,4.097,2397,4.097,2398,4.097,2399,4.097,2400,3.363,2401,4.097,2402,3.363,2403,3.363,2404,3.363,2405,3.363,2406,4.097,2407,3.363,2408,2.897,2409,2.897]],["title/interfaces/UnitDictionaryItem.html",[833,0.505,2352,2.634]],["body/interfaces/UnitDictionaryItem.html",[3,0.175,4,0.175,9,0.153,23,0.153,24,0.29,37,0.509,41,0.018,42,0.412,43,0.201,47,1.076,71,0.26,72,0.077,78,0.841,81,0.925,125,5.113,206,0.74,209,0.013,210,0.013,272,1.712,277,1.414,295,1.378,330,2.743,341,2.743,366,1.442,408,0.777,708,3.605,795,4.286,796,4.286,797,4.286,798,4.286,799,4.286,800,4.286,801,4.286,802,4.286,803,4.286,804,4.286,805,4.286,806,2.366,833,0.57,834,2.387,835,2.973,836,2.973,837,2.115,838,2.973,840,2.973,841,2.973,843,2.115,844,1.63,1707,4.365,2012,2.973,2346,3.261,2348,3.648,2349,3.648,2350,3.648,2352,4.943,2353,3.648,2354,5.688,2355,3.648,2356,3.648,2357,3.648,2358,3.648,2359,5.355,2360,3.648,2361,3.648,2362,3.648,2363,4.794,2364,3.648,2365,5.688,2366,4.788,2367,3.648,2368,3.648,2369,3.261,2370,3.648,2371,3.648,2372,3.648,2373,3.648,2374,3.648,2375,3.648,2376,3.648,2377,3.648,2378,3.648,2379,4.794,2380,3.648,2381,3.648,2382,3.648,2383,3.648,2384,3.648,2385,3.648,2386,5.355,2387,3.648,2388,3.648,2389,3.648,2390,3.648,2391,3.648,2392,3.648,2393,5.688,2394,3.648,2395,3.648,2396,3.648,2397,3.648,2398,3.648,2399,3.648,2401,3.648,2406,3.648,2408,3.648,2409,3.648]],["title/classes/Validation.html",[72,0.069,1191,2.43]],["body/classes/Validation.html",[3,0.179,4,0.179,9,0.157,16,2.41,23,0.157,24,0.295,27,0.987,37,0.489,38,0.712,40,0.756,41,0.018,42,0.328,43,0.25,44,0.552,46,0.584,49,1.971,64,1.045,65,0.986,68,0.794,71,0.264,72,0.103,78,0.958,81,1.107,134,1.644,209,0.013,210,0.015,211,3.336,277,1.447,293,1.668,295,0.987,298,4.866,299,3.966,300,2.992,305,2.007,396,2.164,472,2.164,505,2.822,582,2.306,605,3.336,607,4.674,626,1.801,646,4.866,743,2.61,746,2.806,982,5.457,1191,4.589,1262,3.184,1318,4.351,1364,5.415,1375,6.373,1389,5.415,1395,3.732,1898,2.61,1961,3.732,2136,3.732,2410,3.732,2411,6.908,2412,6.285,2413,4.331,2414,4.331,2415,5.648,2416,6.285,2417,4.331,2418,4.331,2419,4.331,2420,4.331,2421,4.331,2422,4.331,2423,4.331,2424,4.331,2425,4.331,2426,5.648,2427,4.331,2428,4.331,2429,5.648,2430,4.331,2431,4.331,2432,4.331,2433,4.331,2434,4.331,2435,3.732,2436,4.331,2437,4.331,2438,5.648,2439,5.648,2440,4.331,2441,4.331]],["title/coverage.html",[2442,4.42]],["body/coverage.html",[0,0.877,1,1.379,9,0.143,10,3.396,41,0.018,43,0.143,72,0.137,79,0.873,101,2.222,106,1.545,111,1.862,129,1.862,134,2.295,170,1.317,172,1.257,173,1.289,175,1.317,177,1.257,179,1.317,180,1.317,181,1.257,183,1.257,184,1.257,185,0.957,186,1.317,188,1.257,190,1.257,191,1.257,192,0.561,193,1.317,195,1.317,196,1.257,198,1.257,200,1.446,202,1.257,204,1.257,205,1.257,209,0.012,210,0.012,214,3.036,215,3.036,216,1.821,226,3.726,228,2.768,229,3.437,231,4.087,233,3.036,237,3.036,239,2.768,242,2.768,244,2.768,246,2.768,249,2.768,251,2.768,253,3.036,256,3.036,258,2.768,261,2.768,264,2.768,266,2.768,267,2.553,268,2.553,269,2.768,286,0.759,294,3.396,315,4.621,316,4.571,325,2.553,326,2.222,327,2.222,328,2.088,330,2.553,348,1.002,369,2.375,431,1.692,475,4.156,549,3.396,550,3.396,618,2.043,667,3.036,668,3.396,682,1.765,684,1.765,786,3.396,809,4.087,815,2.768,833,1.011,845,4.087,849,2.768,861,3.396,862,4.087,873,2.375,951,3.396,1042,3.396,1069,2.768,1092,3.396,1123,4.212,1130,2.768,1146,2.553,1149,3.396,1150,4.087,1191,2.553,1221,3.726,1301,2.768,1302,4.087,1360,3.396,1422,1.676,1473,3.396,1548,3.396,1608,2.553,1609,4.212,1610,2.553,1656,1.862,1657,4.212,1659,2.222,1665,2.768,1666,4.087,1675,3.396,1690,2.768,1746,3.396,1778,3.396,1858,4.157,1862,2.375,1944,3.396,1945,4.087,1986,3.036,2077,3.396,2188,3.396,2242,3.396,2285,4.087,2287,3.396,2299,3.396,2310,3.036,2311,3.396,2346,4.087,2352,2.768,2410,3.396,2442,3.396,2443,3.942,2444,3.942,2445,7.049,2446,3.942,2447,3.942,2448,3.942,2449,3.942,2450,5.306,2451,6.417,2452,3.942,2453,3.942,2454,5.306,2455,3.942,2456,3.942,2457,3.942,2458,3.942,2459,3.942,2460,3.942,2461,5.306,2462,3.942,2463,3.942,2464,3.942,2465,5.306,2466,3.942,2467,3.942,2468,3.942,2469,3.942,2470,3.942,2471,3.942,2472,3.942,2473,3.942,2474,3.942,2475,3.942,2476,3.942,2477,3.942,2478,3.942,2479,3.942,2480,3.942,2481,3.942,2482,3.942,2483,3.942,2484,3.942,2485,3.942,2486,3.942,2487,5.998,2488,5.998,2489,5.306,2490,3.942,2491,3.942,2492,3.942,2493,3.942,2494,5.306,2495,5.306,2496,3.942,2497,3.942,2498,3.942,2499,3.942,2500,5.306,2501,3.942,2502,3.942,2503,5.306,2504,5.306,2505,5.998,2506,3.942,2507,3.396,2508,5.306,2509,5.306,2510,3.396,2511,3.942,2512,3.942]],["title/dependencies.html",[2513,2.694,2514,3.478]],["body/dependencies.html",[41,0.018,69,0.957,70,1.263,124,3.829,209,0.014,210,0.014,219,5.163,220,4.329,279,3.829,396,2.483,397,2.01,514,2.633,515,2.802,516,3.349,584,2.995,598,2.349,613,1.447,697,2.633,1210,3.49,1211,3.49,1810,4.282,1836,4.282,1860,2.995,1898,2.995,2514,3.829,2515,4.971,2516,7.582,2517,4.971,2518,4.971,2519,4.971,2520,4.971,2521,4.971,2522,4.971,2523,4.971,2524,4.971,2525,4.971,2526,4.971,2527,4.971,2528,4.971,2529,4.971,2530,7.204,2531,4.971,2532,4.971,2533,4.971,2534,4.971,2535,4.971,2536,4.971,2537,4.971,2538,4.971,2539,4.971,2540,4.971,2541,4.971,2542,4.971,2543,4.971,2544,4.282,2545,4.971,2546,4.971,2547,4.971,2548,4.971,2549,4.971,2550,4.971,2551,4.971,2552,4.282,2553,4.971,2554,4.971,2555,4.971,2556,4.971,2557,4.971,2558,4.971,2559,4.971,2560,4.971,2561,4.971,2562,4.282,2563,4.971,2564,4.971,2565,4.971,2566,6.165,2567,4.971,2568,4.971,2569,4.971,2570,4.971,2571,4.282,2572,4.971,2573,4.971,2574,4.971,2575,4.971,2576,4.971,2577,4.971,2578,4.971,2579,4.971,2580,4.971,2581,4.971,2582,6.165,2583,4.971,2584,4.971,2585,4.282,2586,4.971,2587,6.165,2588,4.971,2589,6.165,2590,4.971,2591,4.971,2592,4.971,2593,4.971,2594,4.971,2595,4.971,2596,4.971,2597,4.971,2598,4.971,2599,4.971]],["title/index.html",[23,0.113,2600,2.694,2601,2.694]],["body/index.html",[38,0.658,40,0.543,41,0.016,72,0.083,87,3.48,89,3.497,99,4.039,100,4.492,102,3.382,103,2.233,104,4.384,106,2.038,107,3.198,173,1.379,206,1.014,209,0.013,210,0.013,220,3.172,286,1.42,366,1.402,514,2.393,516,2.257,529,3.172,535,1.581,574,1.827,599,1.827,663,2.743,719,3.892,743,2.722,833,0.609,933,3.272,1145,4.076,1322,3.48,1326,3.48,1400,5.001,1424,2.393,1516,3.892,1725,3.892,1759,4.503,1780,3.892,1781,3.892,1864,2.722,1908,3.76,1909,3.272,2012,3.172,2272,3.892,2282,5.001,2435,3.892,2552,3.892,2562,5.001,2571,5.831,2585,3.892,2602,5.804,2603,5.804,2604,5.804,2605,5.804,2606,5.804,2607,5.804,2608,6.768,2609,5.804,2610,5.804,2611,5.001,2612,4.471,2613,6.768,2614,4.518,2615,4.518,2616,4.518,2617,5.525,2618,4.518,2619,5.001,2620,4.518,2621,4.518,2622,4.518,2623,4.518,2624,4.518,2625,4.518,2626,4.518,2627,4.518,2628,4.518,2629,4.518,2630,4.518,2631,4.518,2632,4.518,2633,4.518,2634,6.768,2635,6.768,2636,7.001,2637,6.413,2638,4.518,2639,5.804,2640,4.518,2641,4.518,2642,5.804,2643,4.518,2644,4.518,2645,4.518,2646,4.518,2647,4.518,2648,3.892,2649,4.518,2650,4.518,2651,4.518,2652,5.804,2653,3.892,2654,6.413,2655,6.413,2656,4.518,2657,4.518,2658,4.518,2659,4.518,2660,4.518,2661,5.804,2662,4.518,2663,4.518,2664,4.518,2665,4.518,2666,4.518,2667,4.518,2668,4.518,2669,3.892,2670,4.518,2671,4.518,2672,4.518,2673,4.518,2674,4.518,2675,4.518,2676,4.518,2677,4.518,2678,4.518,2679,4.518,2680,4.518,2681,4.518,2682,4.518,2683,4.518,2684,4.518,2685,4.518,2686,4.518,2687,4.518,2688,4.518,2689,5.804,2690,4.518,2691,4.518,2692,4.518,2693,4.518,2694,4.518,2695,4.518,2696,4.518,2697,4.518,2698,4.518,2699,4.518,2700,4.518,2701,4.518,2702,4.518,2703,4.518,2704,4.518,2705,4.518,2706,4.518,2707,4.518,2708,4.518,2709,4.518,2710,4.518,2711,4.518,2712,4.518,2713,3.892,2714,3.892,2715,3.892]],["title/license.html",[2600,2.694,2601,2.694,2612,2.409]],["body/license.html",[25,2.09,38,0.377,41,0.011,49,1.314,89,2.007,110,2.87,115,6.184,136,2.87,167,1.733,209,0.011,210,0.011,218,2.566,366,0.641,429,1.166,442,1.574,449,1.664,472,1.664,473,2.846,566,4.069,642,4.069,663,1.574,775,2.339,789,2.87,821,2.566,934,2.566,1136,3.316,1141,2.502,1310,3.366,1325,2.339,1332,4.856,1338,2.566,1506,3.316,1701,4.069,1737,2.87,1860,2.007,1864,4.325,1890,3.06,1893,2.158,1906,2.158,1907,3.06,2295,2.339,2366,3.638,2369,2.566,2544,5.144,2611,2.87,2612,5.044,2617,2.87,2619,4.069,2653,6.029,2669,2.87,2713,5.801,2714,5.927,2715,5.431,2716,6.734,2717,3.331,2718,3.331,2719,3.331,2720,6.88,2721,3.331,2722,4.723,2723,6.304,2724,3.331,2725,3.331,2726,5.488,2727,3.331,2728,5.488,2729,5.488,2730,3.331,2731,6.734,2732,6.304,2733,3.331,2734,5.488,2735,3.331,2736,3.331,2737,3.331,2738,3.331,2739,6.88,2740,3.331,2741,3.331,2742,4.723,2743,4.723,2744,3.331,2745,3.331,2746,4.723,2747,7.618,2748,4.723,2749,3.331,2750,3.331,2751,3.331,2752,5.971,2753,4.723,2754,7.691,2755,3.331,2756,5.488,2757,3.331,2758,4.723,2759,3.331,2760,4.723,2761,3.331,2762,5.488,2763,4.723,2764,4.723,2765,3.331,2766,6.734,2767,3.331,2768,3.331,2769,5.971,2770,4.723,2771,3.331,2772,3.331,2773,4.723,2774,3.331,2775,3.331,2776,3.331,2777,5.488,2778,6.304,2779,6.304,2780,5.488,2781,3.331,2782,3.331,2783,3.331,2784,4.723,2785,3.331,2786,4.723,2787,2.87,2788,3.331,2789,3.331,2790,3.331,2791,5.488,2792,3.331,2793,3.331,2794,3.331,2795,3.331,2796,3.331,2797,3.331,2798,3.331,2799,3.331,2800,4.723,2801,3.331,2802,7.178,2803,6.304,2804,3.331,2805,3.331,2806,4.723,2807,3.331,2808,4.723,2809,6.734,2810,3.331,2811,3.331,2812,3.331,2813,3.331,2814,3.331,2815,3.331,2816,3.331,2817,3.331,2818,3.331,2819,3.331,2820,3.331,2821,3.331,2822,3.331,2823,3.331,2824,3.331,2825,3.331,2826,3.331,2827,5.971,2828,3.331,2829,3.331,2830,3.331,2831,3.331,2832,5.488,2833,3.331,2834,3.331,2835,3.331,2836,4.723,2837,3.331,2838,3.331,2839,3.331,2840,5.488,2841,4.723,2842,3.331,2843,3.331,2844,3.331,2845,3.331,2846,4.723,2847,3.331,2848,3.331,2849,3.331,2850,3.331,2851,3.331,2852,3.331,2853,3.331,2854,3.331,2855,3.331,2856,3.331,2857,3.331,2858,3.331,2859,3.331,2860,3.331,2861,3.331,2862,4.723,2863,3.331,2864,5.488,2865,3.331,2866,3.331,2867,2.87,2868,3.331,2869,3.331,2870,3.331,2871,3.331,2872,6.734,2873,5.488,2874,3.331,2875,6.734,2876,4.723,2877,4.723,2878,3.331,2879,5.488,2880,3.331,2881,4.723,2882,3.331,2883,3.331,2884,3.331,2885,3.331,2886,3.331,2887,6.548,2888,5.488,2889,5.971,2890,3.331,2891,3.331,2892,3.331,2893,6.304,2894,4.723,2895,4.723,2896,5.488,2897,4.723,2898,4.723,2899,4.723,2900,4.723,2901,4.723,2902,4.723,2903,3.331,2904,3.331,2905,3.331,2906,3.331,2907,3.331,2908,3.331,2909,3.331,2910,5.971,2911,3.331,2912,3.331,2913,3.331,2914,3.331,2915,3.331,2916,3.331,2917,3.331,2918,3.331,2919,3.331,2920,5.488,2921,4.723,2922,5.488,2923,4.723,2924,4.723,2925,3.331,2926,3.331,2927,3.331,2928,3.331,2929,3.331,2930,4.723,2931,3.331,2932,5.971,2933,3.331,2934,3.331,2935,3.331,2936,3.331,2937,4.723,2938,3.331,2939,3.331,2940,3.331,2941,3.331,2942,3.331,2943,3.331,2944,3.331,2945,3.331,2946,3.331,2947,3.331,2948,4.723,2949,3.331,2950,3.331,2951,3.331,2952,3.331,2953,3.331,2954,3.331,2955,3.331,2956,3.331,2957,3.331,2958,3.331,2959,3.331,2960,3.331,2961,3.331,2962,3.331,2963,3.331,2964,3.331,2965,3.331,2966,3.331,2967,4.723,2968,3.331,2969,3.331,2970,3.331,2971,3.331,2972,3.331,2973,3.331,2974,3.331,2975,3.331,2976,4.723,2977,3.331,2978,3.331,2979,3.331,2980,3.331,2981,3.331,2982,3.331,2983,3.331,2984,3.331,2985,3.331,2986,3.331]],["title/modules.html",[213,3.952]],["body/modules.html",[41,0.016,209,0.016,210,0.016,212,4.318,213,4.737,2295,4.318,2648,5.298,2987,6.149]],["title/overview.html",[2988,4.42]],["body/overview.html",[2,2.002,41,0.016,164,2.199,209,0.016,210,0.016,211,5.311,292,4.617,293,2.308,431,1.912,505,2.995,516,2.995,548,2.995,844,2.308,1505,5.164,1507,5.164,2078,5.164,2286,4.617,2514,4.617,2988,5.164,2989,5.994,2990,6.895,2991,5.994,2992,5.994,2993,6.895]],["title/properties.html",[24,0.235,2513,2.694]],["body/properties.html",[24,0.321,41,0.017,209,0.016,210,0.016,2867,5.305,2994,6.158]],["title/miscellaneous/variables.html",[2995,2.694,2996,3.89]],["body/miscellaneous/variables.html",[16,1.973,23,0.214,41,0.018,43,0.248,64,1.136,65,0.921,209,0.016,210,0.016,375,2.512,551,2.908,585,2.393,618,2.857,2507,5.09,2510,5.09,2787,5.891,2995,5.09,2996,5.09,2997,5.908,2998,5.908,2999,5.908,3000,5.908]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["0.0.3",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":2590,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["0.11.10",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["0.15.1",{"_index":2599,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["0.41.7",{"_index":2994,"title":{},"body":{"properties.html":{}}}],["0.4s",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2509,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2495,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2506,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":505,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"classes/Validation.html":{},"overview.html":{}}}],["1.0",{"_index":2717,"title":{},"body":{"license.html":{}}}],["1.0.0",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["1.1.26",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["1.13.1",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["1.30.0",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["1/13",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2491,"title":{},"body":{"coverage.html":{}}}],["1/34",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["1/36",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2504,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":511,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelsListComponent.html":{},"classes/Tools3D.html":{}}}],["10/16",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2501,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2857,"title":{},"body":{"license.html":{}}}],["11.2.0",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["11.9.1",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2496,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":2993,"title":{},"body":{"overview.html":{}}}],["13/17",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["163",{"_index":2646,"title":{},"body":{"index.html":{}}}],["18.0.1",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["18/47",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":2640,"title":{},"body":{"index.html":{}}}],["19.0.0",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":2859,"title":{},"body":{"license.html":{}}}],["1px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":431,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/Tools3D.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.12",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1221,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"classes/Tools3D.html":{},"coverage.html":{}}}],["20.0.0",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["20.0.4",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["22",{"_index":2991,"title":{},"body":{"overview.html":{}}}],["25",{"_index":2503,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1446,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["26.1.0",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["26px",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["2px",{"_index":1460,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["3.0.0",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["3.17.0",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["30.0.2",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["35",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1114,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["38",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{}}}],["4",{"_index":1269,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["4(a",{"_index":2848,"title":{},"body":{"license.html":{}}}],["4.1.0",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2330,"title":{},"body":{"classes/Tools3D.html":{}}}],["4px",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":1069,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"coverage.html":{}}}],["5.1.0",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["5.3",{"_index":2643,"title":{},"body":{"index.html":{}}}],["5.3.7",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["5/51",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["58",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":451,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["6.0.1",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["6.17.0",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["6/17",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["7.0.2",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["7.8.2",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["76",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2992,"title":{},"body":{"overview.html":{}}}],["8.4.0",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["8/12",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2502,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1986,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"coverage.html":{}}}],["9.0.0",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["9.8.0",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["96/9/ec",{"_index":2853,"title":{},"body":{"license.html":{}}}],["9a9aa7",{"_index":1090,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["_blank",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["_id",{"_index":296,"title":{},"body":{"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeDictionaryService.html":{},"classes/AttributesDictionary.html":{},"classes/Connection.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}}}],["_renderer",{"_index":1850,"title":{},"body":{"components/HomeComponent.html":{}}}],["_result",{"_index":1566,"title":{},"body":{"injectables/DeviceService.html":{}}}],["_state",{"_index":2292,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["abandoned",{"_index":2955,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":2885,"title":{},"body":{"license.html":{}}}],["absence",{"_index":2967,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":982,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["accept",{"_index":605,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{},"classes/Validation.html":{}}}],["access",{"_index":606,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{}}}],["accessors",{"_index":339,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["account",{"_index":2927,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":2970,"title":{},"body":{"license.html":{}}}],["acknowledged",{"_index":2270,"title":{},"body":{"injectables/ModelsService.html":{}}}],["acknowledges",{"_index":2983,"title":{},"body":{"license.html":{}}}],["action",{"_index":2889,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":952,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":2291,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["actual_component",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["adapt",{"_index":2822,"title":{},"body":{"license.html":{}}}],["add",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["addattributedictionaryform",{"_index":323,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["addconnectionform",{"_index":865,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get('name')?.dirty",{"_index":931,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get('name')?.errors?.['minlength",{"_index":929,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get('name')?.errors?.['required",{"_index":928,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get('name')?.invalid",{"_index":927,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get('name')?.touched",{"_index":932,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get(\\'name\\')?.dirty",{"_index":948,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get(\\'name\\')?.errors?.[\\'minlength",{"_index":947,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get(\\'name\\')?.errors?.[\\'required",{"_index":946,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get(\\'name\\')?.invalid",{"_index":945,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["addconnectionform.get(\\'name\\')?.touched",{"_index":949,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["adddeviceform",{"_index":1153,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.controls.modelid.errors",{"_index":1285,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.controls.modelid.errors.required",{"_index":1286,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.controls.name.errors",{"_index":1266,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.controls.name.errors.minlength",{"_index":1268,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.controls.name.errors.required",{"_index":1267,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.h')?.errors",{"_index":1279,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.h')?.errors?.max",{"_index":1282,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.h')?.errors?.min",{"_index":1281,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.h')?.errors?.required",{"_index":1280,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.x')?.errors",{"_index":1270,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.x')?.errors?.max",{"_index":1273,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.x')?.errors?.min",{"_index":1272,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.x')?.errors?.required",{"_index":1271,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.y')?.errors",{"_index":1275,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.y')?.errors?.max",{"_index":1278,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.y')?.errors?.min",{"_index":1277,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get('position.y')?.errors?.required",{"_index":1276,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.h\\')?.errors",{"_index":1297,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.h\\')?.errors?.max",{"_index":1300,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.h\\')?.errors?.min",{"_index":1299,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.h\\')?.errors?.required",{"_index":1298,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.x\\')?.errors",{"_index":1289,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.x\\')?.errors?.max",{"_index":1292,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.x\\')?.errors?.min",{"_index":1291,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.x\\')?.errors?.required",{"_index":1290,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.y\\')?.errors",{"_index":1293,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.y\\')?.errors?.max",{"_index":1296,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.y\\')?.errors?.min",{"_index":1295,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.get(\\'position.y\\')?.errors?.required",{"_index":1294,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["adddeviceform.status",{"_index":1287,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["addfloor",{"_index":1681,"title":{},"body":{"components/FloorListComponent.html":{}}}],["addform",{"_index":484,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["addition",{"_index":2928,"title":{},"body":{"license.html":{}}}],["additional",{"_index":2797,"title":{},"body":{"license.html":{}}}],["addmodel",{"_index":2193,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["addmodelform",{"_index":1948,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.get('dimension.width')?.errors?.pattern",{"_index":2026,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.get('texture.bottom')?.errors?.minlength",{"_index":2048,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.get(\\'dimension.width\\')?.errors?.pattern",{"_index":2055,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.get(\\'texture.bottom\\')?.errors?.minlength",{"_index":2076,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["addmodelform.value",{"_index":2049,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["address",{"_index":1670,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["advertising",{"_index":2901,"title":{},"body":{"license.html":{}}}],["affected",{"_index":2930,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":2802,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":2887,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2945,"title":{},"body":{"license.html":{}}}],["against",{"_index":2842,"title":{},"body":{"license.html":{}}}],["alias",{"_index":2693,"title":{},"body":{"index.html":{}}}],["allow",{"_index":608,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["allows",{"_index":2616,"title":{},"body":{"index.html":{}}}],["amended",{"_index":2865,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2756,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2636,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":397,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":617,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["angular/compiler",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":396,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["angular/router",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["any).id",{"_index":1259,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["any).insertedid",{"_index":1258,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["any)?.status",{"_index":2281,"title":{},"body":{"injectables/ModelsService.html":{}}}],["api",{"_index":1759,"title":{},"body":{"injectables/FloorService.html":{},"components/HomeComponent.html":{},"guards/ResolverDevice.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{}}}],["applicable",{"_index":2872,"title":{},"body":{"license.html":{}}}],["application",{"_index":1909,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"index.html":{}}}],["application/json",{"_index":604,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["applied",{"_index":2940,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2806,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":529,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"index.html":{}}}],["approutingmodule",{"_index":212,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"modules.html":{}}}],["architecture",{"_index":2603,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2852,"title":{},"body":{"license.html":{}}}],["array",{"_index":701,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Tools3D.html":{}}}],["arrow",{"_index":1392,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["assert",{"_index":2947,"title":{},"body":{"license.html":{}}}],["assign",{"_index":2230,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["associated",{"_index":1141,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"interfaces/Position.html":{},"license.html":{}}}],["associating",{"_index":2801,"title":{},"body":{"license.html":{}}}],["async",{"_index":674,"title":{},"body":{"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["asynchronously",{"_index":704,"title":{},"body":{"injectables/AttributeService.html":{}}}],["atleastonevalidator",{"_index":2411,"title":{},"body":{"classes/Validation.html":{}}}],["attorney",{"_index":2724,"title":{},"body":{"license.html":{}}}],["attr",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["attribute",{"_index":173,"title":{"classes/Attribute.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"index.html":{}}}],["attribute'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["attribute._id",{"_index":544,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attribute.component",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["attribute.component.ts",{"_index":2454,"title":{},"body":{"coverage.html":{}}}],["attribute.componentname",{"_index":545,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attribute.name",{"_index":543,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attribute.type",{"_index":546,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attribute.unit",{"_index":547,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attribute/:id",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["attribute/add",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attribute/attribute",{"_index":1390,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["attribute/edit",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributeaddcomponent",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributecomponent",{"_index":1361,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["attributecomponentid",{"_index":1867,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["attributecomponentobject",{"_index":1362,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["attributedictionary",{"_index":324,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionaryaddcomponent",{"_index":172,"title":{"components/AttributeDictionaryAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributedictionaryeditcomponent",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributedictionaryid",{"_index":297,"title":{},"body":{"classes/Attribute.html":{},"components/ConnectionEditComponent.html":{}}}],["attributedictionarylist",{"_index":479,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionarylist.length",{"_index":542,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionarylistcomponent",{"_index":177,"title":{"components/AttributeDictionaryListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributedictionarypage",{"_index":480,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributedictionaryservice",{"_index":325,"title":{"injectables/AttributeDictionaryService.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"coverage.html":{}}}],["attributeeditcomponent",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributeid",{"_index":497,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["attributelistcomponent",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["attributes",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"index.html":{}}}],["attributes.push",{"_index":762,"title":{},"body":{"injectables/AttributeService.html":{}}}],["attributes/device",{"_index":748,"title":{},"body":{"injectables/AttributeService.html":{}}}],["attributes/model",{"_index":751,"title":{},"body":{"injectables/AttributeService.html":{}}}],["attributesdictionary",{"_index":369,"title":{"classes/AttributesDictionary.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"classes/AttributesDictionary.html":{},"coverage.html":{}}}],["attributesdictionary).subscribe",{"_index":649,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["attributeservice",{"_index":667,"title":{"injectables/AttributeService.html":{}},"body":{"injectables/AttributeService.html":{},"coverage.html":{}}}],["author(s",{"_index":2830,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":2755,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":2744,"title":{},"body":{"license.html":{}}}],["available",{"_index":2295,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"license.html":{},"modules.html":{}}}],["await",{"_index":744,"title":{},"body":{"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["awesome",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":2369,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"license.html":{}}}],["back",{"_index":1661,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["backend",{"_index":644,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/FloorListComponent.html":{}}}],["background",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["balancer",{"_index":1622,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["based",{"_index":2669,"title":{},"body":{"index.html":{},"license.html":{}}}],["baseurl",{"_index":551,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":2727,"title":{},"body":{"license.html":{}}}],["before",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["below",{"_index":2748,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":2903,"title":{},"body":{"license.html":{}}}],["best",{"_index":2647,"title":{},"body":{"index.html":{}}}],["bettween",{"_index":1274,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["between",{"_index":822,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["bind",{"_index":1845,"title":{},"body":{"components/HomeComponent.html":{}}}],["binding",{"_index":1848,"title":{},"body":{"components/HomeComponent.html":{}}}],["bit",{"_index":2379,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["body",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["body.setattribute('data",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":427,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"classes/AttributesDictionary.html":{},"components/ConnectionListComponent.html":{},"classes/Device.html":{},"classes/DeviceCategoryDict.html":{},"interfaces/DeviceInterface.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{}}}],["bootstrap",{"_index":516,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":515,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{},"dependencies.html":{}}}],["border",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/DeviceEditComponent.html":{}}}],["both",{"_index":2435,"title":{},"body":{"classes/Validation.html":{},"index.html":{}}}],["bottom",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["box",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":2987,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["browserify",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["bs",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":2617,"title":{},"body":{"index.html":{},"license.html":{}}}],["buildcontainers",{"_index":2694,"title":{},"body":{"index.html":{}}}],["building",{"_index":1326,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"index.html":{}}}],["buildings",{"_index":1314,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["byte",{"_index":2370,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["c",{"_index":2975,"title":{},"body":{"license.html":{}}}],["call",{"_index":1115,"title":{},"body":{"injectables/ConnectionService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["calling",{"_index":2209,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["cancellation",{"_index":2913,"title":{},"body":{"license.html":{}}}],["carriers",{"_index":1311,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["case",{"_index":1907,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"license.html":{}}}],["cases",{"_index":1323,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["catch",{"_index":746,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{},"classes/Validation.html":{}}}],["catcherror",{"_index":614,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["catcherror(this.errorhandl",{"_index":1109,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["catcherror(this.errorhandler",{"_index":625,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["catcherror(this.handleerror",{"_index":1870,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["catcherror(this.handleerrortemplate('clonemodel",{"_index":2275,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('createattribute",{"_index":770,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('createconnection",{"_index":1111,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["catcherror(this.handleerrortemplate('createdevice",{"_index":1582,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('createlog",{"_index":1599,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('deleteattribute",{"_index":767,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('deleteconnection",{"_index":1110,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["catcherror(this.handleerrortemplate('deletedevice",{"_index":1581,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('deletemodel",{"_index":2262,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('getdeviceattributes",{"_index":741,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('getdeviceattributespromise",{"_index":749,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('getdevices",{"_index":1576,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('getdevicesynchro",{"_index":1580,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('getmodel",{"_index":2261,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('getmodelattributes",{"_index":752,"title":{},"body":{"injectables/AttributeService.html":{}}}],["catcherror(this.handleerrortemplate('getmodels",{"_index":2259,"title":{},"body":{"injectables/ModelsService.html":{}}}],["catcherror(this.handleerrortemplate('postdevice",{"_index":1607,"title":{},"body":{"injectables/DeviceService.html":{}}}],["catcherror(this.handleerrortemplate('updateconnection",{"_index":1120,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["catcherror(this.handleerrortemplate('updatelog",{"_index":1889,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["catcherror(this.handleerrortemplate('updatemodel",{"_index":780,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ModelsService.html":{}}}],["category",{"_index":459,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["causes",{"_index":2888,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":2716,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2687,"title":{},"body":{"index.html":{}}}],["ceilings",{"_index":1317,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["center",{"_index":1313,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["centers",{"_index":1306,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["centimeter",{"_index":2355,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["certain",{"_index":2757,"title":{},"body":{"license.html":{}}}],["chalk",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["change",{"_index":2707,"title":{},"body":{"index.html":{}}}],["changecomponentname",{"_index":331,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changecomponentname(e",{"_index":350,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changed",{"_index":2113,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["changedescription",{"_index":332,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changedescription(e",{"_index":353,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changedevicefrom",{"_index":867,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["changedevicefrom(e",{"_index":875,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["changedeviceto",{"_index":868,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["changedeviceto(e",{"_index":877,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["changeh",{"_index":1156,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changeh(e",{"_index":1167,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changeid",{"_index":869,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["changeid(e",{"_index":879,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["changemodelid",{"_index":1157,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changemodelid(e",{"_index":1169,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changename",{"_index":333,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["changename(e",{"_index":355,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/DeviceAddComponent.html":{}}}],["changes",{"_index":2704,"title":{},"body":{"index.html":{}}}],["changetheme",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["changetheme(theme",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["changetype",{"_index":334,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changetype(e",{"_index":357,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changeunit",{"_index":335,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changeunit(e",{"_index":359,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["changevalue",{"_index":1951,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["changevalue(controlname",{"_index":1959,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["changex",{"_index":1158,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changex(e",{"_index":1172,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changey",{"_index":1159,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["changey(e",{"_index":1174,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["char",{"_index":1022,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["character",{"_index":2039,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["characteristic",{"_index":824,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["characters",{"_index":452,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["check",{"_index":1898,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["checkcontrol",{"_index":2422,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":2425,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":2424,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":2427,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":2416,"title":{},"body":{"classes/Validation.html":{}}}],["checkdistanceindevicelist",{"_index":2315,"title":{},"body":{"classes/Tools3D.html":{}}}],["checked",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":1021,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["city",{"_index":1672,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["claims",{"_index":2769,"title":{},"body":{"license.html":{}}}],["class",{"_index":72,"title":{"classes/Attribute.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"classes/Device.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"classes/Model.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":293,"title":{},"body":{"classes/Attribute.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"classes/Device.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"classes/Model.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{},"overview.html":{}}}],["clearing",{"_index":2977,"title":{},"body":{"license.html":{}}}],["client",{"_index":1893,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"license.html":{}}}],["climates",{"_index":1344,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["clone",{"_index":535,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"index.html":{}}}],["cloneattribute",{"_index":669,"title":{},"body":{"injectables/AttributeService.html":{}}}],["cloneattribute(id",{"_index":686,"title":{},"body":{"injectables/AttributeService.html":{}}}],["cloneattributedictionary",{"_index":485,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["cloneattributedictionary(id",{"_index":493,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["cloneconnection",{"_index":1048,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["cloneconnection(id",{"_index":1056,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["cloned",{"_index":570,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["cloned._id",{"_index":534,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["clonedata",{"_index":647,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["clonedevice",{"_index":1476,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["clonedevice(id",{"_index":1485,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["clonedfloor",{"_index":1773,"title":{},"body":{"injectables/FloorService.html":{}}}],["clonedid",{"_index":2223,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["clonefloor",{"_index":1682,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["clonefloor(id",{"_index":1692,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["clonemodel",{"_index":2194,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["clonemodel(id",{"_index":2199,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["clones",{"_index":563,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["cloning",{"_index":1489,"title":{},"body":{"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["cloud",{"_index":2698,"title":{},"body":{"index.html":{}}}],["cm",{"_index":796,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["code",{"_index":663,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"index.html":{},"license.html":{}}}],["cold",{"_index":1343,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["collections",{"_index":2683,"title":{},"body":{"index.html":{}}}],["color",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{}}}],["commercial",{"_index":2780,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":319,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["commons",{"_index":2714,"title":{},"body":{"index.html":{},"license.html":{}}}],["communicate",{"_index":2825,"title":{},"body":{"license.html":{}}}],["compensation",{"_index":2799,"title":{},"body":{"license.html":{}}}],["competition",{"_index":2844,"title":{},"body":{"license.html":{}}}],["complete",{"_index":778,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/FloorListComponent.html":{}}}],["completed",{"_index":1838,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodoc/compodoc",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["component_template",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["componentdictionary",{"_index":326,"title":{"classes/ComponentDictionary.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"coverage.html":{}}}],["componentdictionary.getall",{"_index":462,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["componentdictionaryitem",{"_index":815,"title":{"interfaces/ComponentDictionaryItem.html":{}},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"coverage.html":{}}}],["componentname",{"_index":340,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/AttributesDictionary.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["componentobj",{"_index":461,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["componentobj.name",{"_index":463,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"overview.html":{}}}],["components/3d/3d.component",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute/add",{"_index":232,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute/attribute",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/attribute/edit",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/connection/add",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/connection/connection",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/connection/edit",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/devices/add",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/devices/devices",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/devices/edit",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/floors/add",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/floors/edit",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/floors/floor",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/home/home.component",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/models/add",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/models/edit",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["components/models/model",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["concerning",{"_index":2961,"title":{},"body":{"license.html":{}}}],["confer",{"_index":2745,"title":{},"body":{"license.html":{}}}],["connection",{"_index":185,"title":{"classes/Connection.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connection'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["connection).subscribe",{"_index":921,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["connection.component.html",{"_index":864,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.scss",{"_index":863,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts",{"_index":862,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"coverage.html":{}}}],["connection.component.ts:100",{"_index":975,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:104",{"_index":976,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:108",{"_index":977,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:112",{"_index":978,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:116",{"_index":980,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:120",{"_index":962,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:124",{"_index":960,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:132",{"_index":959,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:143",{"_index":961,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:23",{"_index":889,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:24",{"_index":891,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:25",{"_index":892,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:26",{"_index":893,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:27",{"_index":890,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:28",{"_index":874,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:29",{"_index":972,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:30",{"_index":969,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:31",{"_index":971,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:32",{"_index":974,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:33",{"_index":968,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:34",{"_index":957,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:37",{"_index":973,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:39",{"_index":882,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:40",{"_index":963,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:48",{"_index":886,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:52",{"_index":880,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:55",{"_index":881,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:58",{"_index":878,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:61",{"_index":876,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:65",{"_index":894,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:67",{"_index":970,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:68",{"_index":895,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:71",{"_index":897,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:74",{"_index":899,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:76",{"_index":966,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:77",{"_index":888,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:80",{"_index":883,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:84",{"_index":967,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:87",{"_index":885,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:88",{"_index":964,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection.component.ts:90",{"_index":887,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["connection.component.ts:94",{"_index":965,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connection/:id",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["connection/add",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConnectionAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connection/edit",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConnectionEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connection?._id",{"_index":854,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connection?.deviceidfrom",{"_index":860,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connection?.deviceidto",{"_index":858,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connection?.name",{"_index":856,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["connectionaddcomponent",{"_index":181,"title":{"components/ConnectionAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connectioneditcomponent",{"_index":183,"title":{"components/ConnectionEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connectioneditcomponent.connectionservice.getconnection",{"_index":1011,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["connectionid",{"_index":298,"title":{},"body":{"classes/Attribute.html":{},"classes/Validation.html":{}}}],["connectioninterface",{"_index":849,"title":{"interfaces/ConnectionInterface.html":{}},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"coverage.html":{}}}],["connectionlist",{"_index":1043,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionlistcomponent",{"_index":184,"title":{"components/ConnectionListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["connectionlistpage",{"_index":1044,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj",{"_index":1082,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj._id",{"_index":1085,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj.deviceidfrom",{"_index":1087,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj.deviceidto",{"_index":1089,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connectionobj.name",{"_index":1084,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["connections",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{}}}],["connectionservice",{"_index":873,"title":{"injectables/ConnectionService.html":{}},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"coverage.html":{}}}],["connectivity",{"_index":1305,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["consents",{"_index":2981,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":2798,"title":{},"body":{"license.html":{}}}],["console.error",{"_index":2279,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.error('[deletefloor",{"_index":1724,"title":{},"body":{"components/FloorListComponent.html":{}}}],["console.error('an",{"_index":1896,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["console.error('error",{"_index":1413,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/HomeComponent.html":{},"components/ModelsListComponent.html":{}}}],["console.error('getattributessync",{"_index":747,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error('json.parse(item",{"_index":755,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error('syncrequestclient().get",{"_index":761,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error(`attribute.service.errorhandl",{"_index":782,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.error(`deviceservice.handleerrortemplate",{"_index":1122,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{}}}],["console.error(`logservice.handleerrortemplate",{"_index":1916,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["console.error(`modelslistcomponent.handleerrortemplate",{"_index":2234,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["console.error(`modelsservice.handleerrortemplate",{"_index":2284,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.error(err",{"_index":2274,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.error(errormessage",{"_index":665,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{}}}],["console.info('[deletefloor",{"_index":1717,"title":{},"body":{"components/FloorListComponent.html":{}}}],["console.info('[findmodelname",{"_index":1537,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.info('clone",{"_index":1587,"title":{},"body":{"injectables/DeviceService.html":{}}}],["console.info('create",{"_index":1593,"title":{},"body":{"injectables/DeviceService.html":{}}}],["console.info('get",{"_index":1584,"title":{},"body":{"injectables/DeviceService.html":{}}}],["console.info(`cloned",{"_index":1527,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.log",{"_index":843,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionEditComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["console.log('[deletefloor",{"_index":1727,"title":{},"body":{"components/FloorListComponent.html":{}}}],["console.log('[log.service.getcomponentlogs",{"_index":1873,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["console.log('connectioneditcomponent.ngoninit",{"_index":990,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["console.log('count",{"_index":2433,"title":{},"body":{"classes/Validation.html":{}}}],["console.log('create",{"_index":776,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/ModelsService.html":{}}}],["console.log('device",{"_index":1253,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["console.log('device.id",{"_index":764,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('device.modelid",{"_index":765,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('deviceeditcomponent.submitform",{"_index":1419,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["console.log('generate",{"_index":2335,"title":{},"body":{"classes/Tools3D.html":{}}}],["console.log('get",{"_index":772,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/ModelsService.html":{}}}],["console.log('getcontextattributes.attributes",{"_index":766,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.log('getmodel",{"_index":2100,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["console.log('input",{"_index":2112,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["console.log('key",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('logcomponent.getattributelogs",{"_index":1880,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["console.log('logcomponent.getdevicelogs",{"_index":1877,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["console.log('logservice.createlog",{"_index":1596,"title":{},"body":{"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["console.log('logservice.createlog(log",{"_index":2123,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["console.log('markdown",{"_index":1812,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log('model",{"_index":2015,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["console.log('onerror",{"_index":1852,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log('onload",{"_index":1851,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log('onsuccess",{"_index":1853,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log('resolver",{"_index":2297,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["console.log('resolvermodel",{"_index":2304,"title":{},"body":{"guards/ResolverModel.html":{}}}],["console.log('service.createmodel",{"_index":2263,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.log('submit",{"_index":1250,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["console.log('theme",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`${id",{"_index":1518,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.log(`deleting",{"_index":523,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["console.log(`model",{"_index":2226,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["console.log(`modelservice.clonemodel",{"_index":2265,"title":{},"body":{"injectables/ModelsService.html":{}}}],["console.log(`modelslistcomponent",{"_index":2218,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["console.log(data",{"_index":530,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{}}}],["console.log(id",{"_index":2220,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["console.log(json.stringify(errormessage",{"_index":1121,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["console.warn('[devicelistcomponent",{"_index":1535,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["console.warn('json.parse(item",{"_index":753,"title":{},"body":{"injectables/AttributeService.html":{}}}],["console.warn('model",{"_index":1248,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["console.warn(`attribute.service.handleerrortemplate",{"_index":783,"title":{},"body":{"injectables/AttributeService.html":{}}}],["const",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["constructor",{"_index":301,"title":{},"body":{"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{}}}],["constructor(activatedroute",{"_index":1366,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["constructor(api",{"_index":2288,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["constructor(attributedictionaryservice",{"_index":490,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["constructor(connection",{"_index":848,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["constructor(connectionservice",{"_index":1053,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["constructor(devicesservice",{"_index":1481,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["constructor(floorservice",{"_index":1689,"title":{},"body":{"components/FloorListComponent.html":{}}}],["constructor(formbuilder",{"_index":344,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["constructor(http",{"_index":558,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["constructor(init",{"_index":788,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["constructor(modelsservice",{"_index":2300,"title":{},"body":{"guards/ResolverModel.html":{}}}],["constructor(name",{"_index":1126,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceType.html":{},"interfaces/Position.html":{}}}],["constructor(ngzone",{"_index":1957,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["constructor(private",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["constructor(router",{"_index":2197,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["constructor(title",{"_index":2306,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["contain",{"_index":2632,"title":{},"body":{"index.html":{}}}],["container",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["containerization",{"_index":2695,"title":{},"body":{"index.html":{}}}],["containers",{"_index":2610,"title":{},"body":{"index.html":{}}}],["containing",{"_index":586,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"injectables/FloorService.html":{},"interfaces/Position.html":{}}}],["contemplated",{"_index":2919,"title":{},"body":{"license.html":{}}}],["content",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["context",{"_index":710,"title":{},"body":{"injectables/AttributeService.html":{}}}],["continue",{"_index":728,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["contrary",{"_index":2949,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":2878,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":2781,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":2611,"title":{},"body":{"index.html":{},"license.html":{}}}],["control",{"_index":607,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/DeviceEditComponent.html":{},"injectables/DeviceService.html":{},"components/ModelAddComponent.html":{},"classes/Validation.html":{}}}],["control.dirty",{"_index":1991,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["control.get('connectionid')?.value",{"_index":2432,"title":{},"body":{"classes/Validation.html":{}}}],["control.get('deviceid')?.value",{"_index":2430,"title":{},"body":{"classes/Validation.html":{}}}],["control.get('modelid')?.value",{"_index":2431,"title":{},"body":{"classes/Validation.html":{}}}],["control.invalid",{"_index":1989,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["control.setvalue(value",{"_index":1993,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["control.touched",{"_index":1990,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["control.value",{"_index":1393,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["control?.value",{"_index":2426,"title":{},"body":{"classes/Validation.html":{}}}],["controlname",{"_index":1961,"title":{},"body":{"components/ModelAddComponent.html":{},"classes/Validation.html":{}}}],["controls",{"_index":2420,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":2423,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":2428,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":2421,"title":{},"body":{"classes/Validation.html":{}}}],["convert",{"_index":2272,"title":{},"body":{"injectables/ModelsService.html":{},"index.html":{}}}],["converter",{"_index":1809,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.makehtml(data",{"_index":1834,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setflavor('github",{"_index":1817,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('disableforced4spacesindentedsublists",{"_index":1828,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('emoji",{"_index":1822,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('ghcodeblocks",{"_index":1830,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('ghcompatibleheaderid",{"_index":1821,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('ghmentions",{"_index":1829,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('ghmentionslink",{"_index":1832,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('ghmentionsstyle",{"_index":1831,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('headerlevelstart",{"_index":1823,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('literalmidwordasterisks",{"_index":1827,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('literalmidwordunderscores",{"_index":1826,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('strikethrough",{"_index":1820,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('tables",{"_index":1819,"title":{},"body":{"components/HomeComponent.html":{}}}],["converter.setoption('tasklists",{"_index":1818,"title":{},"body":{"components/HomeComponent.html":{}}}],["cooling",{"_index":1346,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["copies",{"_index":2900,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["corp",{"_index":2641,"title":{},"body":{"index.html":{}}}],["corporation",{"_index":2719,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2682,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":2871,"title":{},"body":{"license.html":{}}}],["cors",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["costs",{"_index":1347,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["council",{"_index":2856,"title":{},"body":{"license.html":{}}}],["count",{"_index":2327,"title":{},"body":{"classes/Tools3D.html":{}}}],["counter",{"_index":2334,"title":{},"body":{"classes/Tools3D.html":{}}}],["country",{"_index":1673,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["coverage",{"_index":2442,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covers",{"_index":2625,"title":{},"body":{"index.html":{}}}],["create",{"_index":442,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeDictionaryService.html":{},"components/ConnectionAddComponent.html":{},"components/DeviceAddComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"license.html":{}}}],["createattribute",{"_index":670,"title":{},"body":{"injectables/AttributeService.html":{}}}],["createattribute(data",{"_index":690,"title":{},"body":{"injectables/AttributeService.html":{}}}],["createattributedictionary",{"_index":553,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["createattributedictionary(data",{"_index":571,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["createattributedictionary(this.addattributedictionaryform.value",{"_index":433,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["createconnection",{"_index":1093,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["createconnection(data",{"_index":1098,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["created",{"_index":575,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"injectables/ModelsService.html":{}}}],["createdattribute._id",{"_index":435,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["createddevice",{"_index":1592,"title":{},"body":{"injectables/DeviceService.html":{}}}],["createdevice",{"_index":1550,"title":{},"body":{"injectables/DeviceService.html":{}}}],["createdevice(data",{"_index":1558,"title":{},"body":{"injectables/DeviceService.html":{}}}],["createfloor",{"_index":1747,"title":{},"body":{"injectables/FloorService.html":{}}}],["createfloor(data",{"_index":1755,"title":{},"body":{"injectables/FloorService.html":{}}}],["createformgroup",{"_index":953,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{}}}],["createlog",{"_index":437,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/FloorListComponent.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelsListComponent.html":{}}}],["createlog(data",{"_index":1885,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["createmodel",{"_index":2243,"title":{},"body":{"injectables/ModelsService.html":{}}}],["createmodel(data",{"_index":2247,"title":{},"body":{"injectables/ModelsService.html":{}}}],["createmodelreturn",{"_index":2013,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["createrack3d(floor_x",{"_index":2344,"title":{},"body":{"classes/Tools3D.html":{}}}],["creates",{"_index":574,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"index.html":{}}}],["creating",{"_index":1424,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"index.html":{}}}],["creative",{"_index":2713,"title":{},"body":{"index.html":{},"license.html":{}}}],["creator",{"_index":2749,"title":{},"body":{"license.html":{}}}],["cube'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["cubecomponent",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["cultural",{"_index":2763,"title":{},"body":{"license.html":{}}}],["culture",{"_index":2785,"title":{},"body":{"license.html":{}}}],["current",{"_index":1506,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"license.html":{}}}],["currentyearlong",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":2418,"title":{},"body":{"classes/Validation.html":{}}}],["customers",{"_index":1336,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["d",{"_index":1737,"title":{},"body":{"components/FloorListComponent.html":{},"license.html":{}}}],["d.description",{"_index":1739,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.h",{"_index":1742,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.hpos",{"_index":1745,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.x",{"_index":1740,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.xpos",{"_index":1743,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.y",{"_index":1741,"title":{},"body":{"components/FloorListComponent.html":{}}}],["d.ypos",{"_index":1744,"title":{},"body":{"components/FloorListComponent.html":{}}}],["damages",{"_index":2736,"title":{},"body":{"license.html":{}}}],["dark",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":366,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"index.html":{},"license.html":{}}}],["data._id",{"_index":1603,"title":{},"body":{"injectables/DeviceService.html":{},"components/ModelEditComponent.html":{}}}],["data.componentname",{"_index":634,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["data.dimension.depth.tostring",{"_index":2104,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.dimension.height.tostring",{"_index":2103,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.dimension.width.tostring",{"_index":2102,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.name",{"_index":632,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/ModelEditComponent.html":{}}}],["data.replace(/src\\//g",{"_index":1816,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.texture.back",{"_index":2106,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.bottom",{"_index":2109,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.front",{"_index":2105,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.side",{"_index":2107,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.texture.top",{"_index":2108,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["data.type",{"_index":633,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["data.unshift(tmp",{"_index":918,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["data]=\"md",{"_index":1846,"title":{},"body":{"components/HomeComponent.html":{}}}],["database",{"_index":2619,"title":{},"body":{"index.html":{},"license.html":{}}}],["databases",{"_index":2861,"title":{},"body":{"license.html":{}}}],["datacenters",{"_index":2621,"title":{},"body":{"index.html":{}}}],["date",{"_index":1860,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"dependencies.html":{},"license.html":{}}}],["date().getfullyear",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["db",{"_index":2681,"title":{},"body":{"index.html":{}}}],["debug",{"_index":1137,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["declarations",{"_index":2989,"title":{},"body":{"overview.html":{}}}],["declare",{"_index":1391,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["deemed",{"_index":2938,"title":{},"body":{"license.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1129,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["defects",{"_index":2969,"title":{},"body":{"license.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{},"index.html":{},"license.html":{}}}],["delete",{"_index":522,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["delete(environment.baseurl",{"_index":768,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["deleteattribute",{"_index":486,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{}}}],["deleteattribute(attributeid",{"_index":495,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["deleteattribute(id",{"_index":692,"title":{},"body":{"injectables/AttributeService.html":{}}}],["deleteattributedictionary",{"_index":487,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["deleteattributedictionary(id",{"_index":498,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["deleteconnection",{"_index":1049,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["deleteconnection(id",{"_index":1058,"title":{},"body":{"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["deleted",{"_index":578,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deletedevice",{"_index":1477,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["deletedevice(id",{"_index":1490,"title":{},"body":{"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{}}}],["deleteerror",{"_index":1523,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["deletefloor",{"_index":1683,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["deletefloor(id",{"_index":1694,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["deleteform",{"_index":2081,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["deletelog",{"_index":1919,"title":{},"body":{"injectables/LogService.html":{}}}],["deletelog(id",{"_index":1882,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["deletemodel",{"_index":2195,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deletemodel(id",{"_index":2202,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deletes",{"_index":577,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["deleting",{"_index":1524,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["deletion",{"_index":524,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["demo",{"_index":2605,"title":{},"body":{"index.html":{}}}],["demonstration",{"_index":1784,"title":{},"body":{"components/HomeComponent.html":{}}}],["depcheck",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":2514,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["depicted",{"_index":2839,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":2609,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2696,"title":{},"body":{"index.html":{}}}],["depth",{"_index":1658,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{}}}],["description",{"_index":295,"title":{},"body":{"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/FloorDimension.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["designed",{"_index":1316,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["detailedmessage",{"_index":660,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["details",{"_index":1900,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["detriment",{"_index":2906,"title":{},"body":{"license.html":{}}}],["developing",{"_index":2622,"title":{},"body":{"index.html":{}}}],["device",{"_index":192,"title":{"classes/Device.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"coverage.html":{}}}],["device'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["device._id",{"_index":759,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceListComponent.html":{}}}],["device.component",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["device.component.html",{"_index":1152,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.scss",{"_index":1151,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts",{"_index":1150,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"coverage.html":{}}}],["device.component.ts:103",{"_index":1193,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:107",{"_index":1195,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:111",{"_index":1197,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:115",{"_index":1199,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:119",{"_index":1201,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:120",{"_index":1368,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:123",{"_index":1203,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:124",{"_index":1369,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:127",{"_index":1205,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:131",{"_index":1207,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:135",{"_index":1209,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:139",{"_index":1182,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:143",{"_index":1176,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:155",{"_index":1378,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:158",{"_index":1180,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:159",{"_index":1379,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:163",{"_index":1380,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:167",{"_index":1381,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:171",{"_index":1382,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:175",{"_index":1383,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:179",{"_index":1384,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:183",{"_index":1385,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:187",{"_index":1386,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:191",{"_index":1387,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:25",{"_index":1184,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:26",{"_index":1188,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:27",{"_index":1187,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:28",{"_index":1185,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:29",{"_index":1189,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:30",{"_index":1190,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:31",{"_index":1192,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:33",{"_index":1183,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:34",{"_index":1374,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:35",{"_index":1177,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:36",{"_index":1373,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:39",{"_index":1376,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:47",{"_index":1372,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:60",{"_index":1166,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:61",{"_index":1371,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:62",{"_index":1367,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:65",{"_index":1370,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["device.component.ts:66",{"_index":1186,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:73",{"_index":1179,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["device.component.ts:77",{"_index":1178,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:83",{"_index":1171,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:87",{"_index":1173,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:91",{"_index":1175,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:95",{"_index":1168,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.component.ts:99",{"_index":1170,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["device.modelid",{"_index":757,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceListComponent.html":{}}}],["device.name",{"_index":1543,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.position.h",{"_index":1546,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.position.x",{"_index":1544,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.position.y",{"_index":1545,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["device.service",{"_index":737,"title":{},"body":{"injectables/AttributeService.html":{}}}],["device.service.updatedevice",{"_index":1601,"title":{},"body":{"injectables/DeviceService.html":{}}}],["device/${id",{"_index":541,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["device/:id",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["device/add",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeviceAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["device/edit",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeviceEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["deviceaddcomponent",{"_index":188,"title":{"components/DeviceAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["devicecategory",{"_index":1301,"title":{"classes/DeviceCategory.html":{}},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"coverage.html":{}}}],["devicecategory.name",{"_index":1353,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["devicecategorydict",{"_index":327,"title":{"classes/DeviceCategoryDict.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/ModelAddComponent.html":{},"coverage.html":{}}}],["devicecreate",{"_index":1588,"title":{},"body":{"injectables/DeviceService.html":{}}}],["deviceeditcomponent",{"_index":190,"title":{"components/DeviceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["devicefromobj",{"_index":935,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["devicefromobj.name",{"_index":936,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["deviceid",{"_index":299,"title":{},"body":{"classes/Attribute.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"classes/Validation.html":{}}}],["deviceidfrom",{"_index":846,"title":{},"body":{"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{}}}],["deviceidto",{"_index":847,"title":{},"body":{"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{}}}],["deviceinterface",{"_index":1146,"title":{"interfaces/DeviceInterface.html":{}},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["devicelist",{"_index":866,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"classes/Tools3D.html":{}}}],["devicelist.length",{"_index":1542,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["devicelistcomponent",{"_index":191,"title":{"components/DeviceListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["devicelistpage",{"_index":1474,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["devices",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"index.html":{}}}],["deviceservice",{"_index":682,"title":{"injectables/DeviceService.html":{}},"body":{"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{},"coverage.html":{}}}],["devicesservice",{"_index":1154,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["devicetocreate",{"_index":1585,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devicetocreate._id",{"_index":1586,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devicetocreate.name",{"_index":1590,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devicetoobj",{"_index":938,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["devicetoobj.name",{"_index":939,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["devicetype",{"_index":1608,"title":{"classes/DeviceType.html":{}},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"coverage.html":{}}}],["devicetype('bridge",{"_index":1614,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('coolair",{"_index":1615,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('copier",{"_index":1616,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('desktop",{"_index":1617,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('firewall",{"_index":1618,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('gateway",{"_index":1619,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('hubs",{"_index":1620,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('load",{"_index":1621,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('modem",{"_index":1623,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('multiplexer",{"_index":1624,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('pdu",{"_index":1625,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('power",{"_index":1627,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('printer",{"_index":1628,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('probe",{"_index":1629,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('repeaters",{"_index":1630,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('router",{"_index":1631,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('security",{"_index":1632,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('server",{"_index":1633,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('switch",{"_index":1634,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('telephone",{"_index":1635,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('terminal",{"_index":1636,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('traffic",{"_index":1637,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('transceiver",{"_index":1639,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('ups",{"_index":1640,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetype('workstations",{"_index":1641,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["devicetypedict",{"_index":328,"title":{"classes/DeviceTypeDict.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/ModelAddComponent.html":{},"coverage.html":{}}}],["devicetypedict['list",{"_index":454,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["devicetypedict[\\'list",{"_index":474,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["devicetypeinterface",{"_index":1610,"title":{"interfaces/DeviceTypeInterface.html":{}},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"coverage.html":{}}}],["dictionaries",{"_index":591,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"classes/AttributesDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{},"index.html":{}}}],["dictionary'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["dictionary.component",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["dictionary.component.html",{"_index":322,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.scss",{"_index":321,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts",{"_index":316,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"coverage.html":{}}}],["dictionary.component.ts:102",{"_index":392,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:106",{"_index":365,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:110",{"_index":363,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:22",{"_index":368,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:29",{"_index":370,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:30",{"_index":376,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:31",{"_index":374,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:32",{"_index":373,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:33",{"_index":372,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:34",{"_index":378,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:35",{"_index":377,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:37",{"_index":362,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:39",{"_index":349,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:45",{"_index":371,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:49",{"_index":361,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:59",{"_index":356,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:63",{"_index":358,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:67",{"_index":351,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:71",{"_index":360,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:75",{"_index":354,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:79",{"_index":380,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:83",{"_index":382,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:87",{"_index":384,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:90",{"_index":386,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:94",{"_index":388,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.component.ts:98",{"_index":390,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["dictionary.service",{"_index":399,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{}}}],["dictionary.service.ts",{"_index":550,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"coverage.html":{}}}],["dictionary.service.ts:117",{"_index":597,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:131",{"_index":580,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:16",{"_index":560,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:23",{"_index":611,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:35",{"_index":589,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:46",{"_index":593,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:59",{"_index":576,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:77",{"_index":573,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary.service.ts:91",{"_index":562,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["dictionary/:id",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["dictionary/add",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["dictionary/attribute",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["dictionary/edit",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["different",{"_index":2650,"title":{},"body":{"index.html":{}}}],["dimension",{"_index":1656,"title":{"interfaces/Dimension.html":{}},"body":{"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"interfaces/Floors.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["dimensiongroup",{"_index":1997,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensiongroup.controls['width'].setvalue(faker.number.int(10).tostring",{"_index":2004,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensiongroup.get('depth')?.setvalue(faker.number.int(10).tostring",{"_index":2000,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensiongroup.get('height')?.setvalue(faker.number.int(10).tostring",{"_index":2002,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensiongroup?.get('depth",{"_index":1999,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensiongroup?.get('height",{"_index":2001,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensiongroup?.get('width",{"_index":2003,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["dimensions",{"_index":2235,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["directive",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"license.html":{}}}],["directives",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["disclaimers",{"_index":2950,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":2734,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":2973,"title":{},"body":{"license.html":{}}}],["discuss",{"_index":2706,"title":{},"body":{"index.html":{}}}],["display",{"_index":2824,"title":{},"body":{"license.html":{}}}],["disrupt",{"_index":2916,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":2850,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2333,"title":{},"body":{"classes/Tools3D.html":{}}}],["distribute",{"_index":2808,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2722,"title":{},"body":{"license.html":{}}}],["docker",{"_index":2661,"title":{},"body":{"index.html":{}}}],["document",{"_index":2723,"title":{},"body":{"license.html":{}}}],["document.body",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":2659,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["duration",{"_index":2897,"title":{},"body":{"license.html":{}}}],["during",{"_index":1427,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["duty",{"_index":2985,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":352,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["e._id",{"_index":1075,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["e.g",{"_index":1866,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["e.name",{"_index":1644,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["e.target",{"_index":998,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["each",{"_index":2752,"title":{},"body":{"license.html":{}}}],["edit",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["editconnection",{"_index":1050,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["editconnection(connection",{"_index":1060,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["editdeviceform",{"_index":1363,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.controls._id.errors?.required",{"_index":1437,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.controls.modelid.errors",{"_index":1451,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.controls.modelid.errors.required",{"_index":1452,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.controls.name.errors",{"_index":1438,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.controls.name.errors.minlength",{"_index":1440,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.controls.name.errors.required",{"_index":1439,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('_id')?.errors",{"_index":1436,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.h')?.errors",{"_index":1449,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.h')?.errors?.required",{"_index":1450,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.x",{"_index":1441,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.x')?.errors",{"_index":1442,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.x')?.errors?.maxlength",{"_index":1445,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.x')?.errors?.minlength",{"_index":1444,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.x')?.errors?.required",{"_index":1443,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.y')?.errors",{"_index":1447,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get('position.y')?.errors?.required",{"_index":1448,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'_id\\')?.errors",{"_index":1463,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.h\\')?.errors",{"_index":1471,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.h\\')?.errors?.required",{"_index":1472,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.x",{"_index":1464,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.x\\')?.errors",{"_index":1465,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.x\\')?.errors?.maxlength",{"_index":1468,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.x\\')?.errors?.minlength",{"_index":1467,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.x\\')?.errors?.required",{"_index":1466,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.y\\')?.errors",{"_index":1469,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.get(\\'position.y\\')?.errors?.required",{"_index":1470,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.invalid",{"_index":1453,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.touched",{"_index":1454,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["editdeviceform.valid",{"_index":1456,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["edited",{"_index":2206,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["editfloor",{"_index":1684,"title":{},"body":{"components/FloorListComponent.html":{}}}],["editfloor(floor",{"_index":1696,"title":{},"body":{"components/FloorListComponent.html":{}}}],["editform",{"_index":488,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/DeviceListComponent.html":{}}}],["editform(attributedictionary",{"_index":500,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["editform(device",{"_index":1492,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["editmodel",{"_index":2196,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["editmodel(model",{"_index":2204,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["editmodelform",{"_index":2079,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.controls.id.errors?.minlength",{"_index":2129,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.controls.id.errors?.required",{"_index":2128,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.controls.name.errors?.minlength",{"_index":2132,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.controls.name.errors?.required",{"_index":2131,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.depth')?.errors",{"_index":2141,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.depth')?.errors?.maxlength",{"_index":2144,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.depth')?.errors?.minlength",{"_index":2143,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.depth')?.errors?.required",{"_index":2142,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.height')?.errors",{"_index":2137,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.height')?.errors?.maxlength",{"_index":2140,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.height')?.errors?.minlength",{"_index":2139,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.height')?.errors?.required",{"_index":2138,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.width')?.errors",{"_index":2133,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('dimension.width')?.errors?.maxlength",{"_index":2134,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('id')?.errors",{"_index":2127,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('name')?.errors",{"_index":2130,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.back')?.errors",{"_index":2148,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.back')?.errors?.minlength",{"_index":2149,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.bottom')?.errors",{"_index":2156,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.bottom')?.errors?.minlength",{"_index":2158,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.bottom')?.errors?.required",{"_index":2157,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.front')?.errors",{"_index":2145,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.front')?.errors?.minlength",{"_index":2147,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.front')?.errors?.required",{"_index":2146,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.side')?.errors",{"_index":2150,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.side')?.errors?.minlength",{"_index":2152,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.side')?.errors?.required",{"_index":2151,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.top')?.errors",{"_index":2153,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.top')?.errors?.minlength",{"_index":2155,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get('texture.top')?.errors?.required",{"_index":2154,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.depth\\')?.errors",{"_index":2170,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.depth\\')?.errors?.maxlength",{"_index":2173,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.depth\\')?.errors?.minlength",{"_index":2172,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.depth\\')?.errors?.required",{"_index":2171,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.height\\')?.errors",{"_index":2166,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.height\\')?.errors?.maxlength",{"_index":2169,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.height\\')?.errors?.minlength",{"_index":2168,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.height\\')?.errors?.required",{"_index":2167,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.width\\')?.errors",{"_index":2164,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'dimension.width\\')?.errors?.maxlength",{"_index":2165,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'id\\')?.errors",{"_index":2162,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'name\\')?.errors",{"_index":2163,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.back\\')?.errors",{"_index":2177,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.back\\')?.errors?.minlength",{"_index":2178,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.bottom\\')?.errors",{"_index":2185,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.bottom\\')?.errors?.minlength",{"_index":2187,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.bottom\\')?.errors?.required",{"_index":2186,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.front\\')?.errors",{"_index":2174,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.front\\')?.errors?.minlength",{"_index":2176,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.front\\')?.errors?.required",{"_index":2175,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.side\\')?.errors",{"_index":2179,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.side\\')?.errors?.minlength",{"_index":2181,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.side\\')?.errors?.required",{"_index":2180,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.top\\')?.errors",{"_index":2182,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.top\\')?.errors?.minlength",{"_index":2184,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.get(\\'texture.top\\')?.errors?.required",{"_index":2183,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.status",{"_index":2161,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.touched",{"_index":2160,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["editmodelform.valid",{"_index":2159,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["edits",{"_index":2205,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["effect",{"_index":2814,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2939,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":2629,"title":{},"body":{"index.html":{}}}],["efforts",{"_index":2793,"title":{},"body":{"license.html":{}}}],["elects",{"_index":2805,"title":{},"body":{"license.html":{}}}],["element",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["element.position.x",{"_index":2341,"title":{},"body":{"classes/Tools3D.html":{}}}],["element.position.y",{"_index":2342,"title":{},"body":{"classes/Tools3D.html":{}}}],["element.x",{"_index":2338,"title":{},"body":{"classes/Tools3D.html":{}}}],["element.y",{"_index":2340,"title":{},"body":{"classes/Tools3D.html":{}}}],["emits",{"_index":588,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["emitting",{"_index":569,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["employees",{"_index":1337,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["empty",{"_index":816,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["enabled",{"_index":1139,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["enjoyment",{"_index":2918,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":1261,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["ensures",{"_index":2294,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["enter",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["entities",{"_index":2677,"title":{},"body":{"index.html":{}}}],["entry",{"_index":1859,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["environment",{"_index":618,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"injectables/ModelsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":601,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["environment.baseurl}/attributes",{"_index":742,"title":{},"body":{"injectables/AttributeService.html":{}}}],["environment.baseurl}/attributesdictionary/${encodeuricomponent(id",{"_index":628,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["environment.baseurl}/logs",{"_index":1884,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["environment.production",{"_index":1915,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{}}}],["environments/environment",{"_index":619,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["equitable",{"_index":2915,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":2870,"title":{},"body":{"license.html":{}}}],["err",{"_index":652,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["error",{"_index":582,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Validation.html":{}}}],["error('an",{"_index":1897,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["error('attribute",{"_index":627,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["error('missing",{"_index":635,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["error(errormessage",{"_index":666,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{}}}],["error(errormsg",{"_index":1904,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["error).message",{"_index":2441,"title":{},"body":{"classes/Validation.html":{}}}],["error.error",{"_index":656,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["error.error.message",{"_index":659,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["error.error?.message",{"_index":662,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{}}}],["error.message",{"_index":661,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["error.stack",{"_index":2283,"title":{},"body":{"injectables/ModelsService.html":{}}}],["error.status",{"_index":664,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["error.status}\\nmessage",{"_index":781,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorevent",{"_index":658,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorhandl",{"_index":671,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorhandl(error",{"_index":694,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errorhandler",{"_index":554,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["errorhandler(error",{"_index":579,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["errormessage",{"_index":655,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{}}}],["errormsg",{"_index":1901,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["errors",{"_index":2972,"title":{},"body":{"license.html":{}}}],["eslint",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["european",{"_index":2854,"title":{},"body":{"license.html":{}}}],["even",{"_index":1912,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["event",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"components/HomeComponent.html":{},"components/ModelEditComponent.html":{}}}],["event.key",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["event.preventdefault",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target",{"_index":2111,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["event.url",{"_index":1531,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["example",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"injectables/LogService.html":{},"index.html":{},"license.html":{}}}],["exclusive",{"_index":2746,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2937,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1849,"title":{},"body":{"components/HomeComponent.html":{}}}],["existing",{"_index":1325,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceListComponent.html":{},"license.html":{}}}],["expectation",{"_index":2796,"title":{},"body":{"license.html":{}}}],["expected",{"_index":2278,"title":{},"body":{"injectables/ModelsService.html":{}}}],["explore",{"_index":2624,"title":{},"body":{"index.html":{}}}],["export",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["exports",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"overview.html":{}}}],["express",{"_index":2544,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["extensions",{"_index":2898,"title":{},"body":{"license.html":{}}}],["extent",{"_index":2803,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":2849,"title":{},"body":{"license.html":{}}}],["f",{"_index":956,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["facility",{"_index":1312,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["failed",{"_index":727,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["faker",{"_index":1210,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{},"classes/Tools3D.html":{},"dependencies.html":{}}}],["faker.company.buzzphrase",{"_index":1238,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["fallback",{"_index":1906,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"license.html":{}}}],["fallbackresult",{"_index":1917,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["false",{"_index":375,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Position.html":{},"miscellaneous/variables.html":{}}}],["fear",{"_index":2767,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1837,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetching",{"_index":1414,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/HomeComponent.html":{}}}],["fiber",{"_index":1308,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["fieldpath",{"_index":1968,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["fields",{"_index":636,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/HomeComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["find",{"_index":1538,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findbyname",{"_index":810,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["findbyname(name",{"_index":826,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["findcategory",{"_index":1354,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["findcategory(devicecategory",{"_index":1351,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["finddevice",{"_index":1051,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["finddevice(id",{"_index":1062,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["findmodelname",{"_index":1478,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findmodelname(device.modelid",{"_index":1547,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findmodelname(id",{"_index":1494,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["findtype",{"_index":1648,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["findtype(name",{"_index":1642,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["findunitbyname",{"_index":2347,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["findunitbyname(name",{"_index":2401,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["firebase",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["firm",{"_index":2721,"title":{},"body":{"license.html":{}}}],["first",{"_index":1400,"title":{},"body":{"components/DeviceEditComponent.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":734,"title":{},"body":{"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["firstvaluefrom(this.connectionservice.updateconnection(this.inputid",{"_index":1014,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["firstvaluefrom(this.devicesservice.deletedevice(id",{"_index":1517,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["fitness",{"_index":2965,"title":{},"body":{"license.html":{}}}],["floor",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["floor'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["floor._id",{"_index":1723,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.city",{"_index":1734,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.country",{"_index":1736,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.postcode",{"_index":1735,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.address.street",{"_index":1733,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.component",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["floor.component.ts",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["floor.dimension",{"_index":1738,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor.name",{"_index":1732,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floor/:id",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["floor/add",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floor/edit",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floor_y",{"_index":2345,"title":{},"body":{"classes/Tools3D.html":{}}}],["flooraddcomponent",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floordimension",{"_index":1665,"title":{"interfaces/FloorDimension.html":{}},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"coverage.html":{}}}],["flooreditcomponent",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floorlist",{"_index":1677,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floorlistcomponent",{"_index":196,"title":{"components/FloorListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["floorlistpage",{"_index":1678,"title":{},"body":{"components/FloorListComponent.html":{}}}],["floors",{"_index":101,"title":{"interfaces/Floors.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"coverage.html":{}}}],["floors's",{"_index":1754,"title":{},"body":{"injectables/FloorService.html":{}}}],["floors/').pipe(retry(1",{"_index":1770,"title":{},"body":{"injectables/FloorService.html":{}}}],["floorservice",{"_index":1690,"title":{"injectables/FloorService.html":{}},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"coverage.html":{}}}],["fns",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["following",{"_index":2820,"title":{},"body":{"license.html":{}}}],["font",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{},"dependencies.html":{}}}],["forget",{"_index":2711,"title":{},"body":{"index.html":{}}}],["form",{"_index":472,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"classes/Validation.html":{},"license.html":{}}}],["form.get('name')?.dirty",{"_index":1027,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get('name')?.errors?.['minlength",{"_index":1026,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get('name')?.errors?.['required",{"_index":1025,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get('name')?.invalid",{"_index":1024,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get('name')?.touched",{"_index":1028,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get(\\'name\\')?.dirty",{"_index":1040,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get(\\'name\\')?.errors?.[\\'minlength",{"_index":1039,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get(\\'name\\')?.errors?.[\\'required",{"_index":1038,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get(\\'name\\')?.invalid",{"_index":1037,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["form.get(\\'name\\')?.touched",{"_index":1041,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["format",{"_index":713,"title":{},"body":{"injectables/AttributeService.html":{}}}],["formaterrormessage",{"_index":1748,"title":{},"body":{"injectables/FloorService.html":{}}}],["formaterrormessage(error",{"_index":1760,"title":{},"body":{"injectables/FloorService.html":{}}}],["formattributedictionary",{"_index":336,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["formbuilder",{"_index":345,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["formconnection",{"_index":870,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["formcontrol",{"_index":394,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["formcontrol(0",{"_index":1218,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["formgroup",{"_index":367,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["formvalue",{"_index":1012,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["formvalue._id",{"_index":1015,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["found",{"_index":1645,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["framework",{"_index":2642,"title":{},"body":{"index.html":{}}}],["free",{"_index":2784,"title":{},"body":{"license.html":{}}}],["freely",{"_index":2775,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":2393,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["front",{"_index":1660,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["fully",{"_index":2881,"title":{},"body":{"license.html":{}}}],["fun",{"_index":2679,"title":{},"body":{"index.html":{}}}],["function",{"_index":1108,"title":{},"body":{"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{}}}],["functioning",{"_index":1910,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["further",{"_index":2786,"title":{},"body":{"license.html":{}}}],["future",{"_index":2893,"title":{},"body":{"license.html":{}}}],["g",{"_index":799,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["gain",{"_index":2788,"title":{},"body":{"license.html":{}}}],["gb",{"_index":2375,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["gbps",{"_index":2384,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["generate",{"_index":645,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["generatedevice",{"_index":1160,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["generatemodel",{"_index":1952,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["generaterackslist",{"_index":2316,"title":{},"body":{"classes/Tools3D.html":{}}}],["generaterackslist(count",{"_index":2325,"title":{},"body":{"classes/Tools3D.html":{}}}],["generaterandomdevicerack",{"_index":2317,"title":{},"body":{"classes/Tools3D.html":{}}}],["generic",{"_index":2671,"title":{},"body":{"index.html":{}}}],["get(`${this.baseurl}/models",{"_index":2258,"title":{},"body":{"injectables/ModelsService.html":{}}}],["get(`${this.baseurl}/models/${encodeuricomponent(id",{"_index":2260,"title":{},"body":{"injectables/ModelsService.html":{}}}],["get(environment.baseurl",{"_index":623,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["get,post,options,delete,put",{"_index":610,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{}}}],["get_id",{"_index":1377,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["getall",{"_index":811,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["getallunits",{"_index":2348,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["getattribute",{"_index":672,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getattribute(id",{"_index":698,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getattributedictionaries",{"_index":555,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["getattributedictionary",{"_index":556,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["getattributedictionary(id",{"_index":592,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["getattributelogs",{"_index":1920,"title":{},"body":{"injectables/LogService.html":{}}}],["getattributelogs(id",{"_index":1878,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["getattributes",{"_index":673,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getattributessync",{"_index":675,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getcomponentlogs",{"_index":1921,"title":{},"body":{"injectables/LogService.html":{}}}],["getcomponentlogs(component",{"_index":1871,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["getcomponentname",{"_index":383,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["getconnection",{"_index":955,"title":{},"body":{"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{}}}],["getconnection(id",{"_index":958,"title":{},"body":{"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{}}}],["getconnections",{"_index":1094,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getcontextattributes",{"_index":676,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getcontextattributes(component",{"_index":707,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getcontrol",{"_index":1953,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["getcontrol(controlname",{"_index":1963,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["getdescription",{"_index":389,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["getdeviceattributes",{"_index":677,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceattributes(id",{"_index":715,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceattributespromise",{"_index":678,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceattributespromise(id",{"_index":717,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getdeviceidfrom",{"_index":898,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["getdeviceidto",{"_index":896,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["getdevicelist",{"_index":871,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["getdevicelogs",{"_index":1922,"title":{},"body":{"injectables/LogService.html":{}}}],["getdevicelogs(id",{"_index":1875,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["getdevices",{"_index":1551,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchro",{"_index":1552,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchro(id",{"_index":1562,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchronize",{"_index":1553,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getdevicesynchronize(id",{"_index":1564,"title":{},"body":{"injectables/DeviceService.html":{}}}],["getf",{"_index":979,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["getfloor",{"_index":1749,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloor(id",{"_index":1762,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloors",{"_index":1714,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["getfloorsynchronize",{"_index":1750,"title":{},"body":{"injectables/FloorService.html":{}}}],["getfloorsynchronize(id",{"_index":1765,"title":{},"body":{"injectables/FloorService.html":{}}}],["getformvalues",{"_index":1954,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["geth",{"_index":1200,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getid",{"_index":387,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["getisforminvalid",{"_index":391,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["getlogs",{"_index":1868,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["getlogsbyid",{"_index":1923,"title":{},"body":{"injectables/LogService.html":{}}}],["getlogsbyid(id",{"_index":1881,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["getlogsurl",{"_index":1883,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["getmodel",{"_index":2082,"title":{},"body":{"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{}}}],["getmodel(id",{"_index":2250,"title":{},"body":{"injectables/ModelsService.html":{}}}],["getmodelattributes",{"_index":679,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getmodelattributes(id",{"_index":720,"title":{},"body":{"injectables/AttributeService.html":{}}}],["getmodelid",{"_index":1194,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getmodels",{"_index":2210,"title":{},"body":{"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["getname",{"_index":379,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["getposition",{"_index":1202,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getpositionh",{"_index":1208,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getpositionx",{"_index":1204,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getpositiony",{"_index":1206,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["getrandom",{"_index":812,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["getrandomcategory",{"_index":1348,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["getrandomh",{"_index":2312,"title":{},"body":{"classes/Tools3D.html":{}}}],["getrandomname",{"_index":813,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["getrandomunit",{"_index":2349,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["getrandomunitname",{"_index":2350,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["getrandomx",{"_index":2313,"title":{},"body":{"classes/Tools3D.html":{}}}],["getrandomy",{"_index":2314,"title":{},"body":{"classes/Tools3D.html":{}}}],["gettexturegroup",{"_index":1978,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["getting",{"_index":2600,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":381,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["getunit",{"_index":385,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["getx",{"_index":1196,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["gety",{"_index":1198,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["ghz",{"_index":2394,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["gigabits",{"_index":2385,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["gigabyte",{"_index":2376,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["gigahertz",{"_index":2395,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["git",{"_index":2685,"title":{},"body":{"index.html":{}}}],["github",{"_index":1779,"title":{},"body":{"components/HomeComponent.html":{}}}],["github/issues",{"_index":1839,"title":{},"body":{"components/HomeComponent.html":{}}}],["given",{"_index":711,"title":{},"body":{"injectables/AttributeService.html":{}}}],["good",{"_index":1020,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["google",{"_index":2697,"title":{},"body":{"index.html":{}}}],["gotodevice",{"_index":872,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{}}}],["gotodevice(deviceid",{"_index":884,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{}}}],["gracefully",{"_index":1911,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["gram",{"_index":2358,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["grants",{"_index":2929,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2648,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphical",{"_index":2631,"title":{},"body":{"index.html":{}}}],["graphics",{"_index":2668,"title":{},"body":{"index.html":{}}}],["greater",{"_index":2790,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":2876,"title":{},"body":{"license.html":{}}}],["grids",{"_index":1329,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["group",{"_index":1399,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["guard",{"_index":2285,"title":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2286,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"overview.html":{}}}],["guidelines",{"_index":2712,"title":{},"body":{"index.html":{}}}],["gyp",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["h",{"_index":806,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["h1",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["handle",{"_index":726,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["handleerror",{"_index":1924,"title":{},"body":{"injectables/LogService.html":{}}}],["handleerror(error",{"_index":1892,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["handleerrortemplate",{"_index":680,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["handleerrortemplate(operation",{"_index":722,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["handleerrortemplate(operationname",{"_index":1914,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["handlekeydown",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekeydown(event",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["handles",{"_index":581,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["header",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":602,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["height",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{}}}],["heirs",{"_index":2907,"title":{},"body":{"license.html":{}}}],["held",{"_index":2953,"title":{},"body":{"license.html":{}}}],["here",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{}}}],["hereby",{"_index":2879,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":2733,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":2738,"title":{},"body":{"license.html":{}}}],["hertz",{"_index":2392,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["home",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["home'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["home.component.html",{"_index":1786,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1785,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":198,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["hour",{"_index":2368,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["hpos",{"_index":1667,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["htmlinputelement).value",{"_index":415,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["http",{"_index":561,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["http://localhost:4200",{"_index":2689,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":559,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["httperrorresponse",{"_index":730,"title":{},"body":{"injectables/AttributeService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["httpheaders",{"_index":603,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["httpoptions",{"_index":552,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["https",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["https://172.17.0.2:3001",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://angular.io/guide/deployment",{"_index":2690,"title":{},"body":{"index.html":{}}}],["https://api.github.com",{"_index":1802,"title":{},"body":{"components/HomeComponent.html":{}}}],["https://github.com/karol",{"_index":2634,"title":{},"body":{"index.html":{}}}],["hz",{"_index":2391,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["icons",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":342,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{}}}],["id).pipe",{"_index":1578,"title":{},"body":{"injectables/DeviceService.html":{}}}],["id)?.name",{"_index":1540,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["id.tostring",{"_index":526,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["id_new",{"_index":533,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["id_uuid",{"_index":1112,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["idconed",{"_index":2267,"title":{},"body":{"injectables/ModelsService.html":{}}}],["ideal",{"_index":2783,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1130,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["idnew",{"_index":1525,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["ids",{"_index":2434,"title":{},"body":{"classes/Validation.html":{}}}],["idx",{"_index":835,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["ii",{"_index":2827,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2832,"title":{},"body":{"license.html":{}}}],["image",{"_index":2837,"title":{},"body":{"license.html":{}}}],["implement",{"_index":521,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["implementation",{"_index":2863,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":2874,"title":{},"body":{"license.html":{}}}],["implements",{"_index":317,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["implied",{"_index":2962,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["include",{"_index":2818,"title":{},"body":{"license.html":{}}}],["included",{"_index":1783,"title":{},"body":{"components/HomeComponent.html":{}}}],["including",{"_index":2653,"title":{},"body":{"index.html":{},"license.html":{}}}],["incorporate",{"_index":2772,"title":{},"body":{"license.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1135,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"interfaces/Position.html":{}}}],["ineffective",{"_index":2924,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":2942,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["information",{"_index":2726,"title":{},"body":{"license.html":{}}}],["infrastructure",{"_index":1331,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["infringement",{"_index":2770,"title":{},"body":{"license.html":{}}}],["init",{"_index":791,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["initialize",{"_index":1398,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["initialized",{"_index":1405,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["initializeform",{"_index":1161,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["initializes",{"_index":2214,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["inject",{"_index":393,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["inject(formbuilder",{"_index":407,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["injectable",{"_index":216,"title":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":548,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{},"overview.html":{}}}],["input",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{}}}],["input.ng",{"_index":1458,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["input:checked",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["input:focus",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["inputid",{"_index":954,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["insert",{"_index":2644,"title":{},"body":{"index.html":{}}}],["insertedid",{"_index":1256,"title":{},"body":{"components/DeviceAddComponent.html":{},"injectables/ModelsService.html":{}}}],["install",{"_index":2552,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["instance",{"_index":1128,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["instanceof",{"_index":657,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/FloorService.html":{}}}],["intended",{"_index":2813,"title":{},"body":{"license.html":{}}}],["intending",{"_index":2909,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":2667,"title":{},"body":{"index.html":{}}}],["interface",{"_index":833,"title":{"interfaces/ComponentDictionaryItem.html":{},"interfaces/ConnectionInterface.html":{},"interfaces/DeviceInterface.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"interfaces/UnitDictionaryItem.html":{}},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":844,"title":{},"body":{"interfaces/ComponentDictionaryItem.html":{},"interfaces/ConnectionInterface.html":{},"interfaces/DeviceInterface.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"interfaces/UnitDictionaryItem.html":{},"overview.html":{}}}],["internet",{"_index":1309,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["invalid",{"_index":473,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["invalid.ng",{"_index":1459,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["invalidate",{"_index":2943,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":2941,"title":{},"body":{"license.html":{}}}],["invalidnumber",{"_index":1396,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["inventory",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{}}}],["inventory✨—a",{"_index":2614,"title":{},"body":{"index.html":{}}}],["irrevocable",{"_index":2935,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":2882,"title":{},"body":{"license.html":{}}}],["iscomponent",{"_index":481,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["isdebugmode",{"_index":1125,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"interfaces/Position.html":{}}}],["isfieldinvalid",{"_index":1955,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["isfieldinvalid(fieldpath",{"_index":1966,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["isforminvalid",{"_index":343,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["isnan(num",{"_index":2440,"title":{},"body":{"classes/Validation.html":{}}}],["isnan(number(value",{"_index":1394,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["isproduction",{"_index":1949,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["issubmitdisabled",{"_index":1950,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["issubmitted",{"_index":329,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["issue",{"_index":1780,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["issue.number",{"_index":1854,"title":{},"body":{"components/HomeComponent.html":{}}}],["issue.state",{"_index":1857,"title":{},"body":{"components/HomeComponent.html":{}}}],["issue.title",{"_index":1855,"title":{},"body":{"components/HomeComponent.html":{}}}],["issue.user.login",{"_index":1856,"title":{},"body":{"components/HomeComponent.html":{}}}],["issues",{"_index":1781,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["issuesjson",{"_index":1787,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":708,"title":{},"body":{"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["item.name",{"_index":841,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["items",{"_index":1706,"title":{},"body":{"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["iv",{"_index":2840,"title":{},"body":{"license.html":{}}}],["jest/globals",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["jquery",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["js/faker",{"_index":1211,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{},"classes/Tools3D.html":{},"dependencies.html":{}}}],["jsdom",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":712,"title":{},"body":{"injectables/AttributeService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{}}}],["json.parse(item",{"_index":754,"title":{},"body":{"injectables/AttributeService.html":{}}}],["json.stringify(createddevice",{"_index":1594,"title":{},"body":{"injectables/DeviceService.html":{}}}],["json.stringify(data",{"_index":430,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{}}}],["json.stringify(device",{"_index":1264,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["json.stringify(devicetocreate",{"_index":1589,"title":{},"body":{"injectables/DeviceService.html":{}}}],["json.stringify(error.error",{"_index":1903,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["json.stringify(id",{"_index":2266,"title":{},"body":{"injectables/ModelsService.html":{}}}],["json.stringify(idnew",{"_index":1528,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["json.stringify(log",{"_index":1597,"title":{},"body":{"injectables/DeviceService.html":{},"components/ModelEditComponent.html":{}}}],["json.stringify(obj",{"_index":1541,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["json.stringify(res",{"_index":1254,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["json.stringify(this.adddeviceform.value",{"_index":1251,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["json.stringify(this.addmodelform.value",{"_index":2009,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["json.stringify(this.connection",{"_index":991,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["json.stringify(this.editdeviceform.value",{"_index":1420,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["json.stringify(this.md",{"_index":1813,"title":{},"body":{"components/HomeComponent.html":{}}}],["json.stringify(this.model",{"_index":2276,"title":{},"body":{"injectables/ModelsService.html":{}}}],["json.stringify(v",{"_index":777,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/ModelsService.html":{}}}],["json.stringify(value",{"_index":773,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/ModelsService.html":{}}}],["judged",{"_index":2922,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":2741,"title":{},"body":{"license.html":{}}}],["kb",{"_index":2371,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kbit",{"_index":2380,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kbps",{"_index":2389,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["key",{"_index":1007,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["keyboardevent",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["kg",{"_index":800,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["khz",{"_index":2398,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kilobit",{"_index":2381,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kilobits",{"_index":2390,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kilobyte",{"_index":2372,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kilogram",{"_index":2360,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kilohertz",{"_index":2399,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kilometer",{"_index":2357,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["kind",{"_index":2960,"title":{},"body":{"license.html":{}}}],["km",{"_index":798,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["knowledge",{"_index":2811,"title":{},"body":{"license.html":{}}}],["known",{"_index":2891,"title":{},"body":{"license.html":{}}}],["l",{"_index":802,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["large",{"_index":2905,"title":{},"body":{"license.html":{}}}],["lastvaluefrom",{"_index":1388,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["lastvaluefrom(this.devicesservice.updatedevice(this.editdeviceform.value",{"_index":1425,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["lastvaluefrom(this.logservice.createlog(log",{"_index":1423,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["latent",{"_index":2968,"title":{},"body":{"license.html":{}}}],["later",{"_index":2768,"title":{},"body":{"license.html":{}}}],["law",{"_index":2720,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2740,"title":{},"body":{"license.html":{}}}],["learning",{"_index":2680,"title":{},"body":{"index.html":{}}}],["left",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["legal",{"_index":2715,"title":{},"body":{"index.html":{},"license.html":{}}}],["legally",{"_index":2923,"title":{},"body":{"license.html":{}}}],["legend",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"overview.html":{}}}],["len",{"_index":1023,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["length",{"_index":2354,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["less",{"_index":2135,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["level",{"_index":1825,"title":{},"body":{"components/HomeComponent.html":{}}}],["leverages",{"_index":2662,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2735,"title":{},"body":{"license.html":{}}}],["library",{"_index":2665,"title":{},"body":{"index.html":{}}}],["license",{"_index":2612,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":2957,"title":{},"body":{"license.html":{}}}],["light",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["likeness",{"_index":2838,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2779,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2846,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2819,"title":{},"body":{"license.html":{}}}],["line",{"_index":1600,"title":{},"body":{"injectables/DeviceService.html":{}}}],["link",{"_index":820,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["list",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"index.html":{}}}],["list')).catch",{"_index":1016,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["list']).catch",{"_index":1017,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["list'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeviceEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["list.component.html",{"_index":478,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.scss",{"_index":477,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts",{"_index":475,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":1061,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:112",{"_index":1484,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:116",{"_index":1493,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:125",{"_index":1495,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:132",{"_index":1500,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:136",{"_index":1496,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:19",{"_index":504,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:20",{"_index":513,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:21",{"_index":506,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:22",{"_index":508,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:23",{"_index":510,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:24",{"_index":509,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:25",{"_index":512,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:26",{"_index":1067,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:27",{"_index":503,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:28",{"_index":1070,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:29",{"_index":491,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["list.component.ts:30",{"_index":1702,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:31",{"_index":507,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:32",{"_index":1483,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:34",{"_index":1054,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:36",{"_index":502,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:37",{"_index":1068,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:39",{"_index":2207,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:41",{"_index":1699,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:42",{"_index":496,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:43",{"_index":1497,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:44",{"_index":1066,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["list.component.ts:46",{"_index":1691,"title":{},"body":{"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["list.component.ts:48",{"_index":499,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:50",{"_index":1064,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:54",{"_index":1498,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:55",{"_index":1697,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:56",{"_index":1063,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:57",{"_index":2203,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:60",{"_index":1491,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:62",{"_index":1065,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:63",{"_index":494,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:64",{"_index":1695,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:66",{"_index":1059,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:72",{"_index":2200,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:83",{"_index":492,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:86",{"_index":1057,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list.component.ts:87",{"_index":501,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["list.component.ts:93",{"_index":1486,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["list.component.ts:94",{"_index":2198,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["list.component.ts:97",{"_index":1693,"title":{},"body":{"components/FloorListComponent.html":{}}}],["list.component.ts:99",{"_index":1055,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["list/attribute",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryListComponent.html":{},"components/DeviceEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/connection",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConnectionListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/devices",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DeviceListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/floor",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FloorListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["list/model",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["liter",{"_index":2362,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["literal",{"_index":695,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Floors.html":{}}}],["loadattributedictionary",{"_index":489,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["loadconnection",{"_index":1052,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["loaddevices",{"_index":1479,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["loaded",{"_index":2213,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["loadfloors",{"_index":1685,"title":{},"body":{"components/FloorListComponent.html":{}}}],["loadmodels",{"_index":1162,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{}}}],["loads",{"_index":2208,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["localstorage.getitem('theme",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["locating",{"_index":1342,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["lodash",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1422,"title":{"interfaces/Log.html":{}},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"coverage.html":{}}}],["log'},{'name",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["log.service",{"_index":620,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["log/log.component",{"_index":517,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["logcomponent",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"coverage.html":{}}}],["logerror",{"_index":1512,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["logging",{"_index":2227,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["logic",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"index.html":{}}}],["logical",{"_index":2607,"title":{},"body":{"index.html":{}}}],["logifexists",{"_index":814,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["logifexists(name",{"_index":831,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["login",{"_index":111,"title":{"interfaces/LogIn.html":{}},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logout",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["logparameters",{"_index":1862,"title":{"interfaces/LogParameters.html":{}},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logs",{"_index":1487,"title":{},"body":{"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["logs').pipe(retry(1",{"_index":1869,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["logs/attributes",{"_index":1879,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["logs/component",{"_index":1872,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["logs/devices",{"_index":1876,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["logservice",{"_index":348,"title":{"injectables/LogService.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"coverage.html":{}}}],["logtypebyname",{"_index":1649,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["logtypebyname(name",{"_index":1647,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["logunitifexists",{"_index":2351,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["logunitifexists(name",{"_index":2406,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["long",{"_index":930,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ModelAddComponent.html":{}}}],["looks",{"_index":1019,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["lot",{"_index":2678,"title":{},"body":{"index.html":{}}}],["m",{"_index":795,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["made",{"_index":2815,"title":{},"body":{"license.html":{}}}],["main",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["major",{"_index":2703,"title":{},"body":{"index.html":{}}}],["make",{"_index":2708,"title":{},"body":{"index.html":{}}}],["makes",{"_index":2728,"title":{},"body":{"license.html":{}}}],["map",{"_index":1574,"title":{},"body":{"injectables/DeviceService.html":{}}}],["map((res",{"_index":1579,"title":{},"body":{"injectables/DeviceService.html":{}}}],["mapped",{"_index":2684,"title":{},"body":{"index.html":{}}}],["march",{"_index":2858,"title":{},"body":{"license.html":{}}}],["markdown",{"_index":1836,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["markets",{"_index":1335,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["mass",{"_index":2359,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["match",{"_index":1318,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":2415,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.devicelist.length",{"_index":1510,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["math.floor(math.random",{"_index":836,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["math.pow(math.abs(y",{"_index":2339,"title":{},"body":{"classes/Tools3D.html":{}}}],["math.round(math.random",{"_index":2329,"title":{},"body":{"classes/Tools3D.html":{}}}],["math.sqrt(math.pow(math.abs(x",{"_index":2337,"title":{},"body":{"classes/Tools3D.html":{}}}],["max",{"_index":1241,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["maximum",{"_index":2896,"title":{},"body":{"license.html":{}}}],["maxpage",{"_index":1509,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["mb",{"_index":2373,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["mbit",{"_index":2382,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["mbps",{"_index":2387,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["md",{"_index":1788,"title":{},"body":{"components/HomeComponent.html":{}}}],["meaning",{"_index":2812,"title":{},"body":{"license.html":{}}}],["medium",{"_index":2899,"title":{},"body":{"license.html":{}}}],["megabit",{"_index":2383,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["megabits",{"_index":2388,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["megabyte",{"_index":2374,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["megahertz",{"_index":2397,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["member",{"_index":2904,"title":{},"body":{"license.html":{}}}],["memberof",{"_index":2429,"title":{},"body":{"classes/Validation.html":{}}}],["merchantability",{"_index":2964,"title":{},"body":{"license.html":{}}}],["message",{"_index":439,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["meter",{"_index":2353,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["method",{"_index":2211,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{}}}],["mg",{"_index":801,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["mhz",{"_index":2396,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["milligram",{"_index":2361,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["milliliter",{"_index":2364,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["millimeter",{"_index":2356,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["min",{"_index":805,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["minute",{"_index":2367,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["miscellaneous",{"_index":2995,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mkdirp",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["ml",{"_index":803,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["mm",{"_index":797,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["mode",{"_index":1138,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["model",{"_index":286,"title":{"classes/Model.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"interfaces/Dimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"coverage.html":{},"index.html":{}}}],["model'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["model._id",{"_index":2232,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.component",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["model.component.html",{"_index":1947,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.scss",{"_index":1946,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts",{"_index":1945,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"coverage.html":{}}}],["model.component.ts:103",{"_index":2094,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:107",{"_index":2084,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:109",{"_index":1965,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:113",{"_index":1970,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:119",{"_index":2088,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:21",{"_index":2090,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:22",{"_index":2091,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:23",{"_index":1971,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:24",{"_index":1976,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:25",{"_index":1975,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:26",{"_index":1973,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:27",{"_index":1972,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:28",{"_index":1974,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:29",{"_index":1958,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:32",{"_index":2089,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:33",{"_index":2092,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:34",{"_index":1977,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:39",{"_index":1969,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:67",{"_index":1979,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:71",{"_index":1967,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["model.component.ts:76",{"_index":1960,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:83",{"_index":1964,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:87",{"_index":1962,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["model.component.ts:94",{"_index":2087,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.component.ts:99",{"_index":2093,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["model.dimension.depth",{"_index":2240,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.dimension.height",{"_index":2239,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.dimension.width",{"_index":2238,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.name",{"_index":2237,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model.texture",{"_index":2241,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model/${model._id",{"_index":2233,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["model/:id",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["model/add",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModelAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["model/edit",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModelEditComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["modeladdcomponent",{"_index":202,"title":{"components/ModelAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["modeleditcomponent",{"_index":204,"title":{"components/ModelEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["modelid",{"_index":300,"title":{},"body":{"classes/Attribute.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/Position.html":{},"classes/Validation.html":{}}}],["modellist",{"_index":1155,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/Tools3D.html":{}}}],["modellistpage",{"_index":2190,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["modelobj",{"_index":1283,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["modelobj.name",{"_index":1284,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["models",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"injectables/TemplatePageTitleStrategy.html":{},"index.html":{}}}],["models.service",{"_index":738,"title":{},"body":{"injectables/AttributeService.html":{}}}],["modelservice",{"_index":683,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceAddComponent.html":{}}}],["modelslist",{"_index":2191,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["modelslistcomponent",{"_index":205,"title":{"components/ModelsListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["modelsservice",{"_index":684,"title":{"injectables/ModelsService.html":{}},"body":{"injectables/AttributeService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverModel.html":{},"coverage.html":{}}}],["modelsservice.handleerrortemplate",{"_index":2280,"title":{},"body":{"injectables/ModelsService.html":{}}}],["modify",{"_index":2771,"title":{},"body":{"license.html":{}}}],["module",{"_index":211,"title":{"modules/AppRoutingModule.html":{}},"body":{"classes/Validation.html":{},"overview.html":{}}}],["modules",{"_index":213,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["mongo",{"_index":2638,"title":{},"body":{"index.html":{}}}],["mongoatlas",{"_index":2656,"title":{},"body":{"index.html":{}}}],["mongoatlas|oracle",{"_index":2649,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":2562,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["moral",{"_index":2828,"title":{},"body":{"license.html":{}}}],["more",{"_index":1899,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["motivation",{"_index":2602,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":2795,"title":{},"body":{"license.html":{}}}],["ms",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["multiple",{"_index":1307,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["mytheme",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["n/a",{"_index":1148,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["name/address",{"_index":1731,"title":{},"body":{"components/FloorListComponent.html":{}}}],["national",{"_index":2862,"title":{},"body":{"license.html":{}}}],["navigates",{"_index":564,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/DeviceListComponent.html":{}}}],["navigatetodevicelist",{"_index":1365,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["navigationend",{"_index":1502,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["necessary",{"_index":2980,"title":{},"body":{"license.html":{}}}],["need",{"_index":1843,"title":{},"body":{"components/HomeComponent.html":{}}}],["neighboring",{"_index":2817,"title":{},"body":{"license.html":{}}}],["network",{"_index":1894,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["networks",{"_index":1330,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["never",{"_index":999,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["new",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"coverage.html":{}}}],["new_id",{"_index":2225,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["newid",{"_index":1771,"title":{},"body":{"injectables/FloorService.html":{}}}],["newly",{"_index":2201,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["newvalue",{"_index":2110,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["next",{"_index":641,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"components/ModelsListComponent.html":{}}}],["ng",{"_index":514,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngbpagination",{"_index":2189,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["ngbpaginationmodule",{"_index":476,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["ngondestroy",{"_index":1686,"title":{},"body":{"components/FloorListComponent.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["ngx",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["ngzone",{"_index":346,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["node",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2932,"title":{},"body":{"license.html":{}}}],["nosql",{"_index":2655,"title":{},"body":{"index.html":{}}}],["notification",{"_index":1515,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["now",{"_index":2890,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2571,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["null",{"_index":305,"title":{},"body":{"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Validation.html":{}}}],["num",{"_index":2438,"title":{},"body":{"classes/Validation.html":{}}}],["number",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"interfaces/Dimension.html":{},"components/FloorListComponent.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"license.html":{}}}],["number(value",{"_index":1395,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["numbers",{"_index":2136,"title":{},"body":{"components/ModelEditComponent.html":{},"classes/Validation.html":{}}}],["numbervalidator",{"_index":1364,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["numeric",{"_index":2436,"title":{},"body":{"classes/Validation.html":{}}}],["obj",{"_index":1501,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["object",{"_index":585,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":808,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["objectid",{"_index":438,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["objectname",{"_index":1549,"title":{},"body":{"injectables/DeviceService.html":{}}}],["objects",{"_index":702,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["obligation",{"_index":2986,"title":{},"body":{"license.html":{}}}],["observable",{"_index":568,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["observable((observer",{"_index":639,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{}}}],["observer.complete",{"_index":651,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{}}}],["observer.error(err",{"_index":653,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/FloorService.html":{}}}],["observer.next(created",{"_index":650,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["observer.next(newid",{"_index":1775,"title":{},"body":{"injectables/FloorService.html":{}}}],["obtaining",{"_index":2979,"title":{},"body":{"license.html":{}}}],["occupies",{"_index":1324,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["occurred",{"_index":1895,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{}}}],["occurs",{"_index":1913,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["octokit/core",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["of(fallbackresult",{"_index":1918,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["of(result",{"_index":785,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["offers",{"_index":2958,"title":{},"body":{"license.html":{}}}],["omit",{"_index":572,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["onchange",{"_index":2083,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["onchange(event",{"_index":2086,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["ondestroy",{"_index":1676,"title":{},"body":{"components/FloorListComponent.html":{}}}],["one",{"_index":646,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"classes/Validation.html":{}}}],["onerror",{"_index":1789,"title":{},"body":{"components/HomeComponent.html":{}}}],["onerror(data",{"_index":1795,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninit",{"_index":318,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["onload",{"_index":1790,"title":{},"body":{"components/HomeComponent.html":{}}}],["onload(data",{"_index":1797,"title":{},"body":{"components/HomeComponent.html":{}}}],["onlyself",{"_index":416,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["onpagechange",{"_index":1687,"title":{},"body":{"components/FloorListComponent.html":{}}}],["onpagechange(page",{"_index":1698,"title":{},"body":{"components/FloorListComponent.html":{}}}],["onpagesizechange",{"_index":1688,"title":{},"body":{"components/FloorListComponent.html":{}}}],["onpagesizechange(pagesize",{"_index":1700,"title":{},"body":{"components/FloorListComponent.html":{}}}],["onsuccess",{"_index":1791,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsuccess(data",{"_index":1799,"title":{},"body":{"components/HomeComponent.html":{}}}],["opacity",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":2705,"title":{},"body":{"index.html":{}}}],["openfacebooklink",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["openfacebooklink(event",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["openlink",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["openlink(url",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["openwindow",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["openwindow(url",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["operation",{"_index":441,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["operationname",{"_index":1905,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["optional",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{}}}],["optionally",{"_index":1513,"title":{},"body":{"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{}}}],["oracle",{"_index":2639,"title":{},"body":{"index.html":{}}}],["orbitcontrols",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["origin",{"_index":609,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/DeviceService.html":{}}}],["original",{"_index":642,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"license.html":{}}}],["others",{"_index":2794,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1890,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"license.html":{}}}],["out",{"_index":1507,"title":{},"body":{"components/DeviceListComponent.html":{},"overview.html":{}}}],["overhead",{"_index":1321,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["override",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["overtly",{"_index":2880,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2988,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":2753,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":2751,"title":{},"body":{"license.html":{}}}],["owners",{"_index":2758,"title":{},"body":{"license.html":{}}}],["package",{"_index":2513,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1045,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["pagesize",{"_index":482,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["paragraph",{"_index":2847,"title":{},"body":{"license.html":{}}}],["param",{"_index":626,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"classes/Validation.html":{}}}],["parameter",{"_index":2673,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{},"index.html":{}}}],["parametric",{"_index":2670,"title":{},"body":{"index.html":{}}}],["parliament",{"_index":2855,"title":{},"body":{"license.html":{}}}],["part",{"_index":2791,"title":{},"body":{"license.html":{}}}],["partial",{"_index":789,"title":{},"body":{"classes/AttributesDictionary.html":{},"license.html":{}}}],["particular",{"_index":2966,"title":{},"body":{"license.html":{}}}],["party",{"_index":2984,"title":{},"body":{"license.html":{}}}],["patch",{"_index":1404,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["patent",{"_index":2952,"title":{},"body":{"license.html":{}}}],["path",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"dependencies.html":{}}}],["per",{"_index":1707,"title":{},"body":{"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["perform",{"_index":2823,"title":{},"body":{"license.html":{}}}],["performed",{"_index":1865,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["performer(s",{"_index":2831,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":2760,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":2974,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["permitted",{"_index":2877,"title":{},"body":{"license.html":{}}}],["person",{"_index":2800,"title":{},"body":{"license.html":{}}}],["person's",{"_index":2836,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2978,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":2835,"title":{},"body":{"license.html":{}}}],["physical",{"_index":817,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["pipe",{"_index":739,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ModelsService.html":{}}}],["pipe(catcherror(this.handleerrortemplate('updatedevice",{"_index":1605,"title":{},"body":{"injectables/DeviceService.html":{}}}],["pipe(retry(1",{"_index":624,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["pipe(takeuntil(this.unsubscribe",{"_index":1715,"title":{},"body":{"components/FloorListComponent.html":{}}}],["place",{"_index":1721,"title":{},"body":{"components/FloorListComponent.html":{}}}],["planned",{"_index":2699,"title":{},"body":{"index.html":{}}}],["platform",{"_index":2630,"title":{},"body":{"index.html":{}}}],["play",{"_index":1339,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["please",{"_index":933,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"index.html":{}}}],["pointer",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":129,"title":{"interfaces/Position.html":{}},"body":{"components/AppComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["positiongroup",{"_index":1239,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["positiongroup.get('h')?.setvalue(faker.number.int",{"_index":1243,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["positiongroup.get('x')?.setvalue(faker.number.int",{"_index":1240,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["positiongroup.get('y')?.setvalue(faker.number.int",{"_index":1242,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["positionh",{"_index":1165,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["positionx",{"_index":1163,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["positiony",{"_index":1164,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["possible",{"_index":2776,"title":{},"body":{"license.html":{}}}],["post(`${environment.baseurl}/devices",{"_index":1606,"title":{},"body":{"injectables/DeviceService.html":{}}}],["post(`${environment.baseurl}/logs",{"_index":1598,"title":{},"body":{"injectables/DeviceService.html":{}}}],["post(`${this.baseurl}/attributesdictionary",{"_index":637,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["post(environment.baseurl",{"_index":769,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["postcode",{"_index":1674,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["postdevice",{"_index":1554,"title":{},"body":{"injectables/DeviceService.html":{}}}],["postdevice(data",{"_index":1568,"title":{},"body":{"injectables/DeviceService.html":{}}}],["preiskorn/3d",{"_index":2635,"title":{},"body":{"index.html":{}}}],["prepared",{"_index":2658,"title":{},"body":{"index.html":{}}}],["present",{"_index":2971,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":2925,"title":{},"body":{"license.html":{}}}],["pressed",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["pretty",{"_index":2010,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["print",{"_index":2011,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["prismjs",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["privacy",{"_index":2834,"title":{},"body":{"license.html":{}}}],["private",{"_index":408,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["proceed",{"_index":1719,"title":{},"body":{"components/FloorListComponent.html":{}}}],["process",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["production",{"_index":2787,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2613,"title":{},"body":{"index.html":{}}}],["promise",{"_index":705,"title":{},"body":{"injectables/AttributeService.html":{}}}],["promise((resolve",{"_index":1529,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["promote",{"_index":2782,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":2902,"title":{},"body":{"license.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"properties.html":{}}}],["property",{"_index":823,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Device.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"interfaces/Position.html":{}}}],["protected",{"_index":2816,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":2841,"title":{},"body":{"license.html":{}}}],["protection",{"_index":2860,"title":{},"body":{"license.html":{}}}],["provide",{"_index":934,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"license.html":{}}}],["provided",{"_index":1310,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"license.html":{}}}],["provided'}${error.error",{"_index":1902,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["providedin",{"_index":621,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["providers",{"_index":2078,"title":{},"body":{"components/ModelEditComponent.html":{},"overview.html":{}}}],["provides",{"_index":2725,"title":{},"body":{"license.html":{}}}],["proximity",{"_index":1334,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"license.html":{}}}],["publicity",{"_index":2833,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":2807,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2700,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2739,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2778,"title":{},"body":{"license.html":{}}}],["put",{"_index":1602,"title":{},"body":{"injectables/DeviceService.html":{}}}],["put(`${environment.baseurl}/attributesdictionary/${id",{"_index":654,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["put(`${environment.baseurl}/floors/${id",{"_index":1776,"title":{},"body":{"injectables/FloorService.html":{}}}],["put(`${this.baseurl}/models/${id",{"_index":2277,"title":{},"body":{"injectables/ModelsService.html":{}}}],["put(environment.baseurl",{"_index":779,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["quiet",{"_index":2917,"title":{},"body":{"license.html":{}}}],["rack",{"_index":2336,"title":{},"body":{"classes/Tools3D.html":{}}}],["racks",{"_index":1320,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/Tools3D.html":{}}}],["radius",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["random",{"_index":1288,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["range",{"_index":1508,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["rate",{"_index":2386,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["reactiveformsmodule",{"_index":320,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["readonly",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["reason",{"_index":2921,"title":{},"body":{"license.html":{}}}],["record",{"_index":1181,"title":{},"body":{"components/DeviceAddComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["red",{"_index":1462,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["redistribute",{"_index":2774,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1345,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["refresh",{"_index":1726,"title":{},"body":{"components/FloorListComponent.html":{}}}],["regarding",{"_index":2730,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2845,"title":{},"body":{"license.html":{}}}],["register",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["related",{"_index":1864,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"index.html":{},"license.html":{}}}],["relational",{"_index":2654,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":821,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"license.html":{}}}],["relativeto",{"_index":1520,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["relevant",{"_index":2626,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":2765,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":2761,"title":{},"body":{"license.html":{}}}],["reloads",{"_index":1488,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["remainder",{"_index":2944,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":2946,"title":{},"body":{"license.html":{}}}],["remove",{"_index":643,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"components/FloorListComponent.html":{}}}],["removed",{"_index":1847,"title":{},"body":{"components/HomeComponent.html":{}}}],["render",{"_index":2666,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":1844,"title":{},"body":{"components/HomeComponent.html":{}}}],["repos",{"_index":2633,"title":{},"body":{"index.html":{}}}],["representation",{"_index":1145,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"index.html":{}}}],["representations",{"_index":2959,"title":{},"body":{"license.html":{}}}],["representing",{"_index":714,"title":{},"body":{"injectables/AttributeService.html":{}}}],["represents",{"_index":787,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"interfaces/Position.html":{}}}],["reproduce",{"_index":2821,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":2789,"title":{},"body":{"license.html":{}}}],["request",{"_index":584,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"dependencies.html":{}}}],["requestdata",{"_index":1604,"title":{},"body":{"injectables/DeviceService.html":{}}}],["requests",{"_index":2701,"title":{},"body":{"index.html":{}}}],["required",{"_index":449,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeDictionaryService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"license.html":{}}}],["requirements",{"_index":1319,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["requires",{"_index":1328,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["res",{"_index":1257,"title":{},"body":{"components/DeviceAddComponent.html":{},"injectables/DeviceService.html":{},"components/ModelAddComponent.html":{}}}],["rescission",{"_index":2912,"title":{},"body":{"license.html":{}}}],["reset",{"_index":1505,"title":{},"body":{"components/DeviceListComponent.html":{},"overview.html":{}}}],["resolve",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/DeviceListComponent.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["resolve(route",{"_index":2290,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["resolvedevicelist",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["resolvemodellist",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["resolverdevice",{"_index":267,"title":{"guards/ResolverDevice.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ResolverDevice.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["resolvermodel",{"_index":268,"title":{"guards/ResolverModel.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["resolves",{"_index":706,"title":{},"body":{"injectables/AttributeService.html":{}}}],["respect",{"_index":2948,"title":{},"body":{"license.html":{}}}],["response",{"_index":583,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["responsetype",{"_index":1815,"title":{},"body":{"components/HomeComponent.html":{}}}],["responsibility",{"_index":2976,"title":{},"body":{"license.html":{}}}],["rest",{"_index":2657,"title":{},"body":{"index.html":{}}}],["result",{"_index":723,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["result._id",{"_index":1595,"title":{},"body":{"injectables/DeviceService.html":{}}}],["resulting",{"_index":2737,"title":{},"body":{"license.html":{}}}],["results",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":2829,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":594,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["retrieved",{"_index":595,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["retrieves",{"_index":590,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["retrieving",{"_index":1861,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["retry",{"_index":615,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["retry(1",{"_index":740,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ModelsService.html":{}}}],["return",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["returned",{"_index":784,"title":{},"body":{"injectables/AttributeService.html":{},"components/HomeComponent.html":{}}}],["returns",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{}}}],["reuse",{"_index":2773,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":2911,"title":{},"body":{"license.html":{}}}],["right",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["rights",{"_index":2747,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["roads",{"_index":1333,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["role",{"_index":1340,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["roles",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["root'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["route",{"_index":1482,"title":{},"body":{"components/DeviceListComponent.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["route.id",{"_index":1536,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["router",{"_index":347,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["routermodule",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routermodule.forroot(routes",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routerstate",{"_index":2309,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["routerstatesnapshot",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routes",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["routing.module.ts",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["routing.module.ts:29",{"_index":2307,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["routing.module.ts:34",{"_index":2308,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["royalty",{"_index":2931,"title":{},"body":{"license.html":{}}}],["run",{"_index":2608,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":613,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":616,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{}}}],["s",{"_index":804,"title":{},"body":{"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["sandbox",{"_index":2623,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["scientific",{"_index":2764,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["sdata",{"_index":1888,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["search",{"_index":1646,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["searchcategory",{"_index":1352,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["second",{"_index":2365,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["selected",{"_index":2231,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["selectedattributedictionary",{"_index":483,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["selectedconnection",{"_index":1046,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["selecteddevice",{"_index":1475,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["selectedfloor",{"_index":1679,"title":{},"body":{"components/FloorListComponent.html":{}}}],["selectedmodel",{"_index":2192,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["selecting",{"_index":1341,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["server",{"_index":697,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"dependencies.html":{}}}],["service",{"_index":2212,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["services",{"_index":1338,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"license.html":{}}}],["services/attribute",{"_index":398,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{}}}],["services/connection.service",{"_index":902,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["services/device.service",{"_index":903,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"guards/ResolverDevice.html":{}}}],["services/floor.service",{"_index":1703,"title":{},"body":{"components/FloorListComponent.html":{}}}],["services/log.service",{"_index":400,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["services/models.service",{"_index":1213,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"guards/ResolverModel.html":{}}}],["set",{"_index":1262,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Validation.html":{}}}],["shadow",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["shall",{"_index":2910,"title":{},"body":{"license.html":{}}}],["shaper",{"_index":1638,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["shared",{"_index":2419,"title":{},"body":{"classes/Validation.html":{}}}],["shared/attribute",{"_index":735,"title":{},"body":{"injectables/AttributeService.html":{}}}],["shared/attributesdictionary",{"_index":401,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{}}}],["shared/componentdictionary",{"_index":402,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["shared/connection",{"_index":904,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{}}}],["shared/device",{"_index":736,"title":{},"body":{"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"guards/ResolverDevice.html":{},"classes/Tools3D.html":{}}}],["shared/devicecategories",{"_index":403,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["shared/devicetypes",{"_index":404,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/DeviceAddComponent.html":{},"components/ModelAddComponent.html":{}}}],["shared/floors",{"_index":1704,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["shared/model",{"_index":1214,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"guards/ResolverModel.html":{},"classes/Tools3D.html":{}}}],["shared/validation",{"_index":1215,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["show",{"_index":1514,"title":{},"body":{"components/DeviceListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["showdown",{"_index":1810,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["side",{"_index":1662,"title":{},"body":{"interfaces/Dimension.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["similar",{"_index":2869,"title":{},"body":{"license.html":{}}}],["simple",{"_index":2628,"title":{},"body":{"index.html":{}}}],["site",{"_index":1327,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["size",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectionListComponent.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["skiplocationchange",{"_index":1522,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["slice",{"_index":1083,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["slider",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["slider:before",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":1091,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["solid",{"_index":1461,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["solution",{"_index":2615,"title":{},"body":{"index.html":{}}}],["solutions",{"_index":2651,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["space",{"_index":1131,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["spatial",{"_index":2618,"title":{},"body":{"index.html":{}}}],["specific",{"_index":819,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["specifically",{"_index":1315,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["specified",{"_index":688,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["specifies",{"_index":2676,"title":{},"body":{"index.html":{}}}],["specify",{"_index":528,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/3d/3d.component.ts",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["src/app/components/3d/3dtools.ts",{"_index":2311,"title":{},"body":{"classes/Tools3D.html":{},"coverage.html":{}}}],["src/app/components/3d/3dtools.ts:13",{"_index":2323,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:14",{"_index":2318,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:15",{"_index":2322,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:17",{"_index":2320,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:18",{"_index":2321,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:19",{"_index":2319,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:21",{"_index":2324,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:45",{"_index":2328,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/3d/3dtools.ts:59",{"_index":2326,"title":{},"body":{"classes/Tools3D.html":{}}}],["src/app/components/attribute",{"_index":315,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"coverage.html":{}}}],["src/app/components/attribute/add",{"_index":2453,"title":{},"body":{"coverage.html":{}}}],["src/app/components/attribute/attribute",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["src/app/components/attribute/edit",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["src/app/components/connection/add",{"_index":861,"title":{},"body":{"components/ConnectionAddComponent.html":{},"coverage.html":{}}}],["src/app/components/connection/connection",{"_index":1042,"title":{},"body":{"components/ConnectionListComponent.html":{},"coverage.html":{}}}],["src/app/components/connection/edit",{"_index":951,"title":{},"body":{"components/ConnectionEditComponent.html":{},"coverage.html":{}}}],["src/app/components/devices/add",{"_index":1149,"title":{},"body":{"components/DeviceAddComponent.html":{},"coverage.html":{}}}],["src/app/components/devices/devices",{"_index":1473,"title":{},"body":{"components/DeviceListComponent.html":{},"coverage.html":{}}}],["src/app/components/devices/edit",{"_index":1360,"title":{},"body":{"components/DeviceEditComponent.html":{},"coverage.html":{}}}],["src/app/components/floors/add",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["src/app/components/floors/edit",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["src/app/components/floors/floor",{"_index":1675,"title":{},"body":{"components/FloorListComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1778,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":1808,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":1803,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:23",{"_index":1806,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":1807,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:25",{"_index":1805,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:27",{"_index":1804,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:33",{"_index":1801,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:35",{"_index":1793,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:79",{"_index":1794,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:85",{"_index":1798,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:89",{"_index":1796,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:93",{"_index":1800,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/log/log.component.ts",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["src/app/components/models/add",{"_index":1944,"title":{},"body":{"components/ModelAddComponent.html":{},"coverage.html":{}}}],["src/app/components/models/edit",{"_index":2077,"title":{},"body":{"components/ModelEditComponent.html":{},"coverage.html":{}}}],["src/app/components/models/model",{"_index":2188,"title":{},"body":{"components/ModelsListComponent.html":{},"coverage.html":{}}}],["src/app/resolverdevice.ts",{"_index":2287,"title":{},"body":{"guards/ResolverDevice.html":{},"coverage.html":{}}}],["src/app/resolverdevice.ts:12",{"_index":2289,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["src/app/resolverdevice.ts:15",{"_index":2293,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["src/app/resolvermodel.ts",{"_index":2299,"title":{},"body":{"guards/ResolverModel.html":{},"coverage.html":{}}}],["src/app/resolvermodel.ts:12",{"_index":2301,"title":{},"body":{"guards/ResolverModel.html":{}}}],["src/app/resolvermodel.ts:15",{"_index":2303,"title":{},"body":{"guards/ResolverModel.html":{}}}],["src/app/services/attribute",{"_index":549,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"coverage.html":{}}}],["src/app/services/attribute.service.ts",{"_index":668,"title":{},"body":{"injectables/AttributeService.html":{},"coverage.html":{}}}],["src/app/services/attribute.service.ts:102",{"_index":721,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:114",{"_index":709,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:158",{"_index":699,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:169",{"_index":693,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:180",{"_index":691,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:19",{"_index":685,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:192",{"_index":687,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:212",{"_index":732,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:223",{"_index":696,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:241",{"_index":725,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:29",{"_index":733,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:39",{"_index":700,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:52",{"_index":703,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:73",{"_index":716,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/attribute.service.ts:87",{"_index":718,"title":{},"body":{"injectables/AttributeService.html":{}}}],["src/app/services/connection.service.ts",{"_index":1092,"title":{},"body":{"injectables/ConnectionService.html":{},"coverage.html":{}}}],["src/app/services/connection.service.ts:103",{"_index":1106,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:114",{"_index":1101,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:134",{"_index":1104,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:17",{"_index":1096,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:26",{"_index":1107,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:36",{"_index":1103,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:47",{"_index":1102,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:58",{"_index":1100,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:69",{"_index":1099,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:81",{"_index":1097,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/device.service.ts",{"_index":1548,"title":{},"body":{"injectables/DeviceService.html":{},"coverage.html":{}}}],["src/app/services/device.service.ts:110",{"_index":1569,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:116",{"_index":1567,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:15",{"_index":1572,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:16",{"_index":1556,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:20",{"_index":1573,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:29",{"_index":1561,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:35",{"_index":1565,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:39",{"_index":1563,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:48",{"_index":1560,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:54",{"_index":1559,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:60",{"_index":1557,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/device.service.ts:95",{"_index":1571,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/app/services/floor.service.ts",{"_index":1746,"title":{},"body":{"injectables/FloorService.html":{},"coverage.html":{}}}],["src/app/services/floor.service.ts:112",{"_index":1768,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:123",{"_index":1758,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:129",{"_index":1761,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:17",{"_index":1752,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:25",{"_index":1769,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:35",{"_index":1764,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:44",{"_index":1766,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:53",{"_index":1763,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:64",{"_index":1757,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:75",{"_index":1756,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/floor.service.ts:86",{"_index":1753,"title":{},"body":{"injectables/FloorService.html":{}}}],["src/app/services/log.service.ts",{"_index":1858,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/services/log.service.ts:102",{"_index":1929,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:113",{"_index":1933,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:124",{"_index":1928,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:130",{"_index":1934,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:139",{"_index":1927,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:150",{"_index":1937,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:163",{"_index":1935,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:183",{"_index":1936,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:56",{"_index":1938,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:57",{"_index":1926,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:61",{"_index":1939,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:71",{"_index":1932,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:80",{"_index":1930,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:91",{"_index":1931,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/models.service.ts",{"_index":2242,"title":{},"body":{"injectables/ModelsService.html":{},"coverage.html":{}}}],["src/app/services/models.service.ts:119",{"_index":2255,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:134",{"_index":2253,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:16",{"_index":2256,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:17",{"_index":2245,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:25",{"_index":2257,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:35",{"_index":2252,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:45",{"_index":2251,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:59",{"_index":2249,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:70",{"_index":2248,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/services/models.service.ts:87",{"_index":2246,"title":{},"body":{"injectables/ModelsService.html":{}}}],["src/app/shared/attribute.ts",{"_index":294,"title":{},"body":{"classes/Attribute.html":{},"coverage.html":{}}}],["src/app/shared/attribute.ts:17",{"_index":303,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:18",{"_index":307,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:19",{"_index":308,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:20",{"_index":306,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:21",{"_index":304,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attribute.ts:22",{"_index":302,"title":{},"body":{"classes/Attribute.html":{}}}],["src/app/shared/attributesdictionary.ts",{"_index":786,"title":{},"body":{"classes/AttributesDictionary.html":{},"coverage.html":{}}}],["src/app/shared/attributesdictionary.ts:5",{"_index":792,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["src/app/shared/attributesdictionary.ts:6",{"_index":793,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["src/app/shared/attributesdictionary.ts:7",{"_index":794,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["src/app/shared/attributesdictionary.ts:8",{"_index":807,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["src/app/shared/attributesdictionary.ts:9",{"_index":790,"title":{},"body":{"classes/AttributesDictionary.html":{}}}],["src/app/shared/componentdictionary.ts",{"_index":809,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"coverage.html":{}}}],["src/app/shared/componentdictionary.ts:12",{"_index":825,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["src/app/shared/componentdictionary.ts:21",{"_index":828,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["src/app/shared/componentdictionary.ts:25",{"_index":829,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["src/app/shared/componentdictionary.ts:30",{"_index":830,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["src/app/shared/componentdictionary.ts:34",{"_index":827,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["src/app/shared/componentdictionary.ts:38",{"_index":832,"title":{},"body":{"classes/ComponentDictionary.html":{}}}],["src/app/shared/connection.ts",{"_index":845,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"coverage.html":{}}}],["src/app/shared/connection.ts:22",{"_index":851,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/connection.ts:23",{"_index":853,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/connection.ts:24",{"_index":852,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/connection.ts:25",{"_index":850,"title":{},"body":{"classes/Connection.html":{}}}],["src/app/shared/device.ts",{"_index":1123,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"coverage.html":{}}}],["src/app/shared/device.ts:34",{"_index":1134,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:39",{"_index":1142,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:44",{"_index":1140,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:49",{"_index":1143,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:54",{"_index":1127,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/device.ts:72",{"_index":1144,"title":{},"body":{"classes/Device.html":{}}}],["src/app/shared/devicecategories.ts",{"_index":1302,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"coverage.html":{}}}],["src/app/shared/devicecategories.ts:12",{"_index":1355,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:33",{"_index":1358,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:37",{"_index":1356,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:41",{"_index":1357,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:45",{"_index":1359,"title":{},"body":{"classes/DeviceCategoryDict.html":{}}}],["src/app/shared/devicecategories.ts:7",{"_index":1304,"title":{},"body":{"classes/DeviceCategory.html":{}}}],["src/app/shared/devicecategories.ts:8",{"_index":1303,"title":{},"body":{"classes/DeviceCategory.html":{}}}],["src/app/shared/devicetypes.ts",{"_index":1609,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"coverage.html":{}}}],["src/app/shared/devicetypes.ts:11",{"_index":1611,"title":{},"body":{"classes/DeviceType.html":{}}}],["src/app/shared/devicetypes.ts:13",{"_index":1613,"title":{},"body":{"classes/DeviceType.html":{}}}],["src/app/shared/devicetypes.ts:14",{"_index":1612,"title":{},"body":{"classes/DeviceType.html":{}}}],["src/app/shared/devicetypes.ts:19",{"_index":1650,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:48",{"_index":1652,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:52",{"_index":1653,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:56",{"_index":1654,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:60",{"_index":1651,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/devicetypes.ts:68",{"_index":1655,"title":{},"body":{"classes/DeviceTypeDict.html":{}}}],["src/app/shared/floors.ts",{"_index":1666,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"coverage.html":{}}}],["src/app/shared/model.ts",{"_index":1657,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["src/app/shared/model.ts:21",{"_index":1941,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/model.ts:22",{"_index":1943,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/model.ts:23",{"_index":1942,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/model.ts:24",{"_index":1940,"title":{},"body":{"classes/Model.html":{}}}],["src/app/shared/unitdictionary",{"_index":405,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["src/app/shared/unitdictionary.ts",{"_index":2346,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"coverage.html":{}}}],["src/app/shared/unitdictionary.ts:12",{"_index":2400,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["src/app/shared/unitdictionary.ts:44",{"_index":2403,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["src/app/shared/unitdictionary.ts:48",{"_index":2404,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["src/app/shared/unitdictionary.ts:53",{"_index":2405,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["src/app/shared/unitdictionary.ts:57",{"_index":2402,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["src/app/shared/unitdictionary.ts:61",{"_index":2407,"title":{},"body":{"classes/UnitDictionary.html":{}}}],["src/app/shared/validation.ts",{"_index":2410,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/app/shared/validation.ts:23",{"_index":2417,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/validation.ts:48",{"_index":2413,"title":{},"body":{"classes/Validation.html":{}}}],["src/app/shared/validation.ts:68",{"_index":2414,"title":{},"body":{"classes/Validation.html":{}}}],["src/environments/environment",{"_index":1980,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":2507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2282,"title":{},"body":{"injectables/ModelsService.html":{},"index.html":{}}}],["standalone",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["start",{"_index":1824,"title":{},"body":{"components/HomeComponent.html":{}}}],["started",{"_index":2601,"title":{"index.html":{},"license.html":{}},"body":{}}],["startgoto",{"_index":2688,"title":{},"body":{"index.html":{}}}],["state",{"_index":2302,"title":{},"body":{"guards/ResolverModel.html":{}}}],["statement",{"_index":2920,"title":{},"body":{"license.html":{}}}],["statements",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":2412,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":587,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{}}}],["statutory",{"_index":2963,"title":{},"body":{"license.html":{}}}],["store",{"_index":2675,"title":{},"body":{"index.html":{}}}],["stored",{"_index":2672,"title":{},"body":{"index.html":{}}}],["stream",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["street",{"_index":1671,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["string(v._id",{"_index":2271,"title":{},"body":{"injectables/ModelsService.html":{}}}],["string(v.insertedid",{"_index":2273,"title":{},"body":{"injectables/ModelsService.html":{}}}],["stringify",{"_index":1480,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["stringify(obj",{"_index":1499,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["strings",{"_index":2437,"title":{},"body":{"classes/Validation.html":{}}}],["structure",{"_index":1863,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["structures",{"_index":2652,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["subject",{"_index":1701,"title":{},"body":{"components/FloorListComponent.html":{},"license.html":{}}}],["sublicensable",{"_index":2934,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1428,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["submitform",{"_index":337,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["submitted",{"_index":2080,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["subscribe",{"_index":443,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["subscribe((createdattribute",{"_index":434,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["subscribe((data",{"_index":1076,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["subscription",{"_index":2085,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["subsequent",{"_index":2750,"title":{},"body":{"license.html":{}}}],["subset",{"_index":1782,"title":{},"body":{"components/HomeComponent.html":{}}}],["success",{"_index":567,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["successfully",{"_index":1718,"title":{},"body":{"components/FloorListComponent.html":{}}}],["successor",{"_index":2866,"title":{},"body":{"license.html":{}}}],["successors",{"_index":2908,"title":{},"body":{"license.html":{}}}],["such",{"_index":1332,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"license.html":{}}}],["super",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["sure",{"_index":2709,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":2956,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":2886,"title":{},"body":{"license.html":{}}}],["swagger",{"_index":2660,"title":{},"body":{"index.html":{}}}],["switch",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["switchmap",{"_index":1212,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["sync",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":1626,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["systems",{"_index":1322,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"index.html":{}}}],["t",{"_index":724,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["table",{"_index":2512,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2511,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":1705,"title":{},"body":{"components/FloorListComponent.html":{}}}],["taking",{"_index":2926,"title":{},"body":{"license.html":{}}}],["tap",{"_index":981,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["tap((data",{"_index":1010,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["tb",{"_index":2377,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["technology",{"_index":2604,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["templatepagetitlestrategy",{"_index":269,"title":{"injectables/TemplatePageTitleStrategy.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"coverage.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["terabyte",{"_index":2378,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["terminal",{"_index":2691,"title":{},"body":{"index.html":{}}}],["termination",{"_index":2914,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2810,"title":{},"body":{"license.html":{}}}],["territories",{"_index":2894,"title":{},"body":{"license.html":{}}}],["tests",{"_index":2710,"title":{},"body":{"index.html":{}}}],["text",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["texture",{"_index":1659,"title":{"interfaces/Texture.html":{}},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{},"coverage.html":{}}}],["texturegroup",{"_index":1956,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["textures",{"_index":2236,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["theme",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["themeswitch",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["thereof",{"_index":2864,"title":{},"body":{"license.html":{}}}],["this._id",{"_index":309,"title":{},"body":{"classes/Attribute.html":{},"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":986,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.addattributedictionaryform",{"_index":409,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.componentname.errors",{"_index":464,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.componentname.errors.required",{"_index":465,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.description.errors",{"_index":470,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.description.errors.required",{"_index":471,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.name.errors",{"_index":447,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.name.errors.minlength",{"_index":450,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.name.errors.required",{"_index":448,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.type.errors",{"_index":457,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.type.errors.required",{"_index":458,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.unit.errors",{"_index":467,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.controls.unit.errors.required",{"_index":468,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('_id",{"_index":425,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('componentname",{"_index":423,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('description",{"_index":426,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('name",{"_index":421,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('type",{"_index":422,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.get('unit",{"_index":424,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.getrawvalue",{"_index":440,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform.value.description",{"_index":469,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addattributedictionaryform?.invalid",{"_index":428,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.addconnectionform",{"_index":905,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.controls.deviceidto.errors",{"_index":940,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.controls.deviceidto.errors.required",{"_index":941,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('deviceidfrom",{"_index":915,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('deviceidfrom')?.invalid",{"_index":937,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('deviceidto",{"_index":914,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('id",{"_index":912,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('id')?.value",{"_index":922,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get('name",{"_index":913,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.get(\\'deviceidfrom\\')?.invalid",{"_index":950,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.touched",{"_index":944,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.valid",{"_index":943,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.addconnectionform.value",{"_index":923,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.adddeviceform",{"_index":1216,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.controls.modelid.setvalue",{"_index":1245,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.controls.name.setvalue(faker.company.name",{"_index":1237,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('modelid",{"_index":1232,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('name",{"_index":1231,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position",{"_index":1236,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position')?.get('h",{"_index":1235,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position')?.get('x",{"_index":1233,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.get('position')?.get('y",{"_index":1234,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.invalid",{"_index":1249,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.adddeviceform.value",{"_index":1260,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.addmodelform",{"_index":1982,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.category",{"_index":2007,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.category.setvalue(this.devicecategorydict.getrandomname",{"_index":2008,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name",{"_index":1995,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name.errors",{"_index":2018,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name.errors.minlength",{"_index":2020,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name.errors.required",{"_index":2019,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.name.setvalue(faker.company.name",{"_index":1996,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.type",{"_index":2005,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.controls.type.setvalue(this.devicetypedict.getrandomname",{"_index":2006,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension",{"_index":1998,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.depth')?.errors",{"_index":2030,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.depth')?.errors?.minlength",{"_index":2032,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.depth')?.errors?.required",{"_index":2031,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.height')?.errors",{"_index":2027,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.height')?.errors?.minlength",{"_index":2029,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.height')?.errors?.required",{"_index":2028,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.width')?.errors",{"_index":2022,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.width')?.errors?.minlength",{"_index":2024,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.width')?.errors?.pattern",{"_index":2025,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('dimension.width')?.errors?.required",{"_index":2023,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture",{"_index":1987,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('back')?.errors",{"_index":2036,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('back')?.errors?.minlength",{"_index":2038,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('back')?.errors?.required",{"_index":2037,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('front')?.errors",{"_index":2033,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('front')?.errors?.minlength",{"_index":2035,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('front')?.errors?.required",{"_index":2034,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('top')?.errors?.minlength",{"_index":2045,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture')?.get('top')?.errors?.required",{"_index":2044,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.bottom')?.errors",{"_index":2046,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.bottom')?.errors?.minlength",{"_index":2021,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.bottom')?.errors?.required",{"_index":2047,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.side')?.errors",{"_index":2040,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.side')?.errors?.minlength",{"_index":2042,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.side')?.errors?.required",{"_index":2041,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get('texture.top')?.errors",{"_index":2043,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.depth\\')?.errors",{"_index":2059,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.depth\\')?.errors?.minlength",{"_index":2061,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.depth\\')?.errors?.required",{"_index":2060,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.height\\')?.errors",{"_index":2056,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.height\\')?.errors?.minlength",{"_index":2058,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.height\\')?.errors?.required",{"_index":2057,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.width\\')?.errors",{"_index":2051,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.width\\')?.errors?.minlength",{"_index":2053,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.width\\')?.errors?.pattern",{"_index":2054,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'dimension.width\\')?.errors?.required",{"_index":2052,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.bottom\\')?.errors",{"_index":2074,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.bottom\\')?.errors?.minlength",{"_index":2050,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.bottom\\')?.errors?.required",{"_index":2075,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.side\\')?.errors",{"_index":2068,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.side\\')?.errors?.minlength",{"_index":2070,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.side\\')?.errors?.required",{"_index":2069,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture.top\\')?.errors",{"_index":2071,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'back\\')?.errors",{"_index":2065,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'back\\')?.errors?.minlength",{"_index":2067,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'back\\')?.errors?.required",{"_index":2066,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'front\\')?.errors",{"_index":2062,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'front\\')?.errors?.minlength",{"_index":2064,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'front\\')?.errors?.required",{"_index":2063,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'top\\')?.errors?.minlength",{"_index":2073,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(\\'texture\\')?.get(\\'top\\')?.errors?.required",{"_index":2072,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(controlname",{"_index":1994,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.get(fieldpath",{"_index":1988,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.addmodelform.value",{"_index":2016,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.api.getdevices",{"_index":2298,"title":{},"body":{"guards/ResolverDevice.html":{}}}],["this.attributecomponent",{"_index":1402,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.attributedictionaryid",{"_index":313,"title":{},"body":{"classes/Attribute.html":{}}}],["this.attributedictionarylist",{"_index":520,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice",{"_index":432,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.attributedictionaryservice.cloneattributedictionary(id).subscribe((cloned",{"_index":532,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice.deleteattributedictionary(id).subscribe((data",{"_index":527,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.attributedictionaryservice.getattributedictionaries().subscribe((data",{"_index":519,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.buildtitle(routerstate",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["this.changetheme(this.mytheme",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.component",{"_index":989,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.componentname?.setvalue((e.target",{"_index":418,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.connection",{"_index":988,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection._id",{"_index":993,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection.deviceidfrom",{"_index":996,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection.deviceidto",{"_index":995,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connection.name",{"_index":994,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connectionid",{"_index":312,"title":{},"body":{"classes/Attribute.html":{}}}],["this.connectionlist",{"_index":1073,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.connectionservice.cloneconnection(id",{"_index":1079,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.connectionservice.createconnection(this.addconnectionform.value",{"_index":920,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.connectionservice.deleteconnection(id).subscribe((data",{"_index":1078,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.connectionservice.getconnection(id).pipe",{"_index":1009,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.connectionservice.getconnections().subscribe((data",{"_index":1072,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.createattribute(value).subscribe",{"_index":774,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.createattributedictionary(clonedata",{"_index":648,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["this.createconnection(value).subscribe",{"_index":1118,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.createdevice(devicetocreate).subscribe((createddevice",{"_index":1591,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.createfloor(clonedfloor).subscribe",{"_index":1774,"title":{},"body":{"injectables/FloorService.html":{}}}],["this.createformgroup",{"_index":984,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.createmodel(value).subscribe",{"_index":2269,"title":{},"body":{"injectables/ModelsService.html":{}}}],["this.createrack3d(element.position.x",{"_index":2343,"title":{},"body":{"classes/Tools3D.html":{}}}],["this.description?.setvalue((e.target",{"_index":420,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.device",{"_index":1263,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["this.device._id",{"_index":1407,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.modelid",{"_index":1409,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.name",{"_index":1408,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.position.h",{"_index":1412,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.position.x",{"_index":1410,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.device.position.y",{"_index":1411,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.deviceid",{"_index":310,"title":{},"body":{"classes/Attribute.html":{}}}],["this.deviceidfrom",{"_index":859,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["this.deviceidfrom?.setvalue((e.target",{"_index":911,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.deviceidfrom?.setvalue(objectid",{"_index":1001,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.deviceidto",{"_index":857,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{}}}],["this.deviceidto?.setvalue((e.target",{"_index":910,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.deviceidto?.setvalue(objectid",{"_index":1002,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.devicelist",{"_index":919,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.devicelist.find((e",{"_index":1074,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.devicelistpage",{"_index":1511,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.deviceservice.getdevices().subscribe((data",{"_index":916,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["this.devicesservice.clonedevice(id",{"_index":1526,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.devicesservice.createdevice(this.adddeviceform.value).subscribe((res",{"_index":1252,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.devicesservice.getdevices().subscribe((data",{"_index":1504,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.devicesservice.getdevicesynchronize(id).subscribe",{"_index":1403,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.dimension",{"_index":1663,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Texture.html":{}}}],["this.editdeviceform",{"_index":1401,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('_id",{"_index":1429,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('modelid",{"_index":1435,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('name",{"_index":1434,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('position",{"_index":1430,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('position.h",{"_index":1433,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('position.x",{"_index":1431,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.get('position.y",{"_index":1432,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.patchvalue",{"_index":1406,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.touched",{"_index":1418,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.valid",{"_index":1417,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editdeviceform.value",{"_index":1421,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.editmodelform",{"_index":2095,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.get('id",{"_index":2114,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.get('name",{"_index":2115,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.setvalue",{"_index":2101,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.touched",{"_index":2121,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.valid",{"_index":2120,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.value",{"_index":2117,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.editmodelform.value.id",{"_index":2116,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.findbyname(name",{"_index":842,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["this.finddevice(connectionobj.deviceidfrom).name",{"_index":1086,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.finddevice(connectionobj.deviceidto).name",{"_index":1088,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.findunitbyname(name",{"_index":2409,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["this.floorlist",{"_index":1716,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorlist.filter((floor",{"_index":1722,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorlistpage",{"_index":1712,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorservice",{"_index":1713,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorservice.clonefloor(id).subscribe((id_new",{"_index":1728,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.floorservice.deletefloor(id).subscribe",{"_index":1720,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.form",{"_index":983,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.controls",{"_index":1008,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.controls.deviceidfrom.errors",{"_index":1029,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.controls.deviceidfrom.errors.required",{"_index":1030,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.controls.deviceidto.errors",{"_index":1032,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.controls.deviceidto.errors.required",{"_index":1033,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('deviceidfrom",{"_index":1006,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('deviceidto",{"_index":1005,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('id",{"_index":1003,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.get('name",{"_index":1004,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.patchvalue",{"_index":992,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.valid",{"_index":1035,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.value",{"_index":1013,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.form.value._id",{"_index":1018,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.formaterrormessage(error",{"_index":1777,"title":{},"body":{"injectables/FloorService.html":{}}}],["this.formattributedictionary",{"_index":406,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.formbuilder.group",{"_index":410,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.formconnection",{"_index":907,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.getattribute(id).subscribe((value",{"_index":771,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.getattributedictionary(id).subscribe",{"_index":640,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["this.getconnection(id).subscribe((value",{"_index":1116,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.getconnection(this.inputid).subscribe((data",{"_index":987,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.getcontrol(controlname",{"_index":1992,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.getdevicelist",{"_index":908,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["this.getdevicesynchronize(id).subscribe((value",{"_index":1583,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.getfloor(id).subscribe",{"_index":1772,"title":{},"body":{"injectables/FloorService.html":{}}}],["this.getmodel",{"_index":2098,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.getmodel(id).subscribe((value",{"_index":2268,"title":{},"body":{"injectables/ModelsService.html":{}}}],["this.getrandom().name",{"_index":839,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.getrandomunit().name",{"_index":2408,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["this.getrandomx",{"_index":2331,"title":{},"body":{"classes/Tools3D.html":{}}}],["this.getrandomy",{"_index":2332,"title":{},"body":{"classes/Tools3D.html":{}}}],["this.h?.setvalue(number((e.target",{"_index":1229,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.handleerrortemplate('createmodel",{"_index":2264,"title":{},"body":{"injectables/ModelsService.html":{}}}],["this.http",{"_index":622,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["this.http.delete(url",{"_index":631,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["this.http.get('/assets/readme.md",{"_index":1814,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(environment.baseurl",{"_index":1577,"title":{},"body":{"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["this.http.get(url",{"_index":629,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{}}}],["this.http.get(url).pipe(retry(1",{"_index":1874,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["this.http.get(url_device",{"_index":763,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.http.get(url_model",{"_index":760,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.http.post(this.getlogsurl",{"_index":1886,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["this.httpoptions",{"_index":638,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["this.httpoptions).pipe",{"_index":745,"title":{},"body":{"injectables/AttributeService.html":{}}}],["this.httpoptions).pipe(retry(1",{"_index":630,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["this.httpoptions).subscribe",{"_index":1840,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.id",{"_index":997,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.id.setvalue(objectid",{"_index":1000,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.id?.setvalue((e.target",{"_index":909,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.initializeform",{"_index":1223,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.inputid",{"_index":985,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.inputid.tostring",{"_index":2097,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.isdebugmode",{"_index":1811,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issubmitted",{"_index":1255,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.issues",{"_index":1841,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issuesjson",{"_index":1842,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.list",{"_index":834,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["this.list.find((e",{"_index":1643,"title":{},"body":{"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.list.find((item",{"_index":840,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["this.list.length",{"_index":837,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["this.list.length)].name",{"_index":1350,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{}}}],["this.list[idx",{"_index":838,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["this.list[math.floor(math.random",{"_index":1349,"title":{},"body":{"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{}}}],["this.loadattributedictionary",{"_index":518,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.loadconnection",{"_index":1071,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.loaddevices",{"_index":1503,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.loadfloors",{"_index":1709,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.loadmodels",{"_index":1224,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.loadmodels().subscribe((data",{"_index":2216,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.logservice",{"_index":436,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/FloorListComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.logservice.createlog",{"_index":525,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.logservice.createlog(log).subscribe",{"_index":2122,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.md",{"_index":1835,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.model",{"_index":1981,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["this.model._id",{"_index":2126,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelid",{"_index":311,"title":{},"body":{"classes/Attribute.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["this.modelid?.setvalue((e.target",{"_index":1230,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modellist",{"_index":1226,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.modellist.find((e",{"_index":1539,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.modellist.length",{"_index":1244,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modellist.length)]._id.tostring",{"_index":1247,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modellist[math.floor(math.random",{"_index":1246,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modelservice.getmodels().subscribe((data",{"_index":1225,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.modelslist",{"_index":2217,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.modelsservice",{"_index":2124,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelsservice.clonemodel(id",{"_index":2224,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.modelsservice.createmodel(this.addmodelform.value).subscribe((res",{"_index":2014,"title":{},"body":{"components/ModelAddComponent.html":{}}}],["this.modelsservice.deletemodel(id).subscribe",{"_index":2219,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.modelsservice.deletemodel(this.inputid).subscribe",{"_index":2118,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelsservice.getmodel(this.inputid).subscribe((data",{"_index":2099,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.modelsservice.getmodels",{"_index":2215,"title":{},"body":{"components/ModelsListComponent.html":{},"guards/ResolverModel.html":{}}}],["this.modelsservice.getmodels().subscribe((data",{"_index":1415,"title":{},"body":{"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.mytheme",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["this.name",{"_index":855,"title":{},"body":{"classes/Connection.html":{},"interfaces/ConnectionInterface.html":{},"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Position.html":{},"interfaces/Texture.html":{}}}],["this.name?.setvalue((e.target",{"_index":414,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["this.navigatetodevicelist",{"_index":1426,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.ngoninit",{"_index":2221,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.ngzone.run",{"_index":444,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["this.numbervalidator",{"_index":1397,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.objectname",{"_index":1575,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.openlink(url",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["this.position",{"_index":1147,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["this.route",{"_index":1521,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.route.parent",{"_index":1534,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":1530,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.navigate(['/add",{"_index":2228,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.router.navigate(['/attribute",{"_index":531,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.router.navigate(['/connection",{"_index":1077,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.router.navigate(['/device",{"_index":1519,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.navigate(['/models",{"_index":2222,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.router.navigate(['attribute",{"_index":446,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.router.navigate(['connection",{"_index":925,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["this.router.navigate(['device",{"_index":1416,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["this.router.navigate(['edit",{"_index":538,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.router.navigatebyurl('/add",{"_index":1532,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.router.navigatebyurl('add",{"_index":536,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{}}}],["this.router.navigatebyurl('attribute",{"_index":445,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{}}}],["this.router.navigatebyurl('connection",{"_index":924,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{}}}],["this.router.navigatebyurl('connections",{"_index":1119,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.router.navigatebyurl('device",{"_index":1265,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{}}}],["this.router.navigatebyurl('floor",{"_index":1729,"title":{},"body":{"components/FloorListComponent.html":{},"injectables/FloorService.html":{}}}],["this.router.navigatebyurl('models",{"_index":2017,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["this.router.navigatebyurl(`edit",{"_index":540,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{},"components/ModelsListComponent.html":{}}}],["this.selectedattributedictionary",{"_index":537,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.selectedattributedictionary._id",{"_index":539,"title":{},"body":{"components/AttributeDictionaryListComponent.html":{}}}],["this.selectedconnection",{"_index":1080,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.selectedconnection._id",{"_index":1081,"title":{},"body":{"components/ConnectionListComponent.html":{}}}],["this.selecteddevice",{"_index":1533,"title":{},"body":{"components/DeviceListComponent.html":{}}}],["this.selectedfloor",{"_index":1730,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.selectedmodel",{"_index":2229,"title":{},"body":{"components/ModelsListComponent.html":{}}}],["this.submitted",{"_index":2119,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["this.texture",{"_index":1664,"title":{},"body":{"interfaces/Dimension.html":{},"classes/Model.html":{},"interfaces/Texture.html":{}}}],["this.title.settitle(`3d",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["this.tostring(this.addattributedictionaryform.controls.type.dirty",{"_index":460,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.tostring(this.addconnectionform.controls.deviceidto.haserror",{"_index":942,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.tostring(this.addconnectionform.controls.id.value",{"_index":926,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["this.tostring(this.form.controls.deviceidfrom.value",{"_index":1031,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.tostring(this.form.controls.deviceidto.value",{"_index":1034,"title":{},"body":{"components/ConnectionEditComponent.html":{}}}],["this.type?.setvalue((e.target",{"_index":417,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.unit?.setvalue((e.target",{"_index":419,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["this.unsubscribe$.complete",{"_index":1711,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.unsubscribe$.next",{"_index":1710,"title":{},"body":{"components/FloorListComponent.html":{}}}],["this.valid.numbervalidator",{"_index":1219,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.value",{"_index":314,"title":{},"body":{"classes/Attribute.html":{}}}],["this.x?.setvalue(number((e.target",{"_index":1227,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["this.y?.setvalue(number((e.target",{"_index":1228,"title":{},"body":{"components/DeviceAddComponent.html":{}}}],["those",{"_index":2762,"title":{},"body":{"license.html":{}}}],["three",{"_index":2585,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["three.js",{"_index":2664,"title":{},"body":{"index.html":{}}}],["through",{"_index":2792,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":2742,"title":{},"body":{"license.html":{}}}],["throwerror",{"_index":612,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["throws",{"_index":1891,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["time",{"_index":2366,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"license.html":{}}}],["timers",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{},"license.html":{}}}],["titlestrategy",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["tmp",{"_index":917,"title":{},"body":{"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["toggledebugmode",{"_index":1792,"title":{},"body":{"components/HomeComponent.html":{}}}],["tools3d",{"_index":2310,"title":{"classes/Tools3D.html":{}},"body":{"classes/Tools3D.html":{},"coverage.html":{}}}],["top",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"interfaces/Texture.html":{}}}],["topics",{"_index":2627,"title":{},"body":{"index.html":{}}}],["topromise",{"_index":750,"title":{},"body":{"injectables/AttributeService.html":{}}}],["tostring",{"_index":338,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["tostring(data",{"_index":364,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{}}}],["total",{"_index":1708,"title":{},"body":{"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["totalitems",{"_index":1047,"title":{},"body":{"components/ConnectionListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["touched",{"_index":1457,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["track",{"_index":455,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/ModelsListComponent.html":{}}}],["trademark",{"_index":2951,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":2933,"title":{},"body":{"license.html":{}}}],["transform",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["transition",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["translate",{"_index":2826,"title":{},"body":{"license.html":{}}}],["translatex(26px",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["treaty",{"_index":2873,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["tree.js",{"_index":2645,"title":{},"body":{"index.html":{}}}],["true",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"classes/Tools3D.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":743,"title":{},"body":{"injectables/AttributeService.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/ModelsListComponent.html":{},"classes/Validation.html":{},"index.html":{}}}],["ts",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"classes/Connection.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"interfaces/ConnectionInterface.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"interfaces/Dimension.html":{},"interfaces/FloorDimension.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"interfaces/Floors.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"interfaces/Position.html":{},"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{},"injectables/TemplatePageTitleStrategy.html":{},"interfaces/Texture.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeobj",{"_index":453,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["typeobj.name",{"_index":456,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["typeof",{"_index":2439,"title":{},"body":{"classes/Validation.html":{}}}],["types",{"_index":2674,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2637,"title":{},"body":{"index.html":{}}}],["ui.git",{"_index":2686,"title":{},"body":{"index.html":{}}}],["ultimasolution.pl",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["unconditional",{"_index":2936,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":2883,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AttributeService.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/DeviceAddComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/FloorListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"classes/Validation.html":{}}}],["under",{"_index":2809,"title":{},"body":{"license.html":{}}}],["understands",{"_index":2982,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":2843,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1124,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{}}}],["unit",{"_index":341,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/AttributesDictionary.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["unitdictionary",{"_index":330,"title":{"classes/UnitDictionary.html":{}},"body":{"components/AttributeDictionaryAddComponent.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"coverage.html":{}}}],["unitdictionary.getallunits",{"_index":466,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{}}}],["unitdictionaryitem",{"_index":2352,"title":{"interfaces/UnitDictionaryItem.html":{}},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"coverage.html":{}}}],["universal",{"_index":2718,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":429,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{},"license.html":{}}}],["unsubscribe",{"_index":1680,"title":{},"body":{"components/FloorListComponent.html":{}}}],["untouched",{"_index":1455,"title":{},"body":{"components/DeviceEditComponent.html":{}}}],["update",{"_index":599,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"components/ConnectionEditComponent.html":{},"injectables/ConnectionService.html":{},"components/DeviceEditComponent.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelEditComponent.html":{},"injectables/ModelsService.html":{},"index.html":{}}}],["updateattribute",{"_index":681,"title":{},"body":{"injectables/AttributeService.html":{}}}],["updateattribute(id",{"_index":731,"title":{},"body":{"injectables/AttributeService.html":{}}}],["updateattributedictionary",{"_index":557,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["updateattributedictionary(id",{"_index":596,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["updateconnection",{"_index":1095,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["updateconnection(id",{"_index":1105,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["updated",{"_index":600,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{}}}],["updatedevice",{"_index":1555,"title":{},"body":{"injectables/DeviceService.html":{}}}],["updatedevice(data",{"_index":1570,"title":{},"body":{"injectables/DeviceService.html":{}}}],["updatefloor",{"_index":1751,"title":{},"body":{"injectables/FloorService.html":{}}}],["updatefloor(id",{"_index":1767,"title":{},"body":{"injectables/FloorService.html":{}}}],["updatelog",{"_index":1925,"title":{},"body":{"injectables/LogService.html":{}}}],["updatelog(id",{"_index":1887,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["updatemodel",{"_index":2244,"title":{},"body":{"injectables/ModelsService.html":{}}}],["updatemodel(id",{"_index":2254,"title":{},"body":{"injectables/ModelsService.html":{}}}],["updatemodel(this.inputid.tostring",{"_index":2125,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["updates",{"_index":598,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"injectables/ModelsService.html":{},"dependencies.html":{}}}],["updatetitle",{"_index":2305,"title":{},"body":{"injectables/TemplatePageTitleStrategy.html":{}}}],["updatetitle(routerstate",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TemplatePageTitleStrategy.html":{}}}],["upon",{"_index":566,"title":{},"body":{"injectables/AttributeDictionaryService.html":{},"license.html":{}}}],["url",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{}}}],["url_device",{"_index":758,"title":{},"body":{"injectables/AttributeService.html":{}}}],["url_model",{"_index":756,"title":{},"body":{"injectables/AttributeService.html":{}}}],["use",{"_index":2731,"title":{},"body":{"license.html":{}}}],["used",{"_index":1908,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"index.html":{}}}],["user",{"_index":1516,"title":{},"body":{"components/DeviceListComponent.html":{},"index.html":{}}}],["username",{"_index":1833,"title":{},"body":{"components/HomeComponent.html":{}}}],["users",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":719,"title":{},"body":{"injectables/AttributeService.html":{},"index.html":{}}}],["utilizes",{"_index":2663,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":689,"title":{},"body":{"injectables/AttributeService.html":{},"components/ConnectionAddComponent.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"injectables/ModelsService.html":{},"classes/Tools3D.html":{}}}],["uuidv4",{"_index":901,"title":{},"body":{"components/ConnectionAddComponent.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"classes/Tools3D.html":{}}}],["uuidv4().tostring().substr(6",{"_index":1113,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["v",{"_index":775,"title":{},"body":{"injectables/AttributeService.html":{},"injectables/ConnectionService.html":{},"injectables/ModelsService.html":{},"license.html":{}}}],["v4",{"_index":900,"title":{},"body":{"components/ConnectionAddComponent.html":{},"injectables/ConnectionService.html":{},"injectables/FloorService.html":{},"classes/Tools3D.html":{}}}],["valid",{"_index":1036,"title":{},"body":{"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelEditComponent.html":{}}}],["validation",{"_index":1191,"title":{"classes/Validation.html":{}},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validationerrors",{"_index":1389,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["validatorfn",{"_index":1375,"title":{},"body":{"components/DeviceEditComponent.html":{},"classes/Validation.html":{}}}],["validators",{"_index":395,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.max(20",{"_index":1222,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["validators.maxlength(255",{"_index":413,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["validators.maxlength(6",{"_index":1984,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.min",{"_index":1220,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{}}}],["validators.minlength(1",{"_index":1983,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.minlength(10",{"_index":2096,"title":{},"body":{"components/ModelEditComponent.html":{}}}],["validators.minlength(36",{"_index":906,"title":{},"body":{"components/ConnectionAddComponent.html":{}}}],["validators.minlength(4",{"_index":1217,"title":{},"body":{"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.minlength(6",{"_index":412,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{}}}],["validators.pattern('^[0",{"_index":1985,"title":{},"body":{"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["validators.required",{"_index":411,"title":{},"body":{"components/AttributeDictionaryAddComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/Attribute.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"injectables/AttributeDictionaryService.html":{},"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/ComponentDictionary.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"injectables/ConnectionService.html":{},"classes/Device.html":{},"components/DeviceAddComponent.html":{},"classes/DeviceCategory.html":{},"classes/DeviceCategoryDict.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"injectables/DeviceService.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"components/FloorListComponent.html":{},"injectables/FloorService.html":{},"components/HomeComponent.html":{},"interfaces/Log.html":{},"interfaces/LogIn.html":{},"interfaces/LogParameters.html":{},"injectables/LogService.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["value._id",{"_index":1117,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["values",{"_index":2012,"title":{},"body":{"components/ModelAddComponent.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{},"index.html":{}}}],["var",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{}}}],["variable",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2996,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2867,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":2851,"title":{},"body":{"license.html":{}}}],["video",{"_index":2606,"title":{},"body":{"index.html":{}}}],["view",{"_index":565,"title":{},"body":{"injectables/AttributeDictionaryService.html":{}}}],["vii",{"_index":2868,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":818,"title":{},"body":{"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{}}}],["void",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AttributeDictionaryAddComponent.html":{},"components/AttributeDictionaryListComponent.html":{},"classes/ComponentDictionary.html":{},"interfaces/ComponentDictionaryItem.html":{},"components/ConnectionAddComponent.html":{},"components/ConnectionEditComponent.html":{},"components/ConnectionListComponent.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"components/DeviceListComponent.html":{},"classes/DeviceType.html":{},"classes/DeviceTypeDict.html":{},"interfaces/DeviceTypeInterface.html":{},"components/FloorListComponent.html":{},"components/HomeComponent.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"components/ModelsListComponent.html":{},"injectables/TemplatePageTitleStrategy.html":{},"classes/Tools3D.html":{},"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["volume",{"_index":2363,"title":{},"body":{"classes/UnitDictionary.html":{},"interfaces/UnitDictionaryItem.html":{}}}],["voluntarily",{"_index":2804,"title":{},"body":{"license.html":{}}}],["waived",{"_index":2954,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2875,"title":{},"body":{"license.html":{}}}],["waives",{"_index":2884,"title":{},"body":{"license.html":{}}}],["want",{"_index":1725,"title":{},"body":{"components/FloorListComponent.html":{},"index.html":{}}}],["warehouses",{"_index":2620,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2729,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2692,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["welcome",{"_index":2702,"title":{},"body":{"index.html":{}}}],["well",{"_index":2892,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":2777,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1136,"title":{},"body":{"classes/Device.html":{},"interfaces/DeviceInterface.html":{},"interfaces/Position.html":{},"license.html":{}}}],["wide",{"_index":2296,"title":{},"body":{"guards/ResolverDevice.html":{},"guards/ResolverModel.html":{}}}],["width",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Dimension.html":{},"classes/Model.html":{},"components/ModelAddComponent.html":{},"components/ModelEditComponent.html":{},"interfaces/Texture.html":{}}}],["window.open('https://www.facebook.com/ultimasolution",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["window.open(url",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["winston",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["wish",{"_index":2759,"title":{},"body":{"license.html":{}}}],["without",{"_index":2766,"title":{},"body":{"license.html":{}}}],["work",{"_index":2754,"title":{},"body":{"license.html":{}}}],["works",{"_index":2732,"title":{},"body":{"license.html":{}}}],["world",{"_index":2743,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":2895,"title":{},"body":{"license.html":{}}}],["x",{"_index":1132,"title":{},"body":{"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{}}}],["xpos",{"_index":1668,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["y",{"_index":1133,"title":{},"body":{"classes/Device.html":{},"components/DeviceAddComponent.html":{},"components/DeviceEditComponent.html":{},"interfaces/DeviceInterface.html":{},"injectables/DeviceService.html":{},"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{},"interfaces/Position.html":{},"classes/Tools3D.html":{}}}],["yes",{"_index":729,"title":{},"body":{"injectables/AttributeService.html":{},"classes/AttributesDictionary.html":{},"classes/Connection.html":{},"injectables/ConnectionService.html":{},"injectables/DeviceService.html":{},"injectables/LogService.html":{},"components/ModelsListComponent.html":{},"injectables/ModelsService.html":{}}}],["ypos",{"_index":1669,"title":{},"body":{"interfaces/FloorDimension.html":{},"interfaces/Floors.html":{}}}],["zlib",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2990,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                myTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                            \n                                currentYearLong\n                            \n                            \n                                    Public\n                                handleKeydown\n                            \n                            \n                                    Public\n                                handleKeyDown\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openFacebookLink\n                            \n                            \n                                    Public\n                                openLink\n                            \n                            \n                                    Public\n                                openWindow\n                            \n                            \n                                themeSwitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYearLong\n                        \n                    \n                \n            \n            \n                \ncurrentYearLong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        handleKeydown\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeydown(event: KeyboardEvent, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyDown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openFacebookLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFacebookLink(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    openLink(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openWindow\n                        \n                    \n                \n            \n            \n                \n                        \n                    openWindow(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeSwitch\n                        \n                    \n                \n            \n            \n                \nthemeSwitch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        myTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { RouterModule } from '@angular/router'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [RouterModule],\n})\nexport class AppComponent {\n  public myTheme: string = 'light'\n\n  ngOnInit() {\n    this.myTheme = localStorage.getItem('theme') ?? 'light'\n    this.changeTheme(this.myTheme)\n  }\n\n  themeSwitch() {\n    if (this.myTheme === 'light') {\n      console.log('theme dark')\n      this.myTheme = 'dark'\n    } else {\n      console.log('theme light')\n      this.myTheme = 'light'\n    }\n  }\n\n  currentYearLong(): number {\n    return new Date().getFullYear()\n  }\n\n  changeTheme(theme: string) {\n    const body = document.body\n    body.setAttribute('data-bs-theme', theme)\n  }\n\n  public handleKeyDown(event: KeyboardEvent): void {\n    // Add your logic here, for example:\n    console.log('Key pressed:', event.key)\n  }\n\n  public openLink(url: string): void {\n    window.open(url, '_blank')\n  }\n\n  public openWindow(url: string): void {\n    window.open(url, '_blank')\n  }\n\n  public handleKeydown(event: KeyboardEvent, url: string): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      this.openLink(url)\n    }\n  }\n\n  public openFacebookLink(event: KeyboardEvent): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      window.open('https://www.facebook.com/ultimasolution', '_blank')\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n  3d inventory\n  \n  \n\n\n\n  \n    \n      \n        3d\n          inventory\n         3d\n         Floors\n         Devices\n         Models\n\n        \n          \n            \n              Attributes\n            \n            \n              \n                 Attributes\n              \n              \n                 Attr. Dictionary\n              \n            \n          \n        \n\n         Connections\n        \n          \n            \n              Users\n            \n\n            \n              Users\n              Roles\n              Permissions\n              \n                \n              \n              Login\n              Logout\n              Register\n            \n          \n        \n\n        \n          \n        \n        \n          \n          \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  \n    \n      \n        © 2022-{{ currentYearLong() }} Copyright ultimasolution.pl\n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .container {\n  main {\n    background-color: var(--main-content-background-color);\n\n    h1 {\n      font-size: 70px;\n      color: var(--main-content-text-color);\n    }\n  }\n\n  .theme {\n    .slider {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: var(--header-theme-switch-background-color);\n      -webkit-transition: 0.4s;\n      transition: 0.4s;\n      border-radius: 34px;\n\n      &:before {\n        position: absolute;\n        content: '';\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: var(--header-theme-switch-before-background-color);\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n      }\n    }\n\n    input {\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n\n    input:checked + .slider {\n      background-color: var(--header-theme-switch-checked-background-color);\n    }\n\n    input:focus + .slider {\n      box-shadow: 0 0 1px var(--header-theme-switch-checked-background-color);\n    }\n\n    input:checked + .slider:before {\n      -webkit-transform: translateX(26px);\n      -ms-transform: translateX(26px);\n      transform: translateX(26px);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    3d inventory                        3d          inventory         3d         Floors         Devices         Models                                            Attributes                                                       Attributes                                             Attr. Dictionary                                                     Connections                                            Users                                      Users              Roles              Permissions                                                          Login              Logout              Register                                                                                                                                              © 2022-{{ currentYearLong() }} Copyright ultimasolution.pl                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgModule } from '@angular/core'\nimport { Title } from '@angular/platform-browser'\nimport { RouterModule, RouterStateSnapshot, Routes, TitleStrategy } from '@angular/router'\n\nimport { CubeComponent } from './components/3d/3d.component'\nimport { AttributeDictionaryAddComponent } from './components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component'\nimport { AttributeDictionaryListComponent } from './components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component'\nimport { AttributeDictionaryEditComponent } from './components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component'\nimport { AttributeAddComponent } from './components/attribute/add-attribute/add-attribute.component'\nimport { AttributeListComponent } from './components/attribute/attribute-list/attribute-list.component'\nimport { AttributeEditComponent } from './components/attribute/edit-attribute/edit-attribute.component'\nimport { ConnectionAddComponent } from './components/connection/add-connection/add-connection.component'\nimport { ConnectionListComponent } from './components/connection/connection-list/connection-list.component'\nimport { ConnectionEditComponent } from './components/connection/edit-connection/edit-connection.component'\nimport { DeviceAddComponent } from './components/devices/add-device/add-device.component'\nimport { DeviceListComponent } from './components/devices/devices-list/devices-list.component'\nimport { DeviceEditComponent } from './components/devices/edit-device/edit-device.component'\nimport { FloorAddComponent } from './components/floors/add-floor/add-floor.component'\nimport { FloorEditComponent } from './components/floors/edit-floor/edit-floor.component'\nimport { FloorListComponent } from './components/floors/floor-list/floor-list.component'\nimport { HomeComponent } from './components/home/home.component'\nimport { ModelAddComponent } from './components/models/add-model/add-model.component'\nimport { ModelEditComponent } from './components/models/edit-model/edit-model.component'\nimport { ModelsListComponent } from './components/models/model-list/model-list.component'\nimport { ResolverDevice } from './resolverDevice'\nimport { ResolverModel } from './resolverModel'\n\n@Injectable()\nexport class TemplatePageTitleStrategy extends TitleStrategy {\n  constructor(private readonly title: Title) {\n    super()\n  }\n\n  override updateTitle(routerState: RouterStateSnapshot) {\n    const title = this.buildTitle(routerState)\n    if (title !== undefined) {\n      this.title.setTitle(`3d-inventory: ${title}`)\n    }\n  }\n}\n\nexport const routes: Routes = [\n  { path: '', component: HomeComponent, title: 'Home' },\n  { path: 'home', component: HomeComponent, title: 'Home' },\n  {\n    path: '3d',\n    component: CubeComponent,\n    title: '3d',\n    resolve: { resolveDeviceList: ResolverDevice, resolveModelList: ResolverModel },\n  },\n  { path: 'device-list', component: DeviceListComponent, title: 'Device List' },\n  { path: 'edit-device/:id', component: DeviceEditComponent, title: 'Edit Device' },\n  { path: 'add-device', component: DeviceAddComponent, title: 'Add Device' },\n  { path: 'models-list', component: ModelsListComponent, title: 'Models List' },\n  { path: 'edit-model/:id', component: ModelEditComponent, title: 'Edit Model' },\n  { path: 'add-model', component: ModelAddComponent, title: 'Add Model' },\n  {\n    path: 'attribute-dictionary-list',\n    component: AttributeDictionaryListComponent,\n    title: 'Attribute Dictionary List',\n  },\n  { path: 'add-attribute-dictionary', component: AttributeDictionaryAddComponent, title: 'Add Attribute Dictionary' },\n  {\n    path: 'edit-attribute-dictionary/:id',\n    component: AttributeDictionaryEditComponent,\n    title: 'Edit Attribute Dictionary',\n  },\n  { path: 'attribute-list', component: AttributeListComponent, title: 'Attribute List' },\n  { path: 'add-attribute', component: AttributeAddComponent, title: 'Add Attribute' },\n  { path: 'edit-attribute/:id', component: AttributeEditComponent, title: 'Edit Attribute' },\n  { path: 'connection-list', component: ConnectionListComponent, title: 'Connections List' },\n  { path: 'add-connection', component: ConnectionAddComponent, title: 'Add Connections' },\n  { path: 'edit-connection/:id', component: ConnectionEditComponent, title: 'Edit Connections' },\n  { path: 'floor-list', component: FloorListComponent, title: 'Floor List' },\n  { path: 'add-floor', component: FloorAddComponent, title: 'Add Floor' },\n  { path: 'edit-floor/:id', component: FloorEditComponent, title: 'Edit Floor' },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attribute.html":{"url":"classes/Attribute.html","title":"class - Attribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/attribute.ts\n        \n\n\n            \n                Description\n            \n            \n                Description: The attributes class.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                attributeDictionaryId\n                            \n                            \n                                connectionId\n                            \n                            \n                                deviceId\n                            \n                            \n                                modelId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/attribute.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionaryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/attribute.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Attribute {\n  _id: string\n  deviceId: string | null\n  modelId: string | null\n  connectionId: string | null\n  attributeDictionaryId: string\n  value: string\n\n  constructor() {\n    this._id = ''\n    this.deviceId = null\n    this.modelId = null\n    this.connectionId = null\n    this.attributeDictionaryId = ''\n    this.value = ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttributeDictionaryAddComponent.html":{"url":"components/AttributeDictionaryAddComponent.html","title":"component - AttributeDictionaryAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AttributeDictionaryAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-attribute-dictionary\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./add-attribute-dictionary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-attribute-dictionary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addAttributeDictionaryForm\n                            \n                            \n                                attributeDictionary\n                            \n                            \n                                    Public\n                                attributeDictionaryService\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                logComponent\n                            \n                            \n                                unitDictionary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeComponentName\n                            \n                            \n                                changeDescription\n                            \n                            \n                                changeName\n                            \n                            \n                                changeType\n                            \n                            \n                                changeUnit\n                            \n                            \n                                formAttributeDictionary\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    componentName\n                                \n                                \n                                    unit\n                                \n                                \n                                    id\n                                \n                                \n                                    description\n                                \n                                \n                                    isFormInvalid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, attributeDictionaryService: AttributeDictionaryService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attributeDictionaryService\n                                                  \n                                                        \n                                                                        AttributeDictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeComponentName\n                        \n                    \n                \n            \n            \n                \nchangeComponentName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDescription\n                        \n                    \n                \n            \n            \n                \nchangeDescription(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeUnit\n                        \n                    \n                \n            \n            \n                \nchangeUnit(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nformAttributeDictionary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addAttributeDictionaryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributesDictionary\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attributeDictionaryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionaryService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoryDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypeDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AttributeDictionary'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unitDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnitDictionary\n\n                    \n                \n                \n                    \n                        Default value : new UnitDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        componentName\n                    \n                \n\n                \n                    \n                        getcomponentName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n\n                \n                    \n                        getunit()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isFormInvalid\n                    \n                \n\n                \n                    \n                        getisFormInvalid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts:102\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms'\nimport { Router, Resolve } from '@angular/router'\n\nimport { CommonModule } from '@angular/common'\nimport { AttributeDictionaryService } from '../../../services/attribute-dictionary.service'\nimport { LogService } from '../../../services/log.service'\nimport { AttributesDictionary } from '../../../shared/AttributesDictionary'\nimport { ComponentDictionary } from '../../../shared/ComponentDictionary'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/DeviceTypes'\nimport { UnitDictionary } from 'src/app/shared/UnitDictionary'\n\n@Component({\n  selector: 'app-add-attribute-dictionary',\n  templateUrl: './add-attribute-dictionary.component.html',\n  styleUrls: ['./add-attribute-dictionary.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n})\nexport class AttributeDictionaryAddComponent implements OnInit {\n  addAttributeDictionaryForm: FormGroup\n    componentName: FormControl\n    unit: FormControl\n    type: FormControl\n    description: FormControl\n  }>\n  attributeDictionary: AttributesDictionary\n  isSubmitted = false\n  deviceTypeDict: DeviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict: DeviceCategoryDict = new DeviceCategoryDict()\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  unitDictionary: UnitDictionary = new UnitDictionary()\n  logComponent = 'AttributeDictionary'\n\n  ngOnInit() {\n    this.formAttributeDictionary()\n  }\n\n  constructor(\n    @Inject(FormBuilder) private formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public attributeDictionaryService: AttributeDictionaryService,\n    private logService: LogService,\n  ) {}\n\n  formAttributeDictionary() {\n    this.addAttributeDictionaryForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]],\n      componentName: ['', [Validators.required]],\n      unit: ['', [Validators.required]],\n      type: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n    })\n  }\n\n  changeName(e: Event) {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeType(e: Event) {\n    this.type?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeComponentName(e: Event) {\n    this.componentName?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeUnit(e: Event) {\n    this.unit?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeDescription(e: Event) {\n    this.description?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get name() {\n    return this.addAttributeDictionaryForm.get('name')\n  }\n\n  get type() {\n    return this.addAttributeDictionaryForm.get('type')\n  }\n\n  get componentName() {\n    return this.addAttributeDictionaryForm.get('componentName')\n  }\n  get unit() {\n    return this.addAttributeDictionaryForm.get('unit')\n  }\n\n  get id() {\n    return this.addAttributeDictionaryForm.get('_id')\n  }\n\n  get description() {\n    return this.addAttributeDictionaryForm.get('description')\n  }\n\n  get isFormInvalid(): boolean {\n    return this.addAttributeDictionaryForm?.invalid\n  }\n\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, 2)\n  }\n\n  submitForm() {\n    this.attributeDictionaryService\n      .CreateAttributeDictionary(this.addAttributeDictionaryForm.value as unknown as AttributesDictionary)\n      .subscribe((createdAttribute) => {\n        const _id = createdAttribute._id\n        this.logService\n          .CreateLog({\n            objectId: _id,\n            message: this.addAttributeDictionaryForm.getRawValue(),\n            operation: 'Create',\n            component: 'attributesDictionary',\n          })\n          .subscribe(() => {\n            this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list'))\n            this.router.navigate(['attribute-dictionary-list'])\n          })\n      })\n  }\n}\n\n    \n\n    \n        \n   Add Attribute Dictionary\n  \n    \n      Name\n      \n      @if (this.addAttributeDictionaryForm.controls.name.errors) {\n        \n          @if (this.addAttributeDictionaryForm.controls.name.errors.required) {\n            Attribute name is required\n          }\n          @if (this.addAttributeDictionaryForm.controls.name.errors.minlength) {\n            \n              Attribute name must be at least 6 characters\n            \n          }\n        \n      }\n    \n    \n      \n        \n          Type\n          \n            @for (typeObj of deviceTypeDict['list']; track typeObj; let i = $index) {\n              \n                {{ typeObj.name }}\n              \n            }\n          \n          @if (this.addAttributeDictionaryForm.controls.type.errors) {\n            \n              @if (this.addAttributeDictionaryForm.controls.type.errors.required) {\n                Category is required\n              }\n            \n          }\n          \n            {{ this.toString(this.addAttributeDictionaryForm.controls.type.dirty) }}\n          \n        \n      \n      \n        \n          Component Name\n          \n            @for (componentObj of componentDictionary.getAll(); track componentObj; let i = $index) {\n              \n                {{ componentObj.name }}\n              \n            }\n          \n          @if (this.addAttributeDictionaryForm.controls.componentName.errors) {\n            \n              @if (this.addAttributeDictionaryForm.controls.componentName.errors.required) {\n                Component Name is\n                  required\n                \n              }\n            \n          }\n        \n      \n      \n        \n          Unit\n          \n            @for (componentObj of unitDictionary.getAllUnits(); track componentObj; let i = $index) {\n              \n                {{ componentObj.name }}\n              \n            }\n          \n          @if (this.addAttributeDictionaryForm.controls.unit.errors) {\n            \n              @if (this.addAttributeDictionaryForm.controls.unit.errors.required) {\n                Unit is required\n                \n              }\n            \n          }\n        \n      \n    \n    \n      \n        \n          Description\n          {{ this.addAttributeDictionaryForm.value.description }}\n          @if (this.addAttributeDictionaryForm.controls.description.errors) {\n            \n              @if (this.addAttributeDictionaryForm.controls.description.errors.required) {\n                Description is\n                required\n              }\n            \n          }\n        \n      \n      \n        \n          Add model\n        \n        @if (isFormInvalid) {\n          \n            Form is invalid\n          \n        }\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-attribute-dictionary.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Attribute Dictionary            Name            @if (this.addAttributeDictionaryForm.controls.name.errors) {                  @if (this.addAttributeDictionaryForm.controls.name.errors.required) {            Attribute name is required          }          @if (this.addAttributeDictionaryForm.controls.name.errors.minlength) {                          Attribute name must be at least 6 characters                      }              }                                Type                      @for (typeObj of deviceTypeDict[\\'list\\']; track typeObj; let i = $index) {                              {{ typeObj.name }}                          }                    @if (this.addAttributeDictionaryForm.controls.type.errors) {                          @if (this.addAttributeDictionaryForm.controls.type.errors.required) {                Category is required              }                      }                      {{ this.toString(this.addAttributeDictionaryForm.controls.type.dirty) }}                                                Component Name                      @for (componentObj of componentDictionary.getAll(); track componentObj; let i = $index) {                              {{ componentObj.name }}                          }                    @if (this.addAttributeDictionaryForm.controls.componentName.errors) {                          @if (this.addAttributeDictionaryForm.controls.componentName.errors.required) {                Component Name is                  required                              }                      }                                      Unit                      @for (componentObj of unitDictionary.getAllUnits(); track componentObj; let i = $index) {                              {{ componentObj.name }}                          }                    @if (this.addAttributeDictionaryForm.controls.unit.errors) {                          @if (this.addAttributeDictionaryForm.controls.unit.errors.required) {                Unit is required                              }                      }                                              Description          {{ this.addAttributeDictionaryForm.value.description }}          @if (this.addAttributeDictionaryForm.controls.description.errors) {                          @if (this.addAttributeDictionaryForm.controls.description.errors.required) {                Description is                required              }                      }                                      Add model                @if (isFormInvalid) {                      Form is invalid                  }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AttributeDictionaryAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttributeDictionaryListComponent.html":{"url":"components/AttributeDictionaryListComponent.html","title":"component - AttributeDictionaryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AttributeDictionaryListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-attribute-dictionary-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                LogComponent\n                            NgbPaginationModule\n                \n            \n\n            \n                styleUrls\n                ./attribute-dictionary-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./attribute-dictionary-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attributeDictionaryList\n                            \n                            \n                                attributeDictionaryPage\n                            \n                            \n                                    Public\n                                attributeDictionaryService\n                            \n                            \n                                component\n                            \n                            \n                                componentName\n                            \n                            \n                                isComponent\n                            \n                            \n                                pageSize\n                            \n                            \n                                selectedAttributeDictionary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddForm\n                            \n                            \n                                CloneAttributeDictionary\n                            \n                            \n                                deleteAttribute\n                            \n                            \n                                deleteAttributeDictionary\n                            \n                            \n                                EditForm\n                            \n                            \n                                loadAttributeDictionary\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(attributeDictionaryService: AttributeDictionaryService, logService: LogService, router: Router, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attributeDictionaryService\n                                                  \n                                                        \n                                                                        AttributeDictionaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddForm\n                        \n                    \n                \n            \n            \n                \nAddForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CloneAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nCloneAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAttribute\n                        \n                    \n                \n            \n            \n                \ndeleteAttribute(attributeId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attributeId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAttributeDictionary\n                        \n                    \n                \n            \n            \n                \ndeleteAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditForm\n                        \n                    \n                \n            \n            \n                \nEditForm(attributeDictionary: AttributesDictionary)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attributeDictionary\n                                            \n                                                            AttributesDictionary\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nloadAttributeDictionary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionaryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AttributesDictionary[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeDictionaryPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attributeDictionaryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeDictionaryService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'attributesDictionary'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Attributes Dictionary'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAttributeDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributesDictionary\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { AttributeDictionaryService } from '../../../services/attribute-dictionary.service'\nimport { LogService } from '../../../services/log.service'\nimport { AttributesDictionary } from '../../../shared/AttributesDictionary'\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { LogComponent } from '../../log/log.component'\n\n@Component({\n  selector: 'app-attribute-dictionary-list',\n  templateUrl: './attribute-dictionary-list.component.html',\n  styleUrls: ['./attribute-dictionary-list.component.scss'],\n  standalone: true,\n  imports: [LogComponent, NgbPaginationModule],\n})\nexport class AttributeDictionaryListComponent implements OnInit {\n  attributeDictionaryList: AttributesDictionary[] = []\n  selectedAttributeDictionary: AttributesDictionary\n  attributeDictionaryPage = 1\n  component = 'attributesDictionary'\n  isComponent = true\n  componentName = 'Attributes Dictionary'\n  pageSize: number = 10\n\n  ngOnInit() {\n    this.loadAttributeDictionary()\n  }\n  constructor(\n    public attributeDictionaryService: AttributeDictionaryService,\n    private logService: LogService,\n    private router: Router,\n    private ngZone: NgZone,\n  ) {}\n  loadAttributeDictionary() {\n    return this.attributeDictionaryService.GetAttributeDictionaries().subscribe((data: AttributesDictionary[]) => {\n      this.attributeDictionaryList = data\n    })\n  }\n\n  deleteAttribute(attributeId: string): void {\n    // Implement the logic to delete the attribute\n    console.log(`Deleting attribute with ID: ${attributeId}`)\n    // Add your deletion logic here\n  }\n\n  deleteAttributeDictionary(id: string) {\n    this.logService.CreateLog({\n      message: { id },\n      objectId: id.toString(),\n      operation: 'Delete',\n      component: 'attributesDictionary',\n    })\n    return this.attributeDictionaryService.DeleteAttributeDictionary(id).subscribe((data: AttributesDictionary) => {\n      // Specify the appropriate type for 'data'\n      console.log(data)\n      this.loadAttributeDictionary()\n      this.router.navigate(['/attribute-dictionary-list'])\n    })\n  }\n\n  CloneAttributeDictionary(id: string) {\n    this.attributeDictionaryService.CloneAttributeDictionary(id).subscribe((cloned: AttributesDictionary) => {\n      const id_new: string = cloned._id\n      this.logService\n        .CreateLog({\n          message: {\n            id: id,\n            id_new: id_new,\n          },\n          operation: 'Clone',\n          component: 'attributesDictionary',\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list'))\n        })\n    })\n    // this.loadAttributeDictionary()\n    // this.router.navigate(['/attribute-dictionary-list'])\n  }\n\n  AddForm() {\n    this.router.navigateByUrl('add-attribute-dictionary')\n  }\n\n  EditForm(attributeDictionary: AttributesDictionary) {\n    this.selectedAttributeDictionary = attributeDictionary\n    this.router.navigate(['edit-attribute-dictionary', this.selectedAttributeDictionary._id])\n    // this.ngZone.run(() => this.router.navigateByUrl(`edit-device/${id}`))\n  }\n}\n\n    \n\n    \n        \n  \n     Attribute Dictionary\n    \n      \n        \n          Name\n          ComponentName\n          Type\n          Unit\n          \n        \n      \n      \n        @if (attributeDictionaryList.length > 0) {\n        @for (attribute of attributeDictionaryList; track attribute) {\n        \n          \n            {{ attribute.name }}\n            {{ attribute._id }}\n          \n          {{ attribute.componentName }}\n          {{ attribute.type }}\n          {{ attribute.unit }}\n          \n            \n              \n                 Edit\n              \n              \n                 Delete\n              \n              \n                 Clone\n              \n            \n        \n        }\n        }\n      \n    \n    \n       Add\n    \n  \n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./attribute-dictionary-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Attribute Dictionary                            Name          ComponentName          Type          Unit                                      @if (attributeDictionaryList.length > 0) {        @for (attribute of attributeDictionaryList; track attribute) {                              {{ attribute.name }}            {{ attribute._id }}                    {{ attribute.componentName }}          {{ attribute.type }}          {{ attribute.unit }}                                                     Edit                                             Delete                                             Clone                                          }        }                     Add          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AttributeDictionaryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttributeDictionaryService.html":{"url":"injectables/AttributeDictionaryService.html","title":"injectable - AttributeDictionaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttributeDictionaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/attribute-dictionary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneAttributeDictionary\n                            \n                            \n                                CreateAttributeDictionary\n                            \n                            \n                                DeleteAttributeDictionary\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                GetAttributeDictionaries\n                            \n                            \n                                GetAttributeDictionary\n                            \n                            \n                                UpdateAttributeDictionary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/attribute-dictionary.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nCloneAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Clones an attribute dictionary by its ID and navigates to the list view upon success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute dictionary to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the cloned attribute dictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nCreateAttributeDictionary(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Creates a new attribute dictionary.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The attribute dictionary data to create.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the created AttributesDictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nDeleteAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Deletes an attribute dictionary by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute dictionary to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the deleted AttributesDictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    errorHandler(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Handles the error response from an HTTP request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributeDictionaries\n                        \n                    \n                \n            \n            \n                \nGetAttributeDictionaries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Retrieves the attribute dictionaries.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits the attribute dictionaries.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nGetAttributeDictionary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Retrieves an attribute dictionary by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the attribute dictionary to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the retrieved AttributesDictionary.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateAttributeDictionary\n                        \n                    \n                \n            \n            \n                \nUpdateAttributeDictionary(id: string, data: AttributesDictionary)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute-dictionary.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Updates an attribute dictionary by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute dictionary to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            AttributesDictionary\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated attribute dictionary data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the updated attribute dictionary.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute-dictionary.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute-dictionary.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { AttributesDictionary } from '../shared/AttributesDictionary'\nimport { LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AttributeDictionaryService {\n  baseurl = environment.baseurl\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n  /**\n   * Retrieves the attribute dictionaries.\n   * @returns An observable that emits the attribute dictionaries.\n   */\n  GetAttributeDictionaries(): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributesDictionary/')\n      .pipe(retry(1), catchError(this.errorHandler))\n  }\n\n  /**\n   * Retrieves an attribute dictionary by its ID.\n   * @param id The ID of the attribute dictionary to retrieve.\n   * @returns An Observable emitting the retrieved AttributesDictionary.\n   */\n  GetAttributeDictionary(id: string): Observable {\n    if (!id) {\n      return throwError(() => new Error('Attribute dictionary ID is required.'))\n    }\n    const url = `${environment.baseurl}/attributesDictionary/${encodeURIComponent(id)}`\n    return this.http.get(url, this.httpOptions).pipe(retry(1), catchError(this.errorHandler))\n  }\n\n  /**\n   * Deletes an attribute dictionary by its ID.\n   * @param id - The ID of the attribute dictionary to delete.\n   * @returns An Observable emitting the deleted AttributesDictionary.\n   */\n  DeleteAttributeDictionary(id: string): Observable {\n    if (!id) {\n      return throwError(() => new Error('Attribute dictionary ID is required for deletion.'))\n    }\n    const url = `${environment.baseurl}/attributesDictionary/${encodeURIComponent(id)}`\n    return this.http.delete(url, this.httpOptions).pipe(retry(1), catchError(this.errorHandler))\n  }\n\n  /**\n   * Creates a new attribute dictionary.\n   * @param data The attribute dictionary data to create.\n   * @returns An Observable emitting the created AttributesDictionary.\n   */\n  /**\n   * Creates a new attribute dictionary.\n   * @param data - The attribute dictionary data to create.\n   * @returns An Observable emitting the created AttributesDictionary.\n   */\n  CreateAttributeDictionary(data: Omit): Observable {\n    if (!data || !data.name || !data.type || !data.componentName) {\n      return throwError(() => new Error('Missing required attribute dictionary fields.'));\n    }\n    return this.http\n      .post(`${this.baseurl}/attributesDictionary/`, data, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandler));\n  }\n\n  /**\n   * Clones an attribute dictionary by its ID and navigates to the list view upon success.\n   * @param id - The ID of the attribute dictionary to clone.\n   * @returns An Observable emitting the cloned attribute dictionary.\n   */\n  CloneAttributeDictionary(id: string): Observable {\n    return new Observable((observer) => {\n      this.GetAttributeDictionary(id).subscribe({\n        next: (original) => {\n          // Remove _id to let backend generate a new one\n          const { _id, ...cloneData } = original\n          this.CreateAttributeDictionary(cloneData as AttributesDictionary).subscribe({\n            next: (created) => {\n              this.ngZone.run(() => this.router.navigateByUrl('attribute-dictionary-list'))\n              observer.next(created)\n              observer.complete()\n            },\n            error: (err) => observer.error(err),\n          })\n        },\n        error: (err) => observer.error(err),\n      })\n    })\n  }\n\n  /**\n   * Updates an attribute dictionary by its ID.\n   * @param id - The ID of the attribute dictionary to update.\n   * @param data - The updated attribute dictionary data.\n   * @returns An Observable emitting the updated attribute dictionary.\n   */\n  UpdateAttributeDictionary(id: string, data: AttributesDictionary): Observable {\n    if (!id) {\n      return throwError(() => new Error('Attribute dictionary ID is required for update.'))\n    }\n    return this.http\n      .put(`${environment.baseurl}/attributesDictionary/${id}`, data, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandler))\n  }\n\n  /**\n   * Handles the error response from an HTTP request.\n   * @param error - The error object containing the error message and status.\n   * @returns An Observable that emits the error message.\n   */\n  private errorHandler(error: any) {\n    let errorMessage: string\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      const detailedMessage = error.message || error.error?.message || 'Unknown error'\n      errorMessage = `Error Code: ${error.status} | Message: ${detailedMessage}`\n    }\n    console.error(errorMessage)\n    return throwError(() => new Error(errorMessage))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttributeService.html":{"url":"injectables/AttributeService.html","title":"injectable - AttributeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttributeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/attribute.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneAttribute\n                            \n                            \n                                CreateAttribute\n                            \n                            \n                                DeleteAttribute\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetAttribute\n                            \n                            \n                                GetAttributes\n                            \n                            \n                                    Async\n                                GetAttributesSync\n                            \n                            \n                                    Async\n                                GetContextAttributes\n                            \n                            \n                                GetDeviceAttributes\n                            \n                            \n                                    Async\n                                GetDeviceAttributesPromise\n                            \n                            \n                                GetModelAttributes\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, deviceService: DeviceService, modelService: ModelsService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/attribute.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneAttribute\n                        \n                    \n                \n            \n            \n                \nCloneAttribute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:192\n                        \n                    \n\n\n            \n                \n                        Clones an attribute with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateAttribute\n                        \n                    \n                \n            \n            \n                \nCreateAttribute(data: Attribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:180\n                        \n                    \n\n\n            \n                \n                        Creates a new attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Attribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The attribute data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the created attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteAttribute\n                        \n                    \n                \n            \n            \n                \nDeleteAttribute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:169\n                        \n                    \n\n\n            \n                \n                        Deletes an attribute by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the attribute to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:223\n                        \n                    \n\n\n            \n                \n                        Handles the error response from the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttribute\n                        \n                    \n                \n            \n            \n                \nGetAttribute(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Retrieves an attribute by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the attribute to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved attribute.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributes\n                        \n                    \n                \n            \n            \n                \nGetAttributes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetAttributesSync\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetAttributesSync()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes asynchronously.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of attributes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetContextAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetContextAttributes(component: string, item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Retrieves the context attributes for a given component and item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe component name.\n\n\n                                            \n                                        \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe item in JSON format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                An array of Attribute objects representing the context attributes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDeviceAttributes\n                        \n                    \n                \n            \n            \n                \nGetDeviceAttributes(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes of a device.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the device.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetDeviceAttributesPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetDeviceAttributesPromise(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes of a device using a Promise.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the device.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetModelAttributes\n                        \n                    \n                \n            \n            \n                \nGetModelAttributes(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Retrieves the attributes for a given model ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Attribute objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:241\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: HttpErrorResponse) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateAttribute\n                        \n                    \n                \n            \n            \n                \nUpdateAttribute(id: string, data: Attribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/attribute.service.ts:212\n                        \n                    \n\n\n            \n                \n                        Updates an attribute with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the attribute to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Attribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated attribute data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated attribute.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/attribute.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of, throwError, firstValueFrom } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Attribute } from '../shared/attribute'\nimport { Device } from '../shared/device'\nimport { DeviceService } from './device.service'\nimport { LogService } from './log.service'\nimport { ModelsService } from './models.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AttributeService {\n  baseurl = environment.baseurl\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private deviceService: DeviceService,\n    private modelService: ModelsService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the attributes from the server.\n   * @returns An Observable that emits an array of Attribute objects.\n   */\n  GetAttributes(): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/', this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetDeviceAttributes', null as unknown as Attribute[])),\n      )\n  }\n\n  /**\n   * Retrieves the attributes asynchronously.\n   * @returns A promise that resolves to an array of attributes.\n   */\n  async GetAttributesSync(): Promise {\n    const url = `${environment.baseurl}/attributes/`\n    try {\n      const attributes = await firstValueFrom(\n        this.http.get(url, this.httpOptions).pipe(\n          retry(1),\n          catchError(() => of([] as Attribute[])),\n        ),\n      )\n      return attributes ?? []\n    } catch (error) {\n      console.error('GetAttributesSync error:', error)\n      return []\n    }\n  }\n\n  /**\n   * Retrieves the attributes of a device.\n   * @param id The ID of the device.\n   * @returns An Observable that emits an array of Attribute objects.\n   */\n  GetDeviceAttributes(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/device/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetDeviceAttributes', id as unknown as Attribute)),\n      )\n  }\n\n  /**\n   * Retrieves the attributes of a device using a Promise.\n   * @param id The ID of the device.\n   * @returns A Promise that resolves to an array of Attribute objects.\n   */\n  async GetDeviceAttributesPromise(id: string) {\n    return this.http\n      .get(environment.baseurl + '/attributes/device/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetDeviceAttributesPromise', id as unknown as Attribute)),\n      )\n      .toPromise()\n  }\n\n  /**\n   * Retrieves the attributes for a given model ID.\n   * @param id The ID of the model.\n   * @returns An Observable that emits an array of Attribute objects.\n   */\n  GetModelAttributes(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/model/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetModelAttributes', id as unknown as Attribute)))\n  }\n\n  /**\n   * Retrieves the context attributes for a given component and item.\n   * @param component - The component name.\n   * @param item - The item in JSON format.\n   * @returns An array of Attribute objects representing the context attributes.\n   */\n  async GetContextAttributes(component: string, item: string): Promise {\n    let attributes: Attribute[] = []\n    let device: Device = new Device()\n    console.warn('JSON.parse(item): ' + item)\n    try {\n      device = JSON.parse(item) as Device\n    } catch (error) {\n      console.error('JSON.parse(item): ' + item + ' ' + error)\n    }\n    const url_model = environment.baseurl + '/attributes/model/' + device.modelId\n    const url_device = environment.baseurl + '/attributes/device/' + device._id\n    try {\n      attributes = await firstValueFrom(\n        this.http.get(url_model, this.httpOptions).pipe(\n          retry(1),\n          catchError(() => of([] as Attribute[])),\n        ),\n      )\n    } catch (error) {\n      console.error('SyncRequestClient().get: ' + url_model + ' ' + error)\n    }\n    try {\n      attributes.push(\n        ...(await firstValueFrom(\n          this.http.get(url_device, this.httpOptions).pipe(\n            retry(1),\n            catchError(() => of([] as Attribute[])),\n          ),\n        )),\n      )\n    } catch (error) {\n      console.error('SyncRequestClient().get: ' + url_device + ' ' + error)\n    }\n    console.log('device.id: ' + device._id + ' ' + url_device)\n    console.log('device.modelId: ' + device.modelId + ' ' + url_model)\n    console.log('GetContextAttributes.attributes: ' + attributes)\n    return attributes\n  }\n\n  /**\n   * Retrieves an attribute by its ID.\n   * @param id The ID of the attribute to retrieve.\n   * @returns An Observable that emits the retrieved attribute.\n   */\n  GetAttribute(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/attributes/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteAttribute', id as unknown as Attribute)))\n  }\n\n  /**\n   * Deletes an attribute by its ID.\n   * @param id The ID of the attribute to delete.\n   * @returns An Observable that emits the deleted attribute.\n   */\n  DeleteAttribute(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/attributes/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteAttribute', id as unknown as Attribute)))\n  }\n\n  /**\n   * Creates a new attribute.\n   * @param data The attribute data to be created.\n   * @returns An observable that emits the created attribute.\n   */\n  CreateAttribute(data: Attribute): Observable {\n    return this.http\n      .post(environment.baseurl + '/attributes/', JSON.stringify(data), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateAttribute', data)))\n  }\n\n  /**\n   * Clones an attribute with the specified ID.\n   *\n   * @param id - The ID of the attribute to clone.\n   * @returns The UUID of the cloned attribute.\n   */\n  CloneAttribute(id: string): string {\n    this.GetAttribute(id).subscribe((value: Attribute) => {\n      console.log('Get attribute: ' + JSON.stringify(value, null, ' '))\n      this.CreateAttribute(value).subscribe({\n        next: (v) => {\n          console.log('Create attribute: ' + JSON.stringify(v, null, ' '))\n          this.ngZone.run(() => this.router.navigateByUrl('attribute-list'))\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('attribute-list')),\n      })\n    })\n    return ''\n  }\n\n  /**\n   * Updates an attribute with the specified ID.\n   * @param id - The ID of the attribute to update.\n   * @param data - The updated attribute data.\n   * @returns An Observable that emits the updated attribute.\n   */\n  UpdateAttribute(id: string, data: Attribute): Observable {\n    return this.http\n      .put(environment.baseurl + '/attributes/' + id, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateModel', data)))\n  }\n\n  /**\n   * Handles the error response from the server.\n   * @param error - The error object containing the error message and status.\n   * @returns An Observable that emits the error message.\n   */\n  errorHandl(error: { error: { message: string }; status: number; message: string }) {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.error(`attribute.service.errorHandl: Error Code: ${error.status}, Message: ${error.message}`)\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: HttpErrorResponse): Observable => {\n      if (result === undefined || result === null) {\n        console.warn(`attribute.service.handleErrorTemplate: ${operation} returned a null or undefined result.`)\n      }\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AttributesDictionary.html":{"url":"classes/AttributesDictionary.html","title":"class - AttributesDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AttributesDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/AttributesDictionary.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an attribute dictionary.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                componentName\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                            \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/AttributesDictionary.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/AttributesDictionary.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"device\" | \"model\" | \"connection\" | \"attribute\"\n\n                    \n                \n                \n                    \n                        Default value : 'device'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/AttributesDictionary.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/AttributesDictionary.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"string\" | \"number\" | \"boolean\"\n\n                    \n                \n                \n                    \n                        Default value : 'string'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/AttributesDictionary.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | \"m\" | \"cm\" | \"mm\" | \"km\" | \"g\" | \"kg\" | \"mg\" | \"l\" | \"ml\" | \"s\" | \"min\" | \"h\"\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/AttributesDictionary.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AttributesDictionary {\n  _id: string = ''\n  name: string = ''\n  type: 'string' | 'number' | 'boolean' = 'string' // Type of the attribute\n  unit: '' | 'm' | 'cm' | 'mm' | 'km' | 'g' | 'kg' | 'mg' | 'l' | 'ml' | 's' | 'min' | 'h' = ''\n  componentName: 'device' | 'model' | 'connection' | 'attribute' = 'device'\n\n  constructor(init?: Partial) {\n    Object.assign(this, init)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComponentDictionary.html":{"url":"classes/ComponentDictionary.html","title":"class - ComponentDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComponentDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ComponentDictionary.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByName\n                            \n                            \n                                getAll\n                            \n                            \n                                getRandom\n                            \n                            \n                                getRandomName\n                            \n                            \n                                logIfExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionaryItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: '', description: 'Empty component' },\n    { name: 'device', description: 'A physical or virtual device in the inventory' },\n    { name: 'model', description: 'A specific model or type of device' },\n    { name: 'connection', description: 'A link or relationship between devices or components' },\n    { name: 'attribute', description: 'A property or characteristic of a device or component' },\n    { name: 'floor', description: 'A property or characteristic of a floor' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/ComponentDictionary.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ComponentDictionary.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ComponentDictionaryItem | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ComponentDictionary.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ComponentDictionaryItem[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandom\n                        \n                    \n                \n            \n            \n                \ngetRandom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ComponentDictionary.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ComponentDictionaryItem\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomName\n                        \n                    \n                \n            \n            \n                \ngetRandomName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ComponentDictionary.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIfExists\n                        \n                    \n                \n            \n            \n                \nlogIfExists(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/ComponentDictionary.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ComponentDictionaryItem {\n  name: string\n  description: string\n}\n\nexport class ComponentDictionary {\n  private readonly list: ComponentDictionaryItem[] = [\n    { name: '', description: 'Empty component' },\n    { name: 'device', description: 'A physical or virtual device in the inventory' },\n    { name: 'model', description: 'A specific model or type of device' },\n    { name: 'connection', description: 'A link or relationship between devices or components' },\n    { name: 'attribute', description: 'A property or characteristic of a device or component' },\n    { name: 'floor', description: 'A property or characteristic of a floor' },\n  ]\n\n  getAll(): ComponentDictionaryItem[] {\n    return [...this.list]\n  }\n\n  getRandom(): ComponentDictionaryItem {\n    const idx = Math.floor(Math.random() * this.list.length)\n    return this.list[idx]\n  }\n\n  getRandomName(): string {\n    return this.getRandom().name\n  }\n\n  findByName(name: string): ComponentDictionaryItem | undefined {\n    return this.list.find((item) => item.name === name)\n  }\n\n  logIfExists(name: string): void {\n    const item = this.findByName(name)\n    if (item) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentDictionaryItem.html":{"url":"interfaces/ComponentDictionaryItem.html","title":"interface - ComponentDictionaryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentDictionaryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ComponentDictionary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ComponentDictionaryItem {\n  name: string\n  description: string\n}\n\nexport class ComponentDictionary {\n  private readonly list: ComponentDictionaryItem[] = [\n    { name: '', description: 'Empty component' },\n    { name: 'device', description: 'A physical or virtual device in the inventory' },\n    { name: 'model', description: 'A specific model or type of device' },\n    { name: 'connection', description: 'A link or relationship between devices or components' },\n    { name: 'attribute', description: 'A property or characteristic of a device or component' },\n    { name: 'floor', description: 'A property or characteristic of a floor' },\n  ]\n\n  getAll(): ComponentDictionaryItem[] {\n    return [...this.list]\n  }\n\n  getRandom(): ComponentDictionaryItem {\n    const idx = Math.floor(Math.random() * this.list.length)\n    return this.list[idx]\n  }\n\n  getRandomName(): string {\n    return this.getRandom().name\n  }\n\n  findByName(name: string): ComponentDictionaryItem | undefined {\n    return this.list.find((item) => item.name === name)\n  }\n\n  logIfExists(name: string): void {\n    const item = this.findByName(name)\n    if (item) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Connection.html":{"url":"classes/Connection.html","title":"class - Connection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Connection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/connection.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a connection between devices.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                deviceIdFrom\n                            \n                            \n                                deviceIdTo\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection?: ConnectionInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/connection.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                        ConnectionInterface\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceIdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceIdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/connection.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface ConnectionInterface {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n}\n\n/**\n * Represents a connection between devices.\n */\nexport class Connection {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n\n  constructor(connection?: ConnectionInterface) {\n    this._id = connection?._id || ''\n    this.name = connection?.name || ''\n    this.deviceIdTo = connection?.deviceIdTo || ''\n    this.deviceIdFrom = connection?.deviceIdFrom || ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionAddComponent.html":{"url":"components/ConnectionAddComponent.html","title":"component - ConnectionAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection/add-connection/add-connection.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-connection\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./add-connection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-connection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addConnectionForm\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                connection\n                            \n                            \n                                deviceList\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                logComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDeviceFrom\n                            \n                            \n                                changeDeviceTo\n                            \n                            \n                                changeId\n                            \n                            \n                                changeName\n                            \n                            \n                                formConnection\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                gotoDevice\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    deviceIdTo\n                                \n                                \n                                    deviceIdFrom\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, connectionService: ConnectionService, deviceService: DeviceService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceFrom\n                        \n                    \n                \n            \n            \n                \nchangeDeviceFrom(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceTo\n                        \n                    \n                \n            \n            \n                \nchangeDeviceTo(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeId\n                        \n                    \n                \n            \n            \n                \nchangeId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formConnection\n                        \n                    \n                \n            \n            \n                \nformConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoDevice\n                        \n                    \n                \n            \n            \n                \ngotoDevice(deviceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/add-connection/add-connection.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addConnectionForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection\n\n                    \n                \n                \n                    \n                        Default value : new Connection()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Connection'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/add-connection/add-connection.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdTo\n                    \n                \n\n                \n                    \n                        getdeviceIdTo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdFrom\n                    \n                \n\n                \n                    \n                        getdeviceIdFrom()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/add-connection/add-connection.component.ts:74\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { v4 as uuidv4 } from 'uuid'\n\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\n\nimport { ConnectionService } from '../../../services/connection.service'\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ComponentDictionary } from '../../../shared/ComponentDictionary'\nimport { Connection } from '../../../shared/connection'\nimport { Device } from '../../../shared/device'\nimport { CommonModule } from '@angular/common'\n\n@Component({\n  selector: 'app-add-connection',\n  templateUrl: './add-connection.component.html',\n  styleUrls: ['./add-connection.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n})\nexport class ConnectionAddComponent implements OnInit {\n  addConnectionForm: FormGroup\n  connection: Connection = new Connection()\n  deviceList: Device[]\n  isSubmitted = false\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  logComponent = 'Connection'\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private connectionService: ConnectionService,\n    private deviceService: DeviceService,\n    private logService: LogService,\n  ) {}\n\n  formConnection() {\n    this.addConnectionForm = this.formBuilder.group({\n      id: [uuidv4(), [Validators.required, Validators.minLength(36)]],\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]],\n      deviceIdTo: ['', [Validators.required]],\n      deviceIdFrom: ['', [Validators.required]],\n    })\n  }\n\n  ngOnInit() {\n    this.formConnection()\n    this.getDeviceList()\n  }\n  changeId(e: Event) {\n    this.id?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeName(e: Event) {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeDeviceTo(e: Event) {\n    this.deviceIdTo?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n  changeDeviceFrom(e: Event) {\n    this.deviceIdFrom?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get id() {\n    return this.addConnectionForm.get('id')\n  }\n  get name() {\n    return this.addConnectionForm.get('name')\n  }\n  get deviceIdTo() {\n    return this.addConnectionForm.get('deviceIdTo')\n  }\n  get deviceIdFrom() {\n    return this.addConnectionForm.get('deviceIdFrom')\n  }\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, 2)\n  }\n  getDeviceList() {\n    return this.deviceService.GetDevices().subscribe((data: Device[]) => {\n      const tmp = new Device()\n      data.unshift(tmp)\n      this.deviceList = data\n    })\n  }\n  gotoDevice(deviceId: string) {\n    this.router.navigate(['edit-device/', deviceId])\n  }\n  submitForm() {\n    this.connectionService.CreateConnection(this.addConnectionForm.value as Connection).subscribe(() => {\n      this.logService\n        .CreateLog({\n          objectId: this.addConnectionForm.get('id')?.value,\n          message: this.addConnectionForm.value,\n          operation: 'Create',\n          component: 'connections',\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('connection-list'))\n          this.router.navigate(['connection-list'])\n        })\n    })\n  }\n}\n\n    \n\n    \n        \n   Add Connection\n  \n  {{ this.toString(this.addConnectionForm.controls.id.value) }}\n  \n    \n      \n        \n          Name\n          \n          @if (addConnectionForm.get('name')?.invalid) {\n            \n              @if (addConnectionForm.get('name')?.errors?.['required']) {\n                Name is required.\n              }\n              @if (addConnectionForm.get('name')?.errors?.['minlength']) {\n                \n                  Name must be at least 6 characters long.\n                \n              }\n            \n          }\n          @if (\n            (addConnectionForm.get('name')?.dirty || addConnectionForm.get('name')?.touched) &&\n            addConnectionForm.get('name')?.invalid\n            ) {\n            \n              Please provide connection name.\n            \n          }\n        \n      \n    \n    \n      \n        \n          Device From\n          \n            @for (deviceFromObj of deviceList; track deviceFromObj; let i = $index) {\n              \n                {{ deviceFromObj.name }}\n              \n            }\n          \n          @if (this.addConnectionForm.get('deviceIdFrom')?.invalid) {\n            Device Id From is required\n          }\n        \n      \n      \n        \n          Device To\n          \n            @for (deviceToObj of deviceList; track deviceToObj; let i = $index) {\n              \n                {{ deviceToObj.name }}\n              \n            }\n          \n          @if (this.addConnectionForm.controls.deviceIdTo.errors) {\n            \n              @if (this.addConnectionForm.controls.deviceIdTo.errors.required) {\n                Device Id To is required\n              }\n            \n          }\n          \n            {{ this.toString(this.addConnectionForm.controls.deviceIdTo.hasError) }}\n          \n        \n      \n    \n    \n      \n         Add connection\n      \n      @if (!(this.addConnectionForm.valid && this.addConnectionForm.touched)) {\n        \n          Form is invalid\n        \n      }\n    \n  \n\n\n    \n\n    \n                \n                    ./add-connection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Connection    {{ this.toString(this.addConnectionForm.controls.id.value) }}                              Name                    @if (addConnectionForm.get(\\'name\\')?.invalid) {                          @if (addConnectionForm.get(\\'name\\')?.errors?.[\\'required\\']) {                Name is required.              }              @if (addConnectionForm.get(\\'name\\')?.errors?.[\\'minlength\\']) {                                  Name must be at least 6 characters long.                              }                      }          @if (            (addConnectionForm.get(\\'name\\')?.dirty || addConnectionForm.get(\\'name\\')?.touched) &&            addConnectionForm.get(\\'name\\')?.invalid            ) {                          Please provide connection name.                      }                                              Device From                      @for (deviceFromObj of deviceList; track deviceFromObj; let i = $index) {                              {{ deviceFromObj.name }}                          }                    @if (this.addConnectionForm.get(\\'deviceIdFrom\\')?.invalid) {            Device Id From is required          }                                      Device To                      @for (deviceToObj of deviceList; track deviceToObj; let i = $index) {                              {{ deviceToObj.name }}                          }                    @if (this.addConnectionForm.controls.deviceIdTo.errors) {                          @if (this.addConnectionForm.controls.deviceIdTo.errors.required) {                Device Id To is required              }                      }                      {{ this.toString(this.addConnectionForm.controls.deviceIdTo.hasError) }}                                               Add connection            @if (!(this.addConnectionForm.valid && this.addConnectionForm.touched)) {                  Form is invalid              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionEditComponent.html":{"url":"components/ConnectionEditComponent.html","title":"component - ConnectionEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection/edit-connection/edit-connection.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-connection\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                LogComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-connection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                changeDeviceFrom\n                            \n                            \n                                changeDeviceTo\n                            \n                            \n                                changeId\n                            \n                            \n                                changeName\n                            \n                            \n                                component\n                            \n                            \n                                componentDictionary\n                            \n                            \n                                connection\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                deviceList\n                            \n                            \n                                form\n                            \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                inputId\n                            \n                            \n                                isSubmitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getConnection\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    deviceIdTo\n                                \n                                \n                                    deviceIdFrom\n                                \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, activatedRoute: ActivatedRoute, connectionService: ConnectionService, deviceService: DeviceService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    getConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceFrom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDeviceTo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentDictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentDictionary\n\n                    \n                \n                \n                    \n                        Default value : new ComponentDictionary()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:100\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdTo\n                    \n                \n\n                \n                    \n                        getdeviceIdTo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deviceIdFrom\n                    \n                \n\n                \n                    \n                        getdeviceIdFrom()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:112\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/connection/edit-connection/edit-connection.component.ts:116\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { firstValueFrom, Observable, tap } from 'rxjs'\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\n\nimport { ConnectionService } from '../../../services/connection.service'\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ComponentDictionary } from '../../../shared/ComponentDictionary'\nimport { Connection } from '../../../shared/connection'\nimport { Device } from '../../../shared/device'\nimport { CommonModule } from '@angular/common'\nimport { LogComponent } from '../../log/log.component'\n\n@Component({\n  selector: 'app-edit-connection',\n  templateUrl: './edit-connection.component.html',\n  imports: [ReactiveFormsModule, CommonModule, LogComponent],\n})\nexport class ConnectionEditComponent implements OnInit {\n  inputId: string\n  form: FormGroup\n  connection: Connection\n  deviceList: Device[]\n  isSubmitted = false\n  componentDictionary: ComponentDictionary = new ComponentDictionary()\n  component: string\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public activatedRoute: ActivatedRoute,\n    private connectionService: ConnectionService,\n    private deviceService: DeviceService,\n    private logService: LogService,\n  ) {\n    this.form = this.createFormGroup()\n  }\n\n  ngOnInit() {\n    this.getDeviceList()\n    this.inputId = this.activatedRoute.snapshot.paramMap.get('id') ?? ''\n    this.getConnection(this.inputId).subscribe((data: Connection) => {\n      this.connection = data\n      this.component = this.inputId\n      this.form = this.createFormGroup()\n      console.log('ConnectionEditComponent.ngOnInit() => ' + JSON.stringify(this.connection, null, ' '))\n      this.form.patchValue({\n        _id: this.connection._id,\n        name: this.connection.name,\n        deviceIdTo: this.connection.deviceIdTo,\n        deviceIdFrom: this.connection.deviceIdFrom,\n      })\n    })\n    this.component = this.inputId\n    this.connection = new Connection()\n  }\n\n  createFormGroup = () => {\n    return new FormGroup({\n      _id: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(255)]),\n      deviceIdTo: new FormControl('', [Validators.required]),\n      deviceIdFrom: new FormControl('', [Validators.required]),\n    })\n  }\n\n  changeId = (e: Event): void => {\n    if (this.id) {\n      const value = (e.target as HTMLInputElement).value\n      const objectId = value as never\n      this.id.setValue(objectId, { onlySelf: true })\n    }\n  }\n\n  changeName = (e: Event): void => {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeDeviceFrom = (e: Event): void => {\n    const value = (e.target as HTMLInputElement).value\n    const objectId = value\n    this.deviceIdFrom?.setValue(objectId, { onlySelf: true })\n  }\n\n  changeDeviceTo = (e: Event): void => {\n    const value = (e.target as HTMLInputElement).value\n    const objectId = value\n    this.deviceIdTo?.setValue(objectId, { onlySelf: true })\n  }\n\n  get id() {\n    return this.form.get('id')\n  }\n\n  get name() {\n    return this.form.get('name')\n  }\n\n  get deviceIdTo() {\n    return this.form.get('deviceIdTo')\n  }\n\n  get deviceIdFrom() {\n    return this.form.get('deviceIdFrom')\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.form.controls\n  }\n\n  toString(data: unknown): string {\n    return JSON.stringify(data, null, 2)\n  }\n\n  getDeviceList() {\n    return this.deviceService.GetDevices().subscribe((data: Device[]) => {\n      const tmp = new Device()\n      data.unshift(tmp)\n      this.deviceList = data\n    })\n  }\n\n  private getConnection(id: string): Observable {\n    return this.connectionService.GetConnection(id).pipe(\n      tap((data: Connection) => {\n        console.log(\n          'ConnectionEditComponent.connectionService.GetConnection(' + id + ') => ' + JSON.stringify(data, null, ' '),\n        )\n        this.connection = data\n      }),\n    )\n  }\n\n  async submitForm() {\n    const formValue = this.form.value as unknown as Connection\n    await firstValueFrom(this.connectionService.UpdateConnection(this.inputId, this.form.value as Connection))\n    await firstValueFrom(\n      this.logService.CreateLog({\n        component: 'connections',\n        objectId: formValue._id,\n        operation: 'Update',\n        message: { value: this.form.value as unknown },\n      }),\n    )\n    await this.ngZone.run(() => this.router.navigateByUrl('connection-list')).catch(() => {})\n    await this.router.navigate(['connection-list']).catch(() => {})\n  }\n}\n\n    \n\n    \n        \n   Edit Connection\n\n  \n    \n      \n        \n          Name\n          \n          {{ this.form.value._id }}\n          Looks good!\n          Please choose a name 6 char len.\n\n          @if (form.get('name')?.invalid) {\n            \n              @if (form.get('name')?.errors?.['required']) {\n                Name is required.\n              }\n              @if (form.get('name')?.errors?.['minlength']) {\n                Name must be at least 6 characters long.\n              }\n            \n          }\n          @if ((form.get('name')?.dirty || form.get('name')?.touched) && form.get('name')?.invalid) {\n            \n              Please provide connection name.\n            \n          }\n        \n      \n    \n    \n      \n        \n          Device From\n          \n            @for (deviceFromObj of deviceList; track deviceFromObj; let i = $index) {\n              \n                {{ deviceFromObj.name }}\n              \n            }\n          \n          @if (this.form.controls.deviceIdFrom.errors) {\n            \n              @if (this.form.controls.deviceIdFrom.errors.required) {\n                attributeDictionaryId is required\n              }\n            \n          }\n          \n            {{ this.toString(this.form.controls.deviceIdFrom.value) }}\n          \n        \n      \n      \n        \n          Device To\n          \n            @for (deviceToObj of deviceList; track deviceToObj; let i = $index) {\n              \n                {{ deviceToObj.name }}\n              \n            }\n          \n          @if (this.form.controls.deviceIdTo.errors) {\n            \n              @if (this.form.controls.deviceIdTo.errors.required) {\n                attributeDictionaryId is required\n              }\n            \n          }\n          \n            {{ this.toString(this.form.controls.deviceIdTo.value) }}\n          \n        \n      \n    \n    \n      \n         Update\n      \n      @if (!this.form.valid) {\n        Form is invalid\n      }\n      @if (this.form.valid) {\n        Form is valid\n      }\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Connection                              Name                    {{ this.form.value._id }}          Looks good!          Please choose a name 6 char len.          @if (form.get(\\'name\\')?.invalid) {                          @if (form.get(\\'name\\')?.errors?.[\\'required\\']) {                Name is required.              }              @if (form.get(\\'name\\')?.errors?.[\\'minlength\\']) {                Name must be at least 6 characters long.              }                      }          @if ((form.get(\\'name\\')?.dirty || form.get(\\'name\\')?.touched) && form.get(\\'name\\')?.invalid) {                          Please provide connection name.                      }                                              Device From                      @for (deviceFromObj of deviceList; track deviceFromObj; let i = $index) {                              {{ deviceFromObj.name }}                          }                    @if (this.form.controls.deviceIdFrom.errors) {                          @if (this.form.controls.deviceIdFrom.errors.required) {                attributeDictionaryId is required              }                      }                      {{ this.toString(this.form.controls.deviceIdFrom.value) }}                                                Device To                      @for (deviceToObj of deviceList; track deviceToObj; let i = $index) {                              {{ deviceToObj.name }}                          }                    @if (this.form.controls.deviceIdTo.errors) {                          @if (this.form.controls.deviceIdTo.errors.required) {                attributeDictionaryId is required              }                      }                      {{ this.toString(this.form.controls.deviceIdTo.value) }}                                               Update            @if (!this.form.valid) {        Form is invalid      }      @if (this.form.valid) {        Form is valid      }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionInterface.html":{"url":"interfaces/ConnectionInterface.html","title":"interface - ConnectionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/connection.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            deviceIdFrom\n                                        \n                                \n                                \n                                        \n                                            deviceIdTo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceIdFrom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceIdFrom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceIdTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceIdTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConnectionInterface {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n}\n\n/**\n * Represents a connection between devices.\n */\nexport class Connection {\n  _id: string\n  name: string\n  deviceIdTo: string\n  deviceIdFrom: string\n\n  constructor(connection?: ConnectionInterface) {\n    this._id = connection?._id || ''\n    this.name = connection?.name || ''\n    this.deviceIdTo = connection?.deviceIdTo || ''\n    this.deviceIdFrom = connection?.deviceIdFrom || ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectionListComponent.html":{"url":"components/ConnectionListComponent.html","title":"component - ConnectionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection/connection-list/connection-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connection-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LogComponent\n                            NgbPaginationModule\n                \n            \n\n            \n                styleUrls\n                ./connection-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connection-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                componentName\n                            \n                            \n                                connectionList\n                            \n                            \n                                connectionListPage\n                            \n                            \n                                    Public\n                                ConnectionService\n                            \n                            \n                                deviceList\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                selectedConnection\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddForm\n                            \n                            \n                                    Async\n                                cloneConnection\n                            \n                            \n                                deleteConnection\n                            \n                            \n                                editConnection\n                            \n                            \n                                findDevice\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                gotoDevice\n                            \n                            \n                                loadConnection\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ConnectionService: ConnectionService, router: Router, ngZone: NgZone, deviceService: DeviceService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ConnectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddForm\n                        \n                    \n                \n            \n            \n                \nAddForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cloneConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    cloneConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteConnection\n                        \n                    \n                \n            \n            \n                \ndeleteConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editConnection\n                        \n                    \n                \n            \n            \n                \neditConnection(Connection: Connection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                Connection\n                                            \n                                                            Connection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findDevice\n                        \n                    \n                \n            \n            \n                \nfindDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Device\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoDevice\n                        \n                    \n                \n            \n            \n                \ngotoDevice(deviceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadConnection\n                        \n                    \n                \n            \n            \n                \nloadConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection/connection-list/connection-list.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'connections'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Connections'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectionList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectionListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ConnectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connection\n\n                    \n                \n                \n                    \n                        Default value : new Connection()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection/connection-list/connection-list.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { ConnectionService } from '../../../services/connection.service'\nimport { DeviceService } from '../../../services/device.service'\nimport { LogIn, LogService } from '../../../services/log.service'\nimport { Connection } from '../../../shared/connection'\nimport { Device } from '../../../shared/device'\nimport { CommonModule } from '@angular/common'\nimport { LogComponent } from '../../log/log.component'\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n  selector: 'app-connection-list',\n  templateUrl: './connection-list.component.html',\n  styleUrls: ['./connection-list.component.scss'],\n  imports: [CommonModule, LogComponent, NgbPaginationModule],\n  standalone: true,\n})\nexport class ConnectionListComponent implements OnInit {\n  connectionList: Connection[] = []\n  selectedConnection: Connection = new Connection()\n  connectionListPage = 1\n  deviceList: Device[] = []\n  component = 'connections'\n  componentName = 'Connections'\n  page: number = 1\n  totalItems: number = 0\n  pageSize: number = 5\n\n  ngOnInit() {\n    this.loadConnection()\n    this.getDeviceList()\n  }\n\n  constructor(\n    public ConnectionService: ConnectionService,\n    private router: Router,\n    private ngZone: NgZone,\n    private deviceService: DeviceService,\n    private logService: LogService,\n  ) {}\n\n  loadConnection() {\n    return this.ConnectionService.GetConnections().subscribe((data: Connection[]) => {\n      this.connectionList = data\n    })\n  }\n\n  getDeviceList() {\n    return this.deviceService.GetDevices().subscribe((data: Device[]) => {\n      this.deviceList = data\n    })\n  }\n\n  findDevice(id: string): Device {\n    let device: Device = new Device()\n    device = this.deviceList.find((e: Device): boolean => e._id === id) || device\n    return device\n  }\n\n  gotoDevice(deviceId: string) {\n    this.router.navigate(['edit-device/', deviceId])\n  }\n\n  deleteConnection(id: string) {\n    this.logService\n      .CreateLog({\n        message: { id: id },\n        objectId: id,\n        operation: 'Delete',\n        component: 'connections',\n      })\n      .subscribe((data: LogIn) => {\n        console.log(data)\n        this.loadConnection()\n        this.router.navigate(['/connection-list'])\n      })\n    return this.ConnectionService.DeleteConnection(id).subscribe((data: Connection) => {\n      console.log(data)\n      this.loadConnection()\n      this.router.navigate(['/connection-list'])\n    })\n  }\n\n  async cloneConnection(id: string) {\n    const id_new: string = this.ConnectionService.CloneConnection(id)\n    this.logService\n      .CreateLog({\n        message: { id: id, id_new: id_new },\n        operation: 'Clone',\n        component: 'connections',\n      })\n      .subscribe(() => {\n        this.ngZone.run(() => this.router.navigateByUrl('connection-list'))\n      })\n  }\n\n  AddForm() {\n    this.router.navigateByUrl('add-connection')\n  }\n\n  editConnection(Connection: Connection) {\n    this.selectedConnection = Connection\n    this.router.navigate(['edit-connection', this.selectedConnection._id])\n  }\n}\n\n    \n\n    \n        \n   Connections\n  \n    \n      \n        Name\n        Device From\n        Device To\n      \n    \n    \n      @for (\n      connectionObj of connectionList\n      | slice: (connectionListPage - 1) * pageSize : connectionListPage * pageSize\n      ; track\n      connectionObj) {\n      \n        \n          {{ connectionObj.name }}\n          {{ connectionObj._id }}\n        \n        \n          \n             {{ this.findDevice(connectionObj.deviceIdFrom).name }}\n          \n          {{ connectionObj.deviceIdFrom }}\n        \n        \n          \n             {{ this.findDevice(connectionObj.deviceIdTo).name }}\n          \n          {{ connectionObj.deviceIdTo }}\n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      }\n    \n  \n  \n     Add\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./connection-list.component.scss\n                \n                .deviceid {\n  color: #9a9aa7;\n  font-size: small;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Connections                    Name        Device From        Device To                    @for (      connectionObj of connectionList      | slice: (connectionListPage - 1) * pageSize : connectionListPage * pageSize      ; track      connectionObj) {                        {{ connectionObj.name }}          {{ connectionObj._id }}                                       {{ this.findDevice(connectionObj.deviceIdFrom).name }}                    {{ connectionObj.deviceIdFrom }}                                       {{ this.findDevice(connectionObj.deviceIdTo).name }}                    {{ connectionObj.deviceIdTo }}                                                                                                                                                                          }             Add    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionService.html":{"url":"injectables/ConnectionService.html","title":"injectable - ConnectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/connection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneConnection\n                            \n                            \n                                CreateConnection\n                            \n                            \n                                DeleteConnection\n                            \n                            \n                                errorHandl\n                            \n                            \n                                GetConnection\n                            \n                            \n                                GetConnections\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/connection.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneConnection\n                        \n                    \n                \n            \n            \n                \nCloneConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Clones a connection with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the connection to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned connection.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateConnection\n                        \n                    \n                \n            \n            \n                \nCreateConnection(data: Connection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Creates a connection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Connection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The connection data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the created connection.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteConnection\n                        \n                    \n                \n            \n            \n                \nDeleteConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Deletes a connection by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the connection to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted Connection object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Handles the error response from the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nAn Observable that emits the error message.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConnection\n                        \n                    \n                \n            \n            \n                \nGetConnection(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves a connection by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the connection to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved Connection object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConnections\n                        \n                    \n                \n            \n            \n                \nGetConnections()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Retrieves the connections.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type Connection.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:134\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateConnection\n                        \n                    \n                \n            \n            \n                \nUpdateConnection(id: string, data: Connection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/connection.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Updates a connection with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the connection to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Connection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated connection data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the updated connection.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\nimport { v4 as uuidv4 } from 'uuid' // Import the uuidv4 function\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Connection } from '../shared/connection'\nimport { LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionService {\n  baseurl = environment.baseurl\n\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the connections.\n   * @returns An Observable of type Connection.\n   */\n  GetConnections(): Observable {\n    return this.http\n      .get(environment.baseurl + '/connections/')\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Retrieves a connection by its ID.\n   * @param id The ID of the connection to retrieve.\n   * @returns An Observable that emits the retrieved Connection object.\n   */\n  GetConnection(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/connections/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Deletes a connection by its ID.\n   * @param id The ID of the connection to delete.\n   * @returns An Observable that emits the deleted Connection object.\n   */\n  DeleteConnection(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/connections/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteConnection')))\n  }\n\n  /**\n   * Creates a connection.\n   * @param data The connection data to be created.\n   * @returns An observable that emits the created connection.\n   */\n  CreateConnection(data: Connection): Observable {\n    return this.http\n      .post(environment.baseurl + '/connections/', JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateConnection', data)))\n  }\n\n  /**\n   * Clones a connection with the specified ID.\n   *\n   * @param id - The ID of the connection to clone.\n   * @returns The UUID of the cloned connection.\n   */\n  CloneConnection(id: string): string {\n    const id_uuid = uuidv4().toString().substr(6, 36) // Call the uuidv4 function\n    this.GetConnection(id).subscribe((value: Connection) => {\n      console.log('Get Connections: ' + JSON.stringify(value))\n      value._id = id_uuid\n      this.CreateConnection(value).subscribe({\n        next: (v) => {\n          console.log('Create Connections: ' + JSON.stringify(v))\n          this.ngZone.run(() => this.router.navigateByUrl('connections-list'))\n        },\n        complete: () => this.ngZone.run(() => this.router.navigateByUrl('connections-list')),\n      })\n    })\n    return id_uuid\n  }\n\n  /**\n   * Updates a connection with the specified ID.\n   * @param {ObjectId} id - The ID of the connection to update.\n   * @param {Connection} data - The updated connection data.\n   * @returns {Observable} An observable that emits the updated connection.\n   */\n  UpdateConnection(id: string, data: Connection): Observable {\n    return this.http\n      .put(environment.baseurl + '/connections/' + id, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateConnection', data)))\n  }\n\n  /**\n   * Handles the error response from the server.\n   * @param error - The error object containing the error message and status.\n   * @returns - An Observable that emits the error message.\n   */\n  errorHandl(error: { error: { message: string }; status: number; message: string }) {\n    let errorMessage = ''\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`\n    }\n    console.log(JSON.stringify(errorMessage))\n\n    return throwError(() => {\n      return errorMessage\n    })\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: Error): Observable => {\n      console.error(`DeviceService.handleErrorTemplate operation: ${operation}, error: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Device.html":{"url":"classes/Device.html","title":"class - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a device with a unique ID, name, model ID, and position.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                isDebugMode\n                            \n                            \n                                modelId\n                            \n                            \n                                name\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, modelId: string, position: Position)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/device.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of the Device class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe name of the device. Defaults to an empty string.\n\n\n                                                        \n                                                \n                                                \n                                                        modelId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe model identifier of the device. Defaults to an empty string.\n\n\n                                                        \n                                                \n                                                \n                                                        position\n                                                  \n                                                        \n                                                                        Position\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe position of the device in 3D space. Defaults to { x: 0, y: 0, h: 0 }.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:34\n                        \n                    \n\n            \n                \n                    The unique identifier of the device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDebugMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:54\n                        \n                    \n\n            \n                \n                    Indicates whether debug mode is enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:44\n                        \n                    \n\n            \n                \n                    The model identifier associated with the device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:39\n                        \n                    \n\n            \n                \n                    The name of the device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Position\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0, h: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/device.ts:49\n                        \n                    \n\n            \n                \n                    The position of the device in 3D space.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/device.ts:72\n                        \n                    \n\n\n            \n                \n                        Returns a string representation of the device.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string containing the device ID and name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Position {\n  x: number\n  y: number\n  h: number\n}\n\n/**\n * Interface for a device object.\n * @property _id - The unique identifier of the device.\n * @property name - The name of the device.\n * @property modelId - The model identifier associated with the device.\n * @property position - The position of the device in 3D space.\n */\nexport interface DeviceInterface {\n  _id: string\n  name: string\n  modelId: string\n  position: Position\n}\n\n/**\n * Represents a device with a unique ID, name, model ID, and position.\n */\nexport class Device {\n  /**\n   * The unique identifier of the device.\n   */\n  _id: string = ''\n\n  /**\n   * The name of the device.\n   */\n  name: string = ''\n\n  /**\n   * The model identifier associated with the device.\n   */\n  modelId: string = ''\n\n  /**\n   * The position of the device in 3D space.\n   */\n  position: Position = { x: 0, y: 0, h: 0 }\n\n  /**\n   * Indicates whether debug mode is enabled.\n   */\n  isDebugMode: boolean = false\n\n  /**\n   * Creates an instance of the Device class.\n   * @param name - The name of the device. Defaults to an empty string.\n   * @param modelId - The model identifier of the device. Defaults to an empty string.\n   * @param position - The position of the device in 3D space. Defaults to { x: 0, y: 0, h: 0 }.\n   */\n  constructor(name: string = '', modelId: string = '', position: Position = { x: 0, y: 0, h: 0 }) {\n    this.name = name\n    this.modelId = modelId\n    this.position = position\n  }\n\n  /**\n   * Returns a string representation of the device.\n   * @returns A string containing the device ID and name.\n   */\n  toString(): string {\n    return `Device ID: ${this._id || 'N/A'}, Name: ${this.name || 'N/A'}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceAddComponent.html":{"url":"components/DeviceAddComponent.html","title":"component - DeviceAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices/add-device/add-device.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-device\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./add-device.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-device.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addDeviceForm\n                            \n                            \n                                device\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                model\n                            \n                            \n                                modelList\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeH\n                            \n                            \n                                changeModelId\n                            \n                            \n                                changeName\n                            \n                            \n                                changeX\n                            \n                            \n                                changeY\n                            \n                            \n                                generateDevice\n                            \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                loadModels\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    modelId\n                                \n                                \n                                    x\n                                \n                                \n                                    y\n                                \n                                \n                                    h\n                                \n                                \n                                    position\n                                \n                                \n                                    positionX\n                                \n                                \n                                    positionY\n                                \n                                \n                                    positionH\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, ngZone: NgZone, router: Router, devicesService: DeviceService, modelService: ModelsService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeH\n                        \n                    \n                \n            \n            \n                \nchangeH(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeModelId\n                        \n                    \n                \n            \n            \n                \nchangeModelId(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeX\n                        \n                    \n                \n            \n            \n                \nchangeX(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeY\n                        \n                    \n                \n            \n            \n                \nchangeY(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDevice\n                        \n                    \n                \n            \n            \n                \ngenerateDevice()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString(data: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/add-device/add-device.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addDeviceForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceCategoryDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceTypeDict\n\n                    \n                \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Default value : new Model()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Validation\n\n                    \n                \n                \n                    \n                        Default value : new Validation()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/add-device/add-device.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelId\n                    \n                \n\n                \n                    \n                        getmodelId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        x\n                    \n                \n\n                \n                    \n                        getx()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:111\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        y\n                    \n                \n\n                \n                    \n                        gety()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:115\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:119\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n\n                \n                    \n                        getposition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n\n                \n                    \n                        getpositionX()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:127\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n\n                \n                    \n                        getpositionY()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:131\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionH\n                    \n                \n\n                \n                    \n                        getpositionH()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/add-device/add-device.component.ts:135\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { faker } from '@faker-js/faker'\nimport { switchMap } from 'rxjs'\n\nimport { CommonModule } from '@angular/common'\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Device } from '../../../shared/device'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/DeviceTypes'\nimport { Model } from '../../../shared/model'\nimport Validation from '../../../shared/validation'\n\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.scss'],\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule],\n})\nexport class DeviceAddComponent implements OnInit {\n  device: Device\n  isSubmitted = false\n  deviceTypeDict: DeviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict: DeviceCategoryDict = new DeviceCategoryDict()\n  model: Model = new Model()\n  modelList: Model[]\n  valid: Validation = new Validation()\n\n  addDeviceForm: FormGroup\n\n  private initializeForm() {\n    this.addDeviceForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      modelId: new FormControl('', Validators.required),\n      position: new FormGroup({\n        x: new FormControl(0, [\n          Validators.required,\n          this.valid.numberValidator,\n          Validators.min(-20),\n          Validators.max(20),\n        ]),\n        y: new FormControl(0, [\n          Validators.required,\n          this.valid.numberValidator,\n          Validators.min(-20),\n          Validators.max(20),\n        ]),\n        h: new FormControl(0, [\n          Validators.required,\n          this.valid.numberValidator,\n          Validators.min(-20),\n          Validators.max(20),\n        ]),\n      }),\n    })\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    public devicesService: DeviceService,\n    private modelService: ModelsService,\n    private logService: LogService,\n  ) {\n    this.initializeForm()\n  }\n\n  ngOnInit() {\n    this.loadModels()\n  }\n\n  loadModels() {\n    return this.modelService.GetModels().subscribe((data: Model[]): void => {\n      this.modelList = data\n    })\n  }\n\n  changeName(e: Event) {\n    this.name?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  changeX(e: Event) {\n    this.x?.setValue(Number((e.target as HTMLInputElement).value), { onlySelf: true })\n  }\n\n  changeY(e: Event) {\n    this.y?.setValue(Number((e.target as HTMLInputElement).value), { onlySelf: true })\n  }\n\n  changeH(e: Event) {\n    this.h?.setValue(Number((e.target as HTMLInputElement).value), { onlySelf: true })\n  }\n\n  changeModelId(e: Event) {\n    this.modelId?.setValue((e.target as HTMLInputElement).value, { onlySelf: true })\n  }\n\n  get name() {\n    return this.addDeviceForm.get('name')\n  }\n\n  get modelId() {\n    return this.addDeviceForm.get('modelId')\n  }\n\n  get x() {\n    return this.addDeviceForm.get('position')?.get('x')\n  }\n\n  get y() {\n    return this.addDeviceForm.get('position')?.get('y')\n  }\n\n  get h() {\n    return this.addDeviceForm.get('position')?.get('h')\n  }\n\n  get position() {\n    return this.addDeviceForm.get('position')\n  }\n\n  get positionX() {\n    return this.addDeviceForm.get('position')?.get('x')\n  }\n\n  get positionY() {\n    return this.addDeviceForm.get('position')?.get('y')\n  }\n\n  get positionH() {\n    return this.addDeviceForm.get('position')?.get('h')\n  }\n\n  toString(data: Record): string {\n    return JSON.stringify(data, null, ' ')\n  }\n\n  generateDevice() {\n    this.addDeviceForm.controls.name.setValue(faker.company.name() + ' - ' + faker.company.buzzPhrase())\n    const positionGroup = this.addDeviceForm.get('position') as FormGroup\n    positionGroup.get('x')?.setValue(faker.number.int({ max: 10 }))\n    positionGroup.get('y')?.setValue(faker.number.int({ max: 10 }))\n    positionGroup.get('h')?.setValue(faker.number.int({ max: 10 }))\n    if (this.modelList && this.modelList.length > 0) {\n      this.addDeviceForm.controls.modelId.setValue(\n        this.modelList[Math.floor(Math.random() * this.modelList.length)]._id.toString(),\n      )\n    } else {\n      console.warn('Model list is empty or undefined. Cannot generate device modelId.')\n    }\n  }\n\n  submitForm() {\n    if (this.addDeviceForm.invalid) {\n      return\n    }\n    console.log('Submit Form Add Device: ' + JSON.stringify(this.addDeviceForm.value))\n    this.devicesService.CreateDevice(this.addDeviceForm.value).subscribe((res) => {\n      console.log('Device response: ' + JSON.stringify(res, null, 2))\n      this.isSubmitted = true\n      const insertedId = (res as any).insertedId ? (res as any).insertedId : (res as any).id\n      let device = this.addDeviceForm.value as Device\n      device = { ...device, _id: insertedId || '' } // Ensure _id is set\n      this.device = device\n      console.log('Device with _id ' + insertedId + ' created: ' + JSON.stringify(device, null, 2))\n      this.logService\n        .CreateLog({\n          message: device,\n          objectId: insertedId,\n          operation: 'Create',\n          component: 'Device',\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('device-list'))\n        })\n    })\n  }\n}\n\n    \n\n    \n        \n   Add Device\n  \n    \n      Name\n      \n      @if (addDeviceForm.controls.name.errors) {\n        \n          @if (addDeviceForm.controls.name.errors.required) {\n            Name is required\n          }\n          @if (addDeviceForm.controls.name.errors.minlength) {\n            Name must be at least 4 characters\n          }\n        \n      }\n    \n    \n      \n        \n          \n            x\n            \n            @if (addDeviceForm.get('position.x')?.errors) {\n              \n                @if (addDeviceForm.get('position.x')?.errors?.required) {\n                  X is required\n                }\n                @if (addDeviceForm.get('position.x')?.errors?.min || addDeviceForm.get('position.x')?.errors?.max) {\n                  \n                    X must be at bettween -20 and 20\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            y\n            \n            @if (addDeviceForm.get('position.y')?.errors) {\n              \n                @if (addDeviceForm.get('position.y')?.errors?.required) {\n                  Y is required\n                }\n                @if (addDeviceForm.get('position.y')?.errors?.min || addDeviceForm.get('position.y')?.errors?.max) {\n                  \n                    X must be at bettween -20 and 20\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            h\n            \n            @if (addDeviceForm.get('position.h')?.errors) {\n              \n                @if (addDeviceForm.get('position.h')?.errors?.required) {\n                  H is required\n                  \n                }\n                @if (addDeviceForm.get('position.h')?.errors?.min || addDeviceForm.get('position.h')?.errors?.max) {\n                  \n                    H must be at bettween -20 and 20\n                  \n                }\n              \n            }\n          \n        \n      \n    \n    \n      \n        \n          Model\n          \n            @for (modelObj of modelList; track modelObj; let i = $index) {\n              \n                {{ modelObj.name }}\n              \n            }\n          \n          @if (addDeviceForm.controls.modelId.errors) {\n            \n              @if (addDeviceForm.controls.modelId.errors.required) {\n                Name is required\n              }\n            \n          }\n        \n      \n    \n    Form Status: {{ addDeviceForm.status }}\n    \n      \n        \n           Add\n        \n      \n      \n        \n           Generate random data\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-device.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Add Device            Name            @if (addDeviceForm.controls.name.errors) {                  @if (addDeviceForm.controls.name.errors.required) {            Name is required          }          @if (addDeviceForm.controls.name.errors.minlength) {            Name must be at least 4 characters          }              }                                            x                        @if (addDeviceForm.get(\\'position.x\\')?.errors) {                              @if (addDeviceForm.get(\\'position.x\\')?.errors?.required) {                  X is required                }                @if (addDeviceForm.get(\\'position.x\\')?.errors?.min || addDeviceForm.get(\\'position.x\\')?.errors?.max) {                                      X must be at bettween -20 and 20                                  }                          }                                                y                        @if (addDeviceForm.get(\\'position.y\\')?.errors) {                              @if (addDeviceForm.get(\\'position.y\\')?.errors?.required) {                  Y is required                }                @if (addDeviceForm.get(\\'position.y\\')?.errors?.min || addDeviceForm.get(\\'position.y\\')?.errors?.max) {                                      X must be at bettween -20 and 20                                  }                          }                                                h                        @if (addDeviceForm.get(\\'position.h\\')?.errors) {                              @if (addDeviceForm.get(\\'position.h\\')?.errors?.required) {                  H is required                                  }                @if (addDeviceForm.get(\\'position.h\\')?.errors?.min || addDeviceForm.get(\\'position.h\\')?.errors?.max) {                                      H must be at bettween -20 and 20                                  }                          }                                                        Model                      @for (modelObj of modelList; track modelObj; let i = $index) {                              {{ modelObj.name }}                          }                    @if (addDeviceForm.controls.modelId.errors) {                          @if (addDeviceForm.controls.modelId.errors.required) {                Name is required              }                      }                      Form Status: {{ addDeviceForm.status }}                             Add                                       Generate random data                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceCategory.html":{"url":"classes/DeviceCategory.html","title":"class - DeviceCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceCategories.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeviceCategory {\n  name: string = ''\n  description: string = ''\n}\n\nexport class DeviceCategoryDict {\n  list: DeviceCategory[] = [\n    {\n      name: '',\n      description: '',\n    },\n    {\n      name: 'Connectivity',\n      description: 'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      name: 'Facility',\n      description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      name: 'Site',\n      description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n\n  public getRandomCategory(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findCategory(deviceCategory: DeviceCategory, searchCategory: string) {\n    return deviceCategory.name == searchCategory\n  }\n\n  public getRandom(): DeviceCategory {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceCategoryDict.html":{"url":"classes/DeviceCategoryDict.html","title":"class - DeviceCategoryDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceCategoryDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/deviceCategories.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findCategory\n                            \n                            \n                                    Public\n                                getRandom\n                            \n                            \n                                    Public\n                                getRandomCategory\n                            \n                            \n                                    Public\n                                getRandomName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DeviceCategory[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: '',\n      description: '',\n    },\n    {\n      name: 'Connectivity',\n      description: 'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      name: 'Facility',\n      description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      name: 'Site',\n      description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/deviceCategories.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findCategory\n                        \n                    \n                \n            \n            \n                \nfindCategory(deviceCategory: DeviceCategory, searchCategory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceCategory\n                                            \n                                                            DeviceCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchCategory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandom\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         DeviceCategory\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/deviceCategories.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DeviceCategory {\n  name: string = ''\n  description: string = ''\n}\n\nexport class DeviceCategoryDict {\n  list: DeviceCategory[] = [\n    {\n      name: '',\n      description: '',\n    },\n    {\n      name: 'Connectivity',\n      description: 'Data centers often have multiple fiber connections to the internet provided by multiple carriers.',\n    },\n    {\n      name: 'Facility',\n      description:\n        'Data center buildings may be specifically designed as a data center. For example, the height of ceilings will match requirements for racks and overhead systems. In some cases, a data center occupies a floor of an existing building.',\n    },\n    {\n      name: 'Site',\n      description:\n        'A data center requires a site with connections to grids, networks and physical infrastructure  such as roads. Proximity to markets, customers, employees and services also play a role in selecting an appropriate site. Locating data centers in cold climates can reduce cooling costs.',\n    },\n  ]\n\n  public getRandomCategory(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n\n  findCategory(deviceCategory: DeviceCategory, searchCategory: string) {\n    return deviceCategory.name == searchCategory\n  }\n\n  public getRandom(): DeviceCategory {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.list[Math.floor(Math.random() * this.list.length)].name\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceEditComponent.html":{"url":"components/DeviceEditComponent.html","title":"component - DeviceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices/edit-device/edit-device.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-device\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                            NgbPaginationModule\n                                LogComponent\n                                AttributeListComponent\n                \n            \n\n            \n                styleUrls\n                ./edit-device.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-device.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                attributeComponent\n                            \n                            \n                                attributeComponentObject\n                            \n                            \n                                component\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                device\n                            \n                            \n                                    Public\n                                devicesService\n                            \n                            \n                                editDeviceForm\n                            \n                            \n                                modelList\n                            \n                            \n                                numberValidator\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadModels\n                            \n                            \n                                    Async\n                                navigateToDeviceList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _id\n                                \n                                \n                                    position\n                                \n                                \n                                    positionX\n                                \n                                \n                                    positionY\n                                \n                                \n                                    positionH\n                                \n                                \n                                    name\n                                \n                                \n                                    modelId\n                                \n                                \n                                    x\n                                \n                                \n                                    y\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, devicesService: DeviceService, router: Router, logService: LogService, modelsService: ModelsService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        navigateToDeviceList\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigateToDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/edit-device/edit-device.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponentObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                \n                    \n                        Default value : new Device()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        devicesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDeviceForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Validation\n\n                    \n                \n                \n                    \n                        Default value : new Validation()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/edit-device/edit-device.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _id\n                    \n                \n\n                \n                    \n                        get_id()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:155\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n\n                \n                    \n                        getposition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:159\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n\n                \n                    \n                        getpositionX()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n\n                \n                    \n                        getpositionY()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:167\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionH\n                    \n                \n\n                \n                    \n                        getpositionH()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:171\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:175\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelId\n                    \n                \n\n                \n                    \n                        getmodelId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        x\n                    \n                \n\n                \n                    \n                        getx()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:183\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        y\n                    \n                \n\n                \n                    \n                        gety()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:187\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/devices/edit-device/edit-device.component.ts:191\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { lastValueFrom } from 'rxjs'\n\nimport { CommonModule } from '@angular/common'\nimport { Component, OnInit } from '@angular/core'\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap'\nimport { DeviceService } from '../../../services/device.service'\nimport { LogIn, LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Device } from '../../../shared/device'\nimport { Model } from '../../../shared/model'\nimport Validation from '../../../shared/validation'\nimport { AttributeListComponent } from '../../attribute/attribute-list/attribute-list.component'\nimport { LogComponent } from '../../log/log.component'\n\n@Component({\n  selector: 'app-edit-device',\n  templateUrl: './edit-device.component.html',\n  styleUrls: ['./edit-device.component.scss'],\n  imports: [ReactiveFormsModule, CommonModule, NgbPaginationModule, LogComponent, AttributeListComponent],\n})\nexport class DeviceEditComponent implements OnInit {\n  device: Device = new Device()\n  modelList: Model[]\n  valid: Validation = new Validation()\n  editDeviceForm: FormGroup // Declare the editDeviceForm property\n\n  // Arrow function for number validation\n  numberValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const value: number = control.value as number\n    if (isNaN(Number(value)) || Number(value)  20) {\n      return { invalidNumber: true }\n    }\n    return null\n  }\n\n  createFormGroup = () => {\n    return new FormGroup({\n      _id: new FormControl('', Validators.required),\n      name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      modelId: new FormControl('', Validators.required),\n      position: new FormGroup({\n        x: new FormControl(0, [Validators.required, this.numberValidator, Validators.min(-20), Validators.max(20)]),\n        y: new FormControl(0, [Validators.required, this.numberValidator]),\n        h: new FormControl(0, [Validators.required, this.numberValidator]),\n      }),\n    })\n  }\n\n  attributeComponent: string\n  attributeComponentObject: string\n  component: string\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    public devicesService: DeviceService,\n    private readonly router: Router,\n    private readonly logService: LogService,\n    private readonly modelsService: ModelsService,\n    private formBuilder: FormBuilder,\n  ) {}\n\n  ngOnInit(): void {\n    // Initialize the form group first\n    this.editDeviceForm = this.formBuilder.group({\n      _id: ['', [Validators.required, Validators.minLength(4)]],\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      position: this.formBuilder.group({\n        x: ['', [Validators.required, this.numberValidator, Validators.min(-20), Validators.max(20)]],\n        y: ['', [Validators.required, this.numberValidator, Validators.min(-20), Validators.max(20)]],\n        h: ['', [Validators.required, this.numberValidator, Validators.min(-20), Validators.max(20)]],\n      }),\n      modelId: ['', [Validators.required]],\n    })\n\n    const id = this.activatedRoute.snapshot.paramMap.get('id') ?? ''\n    this.attributeComponent = 'device'\n    this.component = id\n    this.loadModels()\n\n    if (id) {\n      this.devicesService.getDeviceSynchronize(id).subscribe({\n        next: (device: Device) => {\n          this.device = device\n\n          // Patch the form only after it has been initialized\n          this.editDeviceForm.patchValue({\n            _id: this.device._id,\n            name: this.device.name,\n            modelId: this.device.modelId,\n            position: {\n              x: this.device.position.x,\n              y: this.device.position.y,\n              h: this.device.position.h,\n            },\n          })\n        },\n        error: (error) => {\n          console.error('Error fetching device:', error)\n        },\n      })\n    }\n  }\n\n  loadModels(): void {\n    this.modelsService.GetModels().subscribe((data: Model[]): void => {\n      this.modelList = data\n    })\n  }\n  async navigateToDeviceList() {\n    await this.router.navigate(['device-list'])\n  }\n\n  async submitForm() {\n    if (this.editDeviceForm.valid && this.editDeviceForm.touched) {\n      console.log('DeviceEditComponent.submitForm(): ' + JSON.stringify(this.editDeviceForm.value, null, 2))\n      const { _id } = this.editDeviceForm.value\n      const log: LogIn = {\n        message: this.editDeviceForm.value,\n        operation: 'Update',\n        component: 'devices',\n        objectId: _id as string,\n      }\n\n      try {\n        try {\n          await lastValueFrom(this.logService.CreateLog(log))\n        } catch (error) {\n          console.error('Error creating log:', error)\n        }\n\n        try {\n          await lastValueFrom(this.devicesService.UpdateDevice(this.editDeviceForm.value as unknown as Device))\n        } catch (error) {\n          console.error('Error update Device:', error)\n        }\n\n        await this.navigateToDeviceList()\n      } catch (error) {\n        console.error('Error during form submission:', error)\n      }\n    }\n  }\n\n  get _id() {\n    return this.editDeviceForm.get('_id')\n  }\n\n  get position() {\n    return this.editDeviceForm.get('position')\n  }\n\n  get positionX() {\n    return this.editDeviceForm.get('position.x')\n  }\n\n  get positionY() {\n    return this.editDeviceForm.get('position.y')\n  }\n\n  get positionH() {\n    return this.editDeviceForm.get('position.h')\n  }\n\n  get name() {\n    return this.editDeviceForm.get('name')\n  }\n\n  get modelId() {\n    return this.editDeviceForm.get('modelId')\n  }\n\n  get x() {\n    return this.editDeviceForm.get('position.x')\n  }\n\n  get y() {\n    return this.editDeviceForm.get('position.y')\n  }\n\n  get h() {\n    return this.editDeviceForm.get('position.h')\n  }\n}\n\n    \n\n    \n        \n   Edit Device\n  \n    \n      \n        Id\n        \n        @if (editDeviceForm.get('_id')?.errors) {\n        \n          @if (editDeviceForm.controls._id.errors?.required) {\n          Id is required\n          }\n        \n        }\n      \n      \n        \n          Name\n          \n          @if (editDeviceForm.controls.name.errors) {\n          \n            @if (editDeviceForm.controls.name.errors.required) {\n            Name is required\n            }\n            @if (editDeviceForm.controls.name.errors.minlength) {\n            Name must be at least 4 characters\n            }\n          \n          }\n        \n      \n    \n    \n      Position\n      \n        \n          x\n          \n        \n        @if (editDeviceForm.get('position.x') && editDeviceForm.get('position.x')?.errors) {\n        \n          @if (editDeviceForm.get('position.x')?.errors?.required) {\n          x is required\n          }\n          @if (editDeviceForm.get('position.x')?.errors?.minlength) {\n          x must be at least 4 characters\n          }\n          @if (editDeviceForm.get('position.x')?.errors?.maxlength) {\n          x must be at most 255 characters\n          }\n        \n        }\n      \n      \n        \n          y\n          \n        \n        @if (editDeviceForm.get('position.y')?.errors) {\n        \n          @if (editDeviceForm.get('position.y')?.errors?.required) {\n          y is required\n          }\n        \n        }\n      \n      \n        \n          h\n          \n        \n        @if (editDeviceForm.get('position.h')?.errors) {\n        \n          @if (editDeviceForm.get('position.h')?.errors?.required) {\n          h is required\n          }\n        \n        }\n      \n    \n    \n      \n        \n          Model\n          \n            @for (modelObj of modelList; track modelObj; let i = $index) {\n            \n              {{ modelObj.name }}\n            \n            }\n          \n          @if (editDeviceForm.controls.modelId.errors) {\n          \n            @if (editDeviceForm.controls.modelId.errors.required) {\n            Name is required\n            }\n          \n          }\n        \n      \n    \n    \n      \n         Update\n      \n\n      @if (!(editDeviceForm.invalid && editDeviceForm.touched)) {\n      \n        editDeviceForm is invalid or untouched\n      \n      }\n      @if (!(editDeviceForm.valid && editDeviceForm.touched)) {\n      \n        editDeviceForm is valid and touched\n      \n      }\n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./edit-device.component.scss\n                \n                input.ng-invalid.ng-touched {\n  border: 2px solid red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Device                    Id                @if (editDeviceForm.get(\\'_id\\')?.errors) {                  @if (editDeviceForm.controls._id.errors?.required) {          Id is required          }                }                              Name                    @if (editDeviceForm.controls.name.errors) {                      @if (editDeviceForm.controls.name.errors.required) {            Name is required            }            @if (editDeviceForm.controls.name.errors.minlength) {            Name must be at least 4 characters            }                    }                            Position                        x                          @if (editDeviceForm.get(\\'position.x\\') && editDeviceForm.get(\\'position.x\\')?.errors) {                  @if (editDeviceForm.get(\\'position.x\\')?.errors?.required) {          x is required          }          @if (editDeviceForm.get(\\'position.x\\')?.errors?.minlength) {          x must be at least 4 characters          }          @if (editDeviceForm.get(\\'position.x\\')?.errors?.maxlength) {          x must be at most 255 characters          }                }                              y                          @if (editDeviceForm.get(\\'position.y\\')?.errors) {                  @if (editDeviceForm.get(\\'position.y\\')?.errors?.required) {          y is required          }                }                              h                          @if (editDeviceForm.get(\\'position.h\\')?.errors) {                  @if (editDeviceForm.get(\\'position.h\\')?.errors?.required) {          h is required          }                }                                      Model                      @for (modelObj of modelList; track modelObj; let i = $index) {                          {{ modelObj.name }}                        }                    @if (editDeviceForm.controls.modelId.errors) {                      @if (editDeviceForm.controls.modelId.errors.required) {            Name is required            }                    }                                     Update            @if (!(editDeviceForm.invalid && editDeviceForm.touched)) {              editDeviceForm is invalid or untouched            }      @if (!(editDeviceForm.valid && editDeviceForm.touched)) {              editDeviceForm is valid and touched            }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceInterface.html":{"url":"interfaces/DeviceInterface.html","title":"interface - DeviceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a device object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            modelId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         Position\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Position\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Position {\n  x: number\n  y: number\n  h: number\n}\n\n/**\n * Interface for a device object.\n * @property _id - The unique identifier of the device.\n * @property name - The name of the device.\n * @property modelId - The model identifier associated with the device.\n * @property position - The position of the device in 3D space.\n */\nexport interface DeviceInterface {\n  _id: string\n  name: string\n  modelId: string\n  position: Position\n}\n\n/**\n * Represents a device with a unique ID, name, model ID, and position.\n */\nexport class Device {\n  /**\n   * The unique identifier of the device.\n   */\n  _id: string = ''\n\n  /**\n   * The name of the device.\n   */\n  name: string = ''\n\n  /**\n   * The model identifier associated with the device.\n   */\n  modelId: string = ''\n\n  /**\n   * The position of the device in 3D space.\n   */\n  position: Position = { x: 0, y: 0, h: 0 }\n\n  /**\n   * Indicates whether debug mode is enabled.\n   */\n  isDebugMode: boolean = false\n\n  /**\n   * Creates an instance of the Device class.\n   * @param name - The name of the device. Defaults to an empty string.\n   * @param modelId - The model identifier of the device. Defaults to an empty string.\n   * @param position - The position of the device in 3D space. Defaults to { x: 0, y: 0, h: 0 }.\n   */\n  constructor(name: string = '', modelId: string = '', position: Position = { x: 0, y: 0, h: 0 }) {\n    this.name = name\n    this.modelId = modelId\n    this.position = position\n  }\n\n  /**\n   * Returns a string representation of the device.\n   * @returns A string containing the device ID and name.\n   */\n  toString(): string {\n    return `Device ID: ${this._id || 'N/A'}, Name: ${this.name || 'N/A'}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceListComponent.html":{"url":"components/DeviceListComponent.html","title":"component - DeviceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/devices/devices-list/devices-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-device-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgbPaginationModule\n                                LogComponent\n                \n            \n\n            \n                styleUrls\n                ./devices-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./devices-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                componentName\n                            \n                            \n                                deviceList\n                            \n                            \n                                deviceListPage\n                            \n                            \n                                modelList\n                            \n                            \n                                selectedDevice\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddForm\n                            \n                            \n                                    Async\n                                CloneDevice\n                            \n                            \n                                    Async\n                                DeleteDevice\n                            \n                            \n                                    Async\n                                EditForm\n                            \n                            \n                                FindModelName\n                            \n                            \n                                getDeviceList\n                            \n                            \n                                loadDevices\n                            \n                            \n                                loadModels\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stringify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(devicesService: DeviceService, modelsService: ModelsService, logService: LogService, router: Router, ngZone: NgZone, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        devicesService\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CloneDevice\n                        \n                    \n                \n            \n            \n                \n                        \n                    CloneDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Clones an existing device by its ID, logs the operation, and reloads the device list.\nNavigates to the device list page after cloning.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the device to be cloned.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteDevice\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        EditForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditForm(device: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                device\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FindModelName\n                        \n                    \n                \n            \n            \n                \nFindModelName(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceList\n                        \n                    \n                \n            \n            \n                \ngetDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Device[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDevices\n                        \n                    \n                \n            \n            \n                \nloadDevices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringify\n                        \n                    \n                \n            \n            \n                \nstringify(obj: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/devices/devices-list/devices-list.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'devices'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Devices'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDevice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/devices/devices-list/devices-list.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { firstValueFrom } from 'rxjs'\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router'\n\nimport { DeviceService } from '../../../services/device.service'\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Device } from '../../../shared/device'\nimport { Model } from '../../../shared/model'\nimport { LogComponent } from '../../log/log.component'\nimport { CommonModule } from '@angular/common'\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './devices-list.component.html',\n  styleUrls: ['./devices-list.component.scss'],\n  standalone: true,\n  imports: [CommonModule, NgbPaginationModule, LogComponent],\n})\nexport class DeviceListComponent implements OnInit {\n  deviceList: Device[] = []\n  modelList: Model[] = []\n  selectedDevice: Device\n  component = 'devices'\n  componentName = 'Devices'\n  deviceListPage = 1\n\n  ngOnInit() {\n    this.loadDevices()\n    this.loadModels()\n  }\n\n  constructor(\n    private readonly devicesService: DeviceService,\n    private readonly modelsService: ModelsService,\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly ngZone: NgZone,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  loadDevices() {\n    return this.devicesService.GetDevices().subscribe((data: Device[]) => {\n      this.deviceList = data\n      // Reset page if current page is out of range\n      const maxPage = Math.ceil(this.deviceList.length / 5) || 1\n      if (this.deviceListPage > maxPage) {\n        this.deviceListPage = maxPage\n      }\n    })\n  }\n\n  loadModels() {\n    return this.modelsService.GetModels().subscribe((data: Model[]): void => {\n      this.modelList = data\n    })\n  }\n\n  async DeleteDevice(id: string) {\n    try {\n      await firstValueFrom(\n        this.logService.CreateLog({\n          message: { id },\n          objectId: id,\n          operation: 'Delete',\n          component: this.component,\n        }),\n      )\n    } catch (logError) {\n      console.error('Error creating log:', logError)\n      // Optionally, return or show a notification to the user\n      return\n    }\n\n    try {\n      await firstValueFrom(this.devicesService.DeleteDevice(id))\n      console.log(`${id} deleted`)\n      this.loadDevices()\n      this.loadModels()\n      await this.router.navigate(['/device-list/'], { relativeTo: this.route, skipLocationChange: true })\n    } catch (deleteError) {\n      console.error('Error deleting device:', deleteError)\n      // Optionally, show a notification to the user\n    }\n  }\n\n  /**\n   * Clones an existing device by its ID, logs the operation, and reloads the device list.\n   * Navigates to the device list page after cloning.\n   * @param id - The ID of the device to be cloned.\n   */\n  async CloneDevice(id: string) {\n    const idNew = this.devicesService.CloneDevice(id) as Device\n    console.info(`Cloned device id: ${id} to result CloneDevice id: ${JSON.stringify(idNew)}`)\n    this.logService.CreateLog({\n      message: { id: id, idNew: idNew },\n      operation: 'Clone',\n      component: this.component,\n    })\n    await new Promise((resolve) => {\n      this.router.events.subscribe((event) => {\n        if (event instanceof NavigationEnd && event.url === '/device-list') {\n          this.loadDevices()\n          resolve()\n        }\n      })\n      this.ngZone.run(() => this.router.navigateByUrl('device-list'))\n    })\n  }\n\n  async AddForm() {\n    await this.router.navigateByUrl('/add-device')\n  }\n\n  async EditForm(device: Device) {\n    this.selectedDevice = device\n    if (device._id !== undefined) {\n      await this.router.navigate(['edit-device', device._id], { relativeTo: this.route.parent })\n    } else {\n      console.warn('[DeviceListComponent] Device route.id is undefined')\n    }\n  }\n\n  FindModelName(id: string): string {\n    // console.info('[FindModelName] try find model name by id: ' + id)\n    let model = this.modelList.find((e: Model) => e._id === id)?.name as string\n    model ??= 'Unknown'\n    return model\n  }\n\n  stringify(obj: object): string {\n    return JSON.stringify(obj, null, 2)\n  }\n\n  getDeviceList(): Device[] {\n    return this.deviceList\n  }\n}\n\n    \n\n    \n        \n   Devices [{{deviceList.length}} devices]\n  \n    \n      \n        Name\n        Position\n        Model\n      \n    \n    \n      @for (device of deviceList | slice: (deviceListPage - 1) * 5 : deviceListPage * 5; track device) {\n      \n        \n          {{ device.name }}\n          {{ device._id }}\n        \n        ({{ device.position.x }}, {{ device.position.y }}, {{ device.position.h }})\n        \n          \n            {{ device.modelId === null ? 'is null' : FindModelName(device.modelId) }}\n          {{ device.modelId }}\n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      }\n    \n  \n  \n     Add\n  \n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./devices-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Devices [{{deviceList.length}} devices]                    Name        Position        Model                    @for (device of deviceList | slice: (deviceListPage - 1) * 5 : deviceListPage * 5; track device) {                        {{ device.name }}          {{ device._id }}                ({{ device.position.x }}, {{ device.position.y }}, {{ device.position.h }})                              {{ device.modelId === null ? \\'is null\\' : FindModelName(device.modelId) }}          {{ device.modelId }}                                                                                                                                                                          }             Add      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceService.html":{"url":"injectables/DeviceService.html","title":"injectable - DeviceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/device.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                objectName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneDevice\n                            \n                            \n                                CreateDevice\n                            \n                            \n                                DeleteDevice\n                            \n                            \n                                GetDevices\n                            \n                            \n                                GetDeviceSynchro\n                            \n                            \n                                getDeviceSynchronize\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                postDevice\n                            \n                            \n                                UpdateDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/device.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneDevice\n                        \n                    \n                \n            \n            \n                \nCloneDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateDevice\n                        \n                    \n                \n            \n            \n                \nCreateDevice(data: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteDevice\n                        \n                    \n                \n            \n            \n                \nDeleteDevice(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDevices\n                        \n                    \n                \n            \n            \n                \nGetDevices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDeviceSynchro\n                        \n                    \n                \n            \n            \n                \nGetDeviceSynchro(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceSynchronize\n                        \n                    \n                \n            \n            \n                \ngetDeviceSynchronize(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, _result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:116\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: Error) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postDevice\n                        \n                    \n                \n            \n            \n                \npostDevice(data: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDevice\n                        \n                    \n                \n            \n            \n                \nUpdateDevice(data: Device)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/device.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Device\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/device.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/device.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        objectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'devices'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/device.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs'\nimport { catchError, map, retry } from 'rxjs/operators'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\nimport { Device } from '../shared/device'\nimport { Log, LogIn } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceService {\n  baseurl = environment.baseurl\n  private readonly objectName = 'devices'\n\n  constructor(private readonly http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    }),\n  }\n\n  GetDevices(): Observable {\n    return this.http\n      .get(environment.baseurl + '/' + this.objectName + '/')\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetDevices')))\n  }\n\n  getDeviceSynchronize(id: string): Observable {\n    return this.http.get(environment.baseurl + '/' + this.objectName + '/' + id)\n  }\n\n  GetDeviceSynchro(id: string): Observable {\n    return this.http.get(environment.baseurl + '/' + this.objectName + '/' + id).pipe(\n      map((res) => {\n        return res\n      }),\n      catchError(this.handleErrorTemplate('GetDeviceSynchro', id as unknown as Device)),\n    )\n  }\n\n  DeleteDevice(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/' + this.objectName + '/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteDevice', id as unknown as Device)))\n  }\n\n  CreateDevice(data: Device): Observable {\n    return this.http\n      .post(environment.baseurl + '/' + this.objectName + '/', JSON.stringify(data, null, 2), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('CreateDevice', data)))\n  }\n\n  CloneDevice(id: string): object {\n    let result: Device = {\n      _id: '',\n      name: '',\n      modelId: '',\n      position: { x: 0, y: 0, h: 0 },\n      isDebugMode: false,\n    }\n    this.getDeviceSynchronize(id).subscribe((value: Device) => {\n      console.info('Get Device: ' + JSON.stringify(value, null, ' '))\n      const deviceToCreate = value\n      if (deviceToCreate._id !== undefined) {\n        delete (deviceToCreate as { _id?: string })._id\n      }\n      console.info('Clone DeviceCreate: ' + JSON.stringify(deviceToCreate, null, ' '))\n      deviceToCreate.name += ' (Clone)'\n      this.CreateDevice(deviceToCreate).subscribe((createdDevice: Device) => {\n        result = createdDevice\n        console.info('Create Cloned Device: ' + JSON.stringify(createdDevice, null, ' '))\n        const log: LogIn = {\n          objectId: result._id,\n          operation: 'Clone',\n          component: 'Device',\n          message: deviceToCreate,\n        }\n        console.log('LogService.CreateLog: ' + JSON.stringify(log, null, ' '))\n        this.http\n          .post(`${environment.baseurl}/logs/`, log, this.httpOptions)\n          .pipe(retry(1), catchError(this.handleErrorTemplate('CreateLog', log)))\n          .subscribe()\n      })\n    })\n    return result // Add this line to return the result\n  }\n\n  UpdateDevice(data: Device): Observable {\n    console.log(\n      'device.service.updateDevice: PUT ' +\n        environment.baseurl +\n        '/devices/' +\n        data._id +\n        '  ' +\n        JSON.stringify(data, null, ' '),\n    )\n    const requestData = JSON.stringify(data, null, ' ')\n    return this.http\n      .put(environment.baseurl + '/devices/' + data._id, requestData, this.httpOptions)\n      .pipe(catchError(this.handleErrorTemplate('updateDevice', data)))\n  }\n\n  postDevice(data: Device): Observable {\n    return this.http\n      .post(`${environment.baseurl}/devices`, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('postDevice', data)))\n  }\n\n  private handleErrorTemplate(operation: string, _result?: T) {\n    return (error: Error): Observable => {\n      console.error(`DeviceService.handleErrorTemplate operation: ${operation}, error: ${error.message}`)\n      return throwError(() => error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceType.html":{"url":"classes/DeviceType.html","title":"class - DeviceType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/DeviceTypes.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DeviceTypeInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/DeviceTypes.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/DeviceTypes.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/DeviceTypes.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface DeviceTypeInterface {\n  name: string\n  description: string\n}\n\nexport class DeviceType implements DeviceTypeInterface {\n  constructor(\n    public name: string,\n    public description: string = '',\n  ) {}\n}\n\nexport class DeviceTypeDict {\n  private list: DeviceType[] = [\n    new DeviceType(''),\n    new DeviceType('Bridge'),\n    new DeviceType('CoolAir'),\n    new DeviceType('Copier'),\n    new DeviceType('Desktop'),\n    new DeviceType('Firewall'),\n    new DeviceType('Gateway'),\n    new DeviceType('Hubs'),\n    new DeviceType('Load Balancer'),\n    new DeviceType('Modem'),\n    new DeviceType('Multiplexer'),\n    new DeviceType('PDU System'),\n    new DeviceType('Power'),\n    new DeviceType('Printer'),\n    new DeviceType('Probe'),\n    new DeviceType('Repeaters'),\n    new DeviceType('Router'),\n    new DeviceType('Security Device'),\n    new DeviceType('Server'),\n    new DeviceType('Switch'),\n    new DeviceType('Telephone'),\n    new DeviceType('Terminal'),\n    new DeviceType('Traffic shaper'),\n    new DeviceType('Transceiver'),\n    new DeviceType('UPS System'),\n    new DeviceType('Workstations'),\n  ]\n\n  public get(): DeviceType[] {\n    return [...this.list]\n  }\n\n  public getRandom(): DeviceType {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.getRandom().name\n  }\n\n  public findType(name: string): DeviceType | string {\n    return this.list.find((e) => e.name === name) ?? name\n  }\n\n  /**\n   * Logs the device type if found by name.\n   * @param name - The name to search for.\n   */\n  public logTypeByName(name: string): void {\n    const found = this.list.find((e) => e.name === name)\n    if (found) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceTypeDict.html":{"url":"classes/DeviceTypeDict.html","title":"class - DeviceTypeDict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceTypeDict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/DeviceTypes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findType\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getRandom\n                            \n                            \n                                    Public\n                                getRandomName\n                            \n                            \n                                    Public\n                                logTypeByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DeviceType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new DeviceType(''),\n    new DeviceType('Bridge'),\n    new DeviceType('CoolAir'),\n    new DeviceType('Copier'),\n    new DeviceType('Desktop'),\n    new DeviceType('Firewall'),\n    new DeviceType('Gateway'),\n    new DeviceType('Hubs'),\n    new DeviceType('Load Balancer'),\n    new DeviceType('Modem'),\n    new DeviceType('Multiplexer'),\n    new DeviceType('PDU System'),\n    new DeviceType('Power'),\n    new DeviceType('Printer'),\n    new DeviceType('Probe'),\n    new DeviceType('Repeaters'),\n    new DeviceType('Router'),\n    new DeviceType('Security Device'),\n    new DeviceType('Server'),\n    new DeviceType('Switch'),\n    new DeviceType('Telephone'),\n    new DeviceType('Terminal'),\n    new DeviceType('Traffic shaper'),\n    new DeviceType('Transceiver'),\n    new DeviceType('UPS System'),\n    new DeviceType('Workstations'),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/DeviceTypes.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findType(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/DeviceTypes.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DeviceType | string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/DeviceTypes.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DeviceType[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandom\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/DeviceTypes.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         DeviceType\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRandomName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRandomName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/DeviceTypes.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logTypeByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    logTypeByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/DeviceTypes.ts:68\n                        \n                    \n\n\n            \n                \n                        Logs the device type if found by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface DeviceTypeInterface {\n  name: string\n  description: string\n}\n\nexport class DeviceType implements DeviceTypeInterface {\n  constructor(\n    public name: string,\n    public description: string = '',\n  ) {}\n}\n\nexport class DeviceTypeDict {\n  private list: DeviceType[] = [\n    new DeviceType(''),\n    new DeviceType('Bridge'),\n    new DeviceType('CoolAir'),\n    new DeviceType('Copier'),\n    new DeviceType('Desktop'),\n    new DeviceType('Firewall'),\n    new DeviceType('Gateway'),\n    new DeviceType('Hubs'),\n    new DeviceType('Load Balancer'),\n    new DeviceType('Modem'),\n    new DeviceType('Multiplexer'),\n    new DeviceType('PDU System'),\n    new DeviceType('Power'),\n    new DeviceType('Printer'),\n    new DeviceType('Probe'),\n    new DeviceType('Repeaters'),\n    new DeviceType('Router'),\n    new DeviceType('Security Device'),\n    new DeviceType('Server'),\n    new DeviceType('Switch'),\n    new DeviceType('Telephone'),\n    new DeviceType('Terminal'),\n    new DeviceType('Traffic shaper'),\n    new DeviceType('Transceiver'),\n    new DeviceType('UPS System'),\n    new DeviceType('Workstations'),\n  ]\n\n  public get(): DeviceType[] {\n    return [...this.list]\n  }\n\n  public getRandom(): DeviceType {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.getRandom().name\n  }\n\n  public findType(name: string): DeviceType | string {\n    return this.list.find((e) => e.name === name) ?? name\n  }\n\n  /**\n   * Logs the device type if found by name.\n   * @param name - The name to search for.\n   */\n  public logTypeByName(name: string): void {\n    const found = this.list.find((e) => e.name === name)\n    if (found) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceTypeInterface.html":{"url":"interfaces/DeviceTypeInterface.html","title":"interface - DeviceTypeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceTypeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/DeviceTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeviceTypeInterface {\n  name: string\n  description: string\n}\n\nexport class DeviceType implements DeviceTypeInterface {\n  constructor(\n    public name: string,\n    public description: string = '',\n  ) {}\n}\n\nexport class DeviceTypeDict {\n  private list: DeviceType[] = [\n    new DeviceType(''),\n    new DeviceType('Bridge'),\n    new DeviceType('CoolAir'),\n    new DeviceType('Copier'),\n    new DeviceType('Desktop'),\n    new DeviceType('Firewall'),\n    new DeviceType('Gateway'),\n    new DeviceType('Hubs'),\n    new DeviceType('Load Balancer'),\n    new DeviceType('Modem'),\n    new DeviceType('Multiplexer'),\n    new DeviceType('PDU System'),\n    new DeviceType('Power'),\n    new DeviceType('Printer'),\n    new DeviceType('Probe'),\n    new DeviceType('Repeaters'),\n    new DeviceType('Router'),\n    new DeviceType('Security Device'),\n    new DeviceType('Server'),\n    new DeviceType('Switch'),\n    new DeviceType('Telephone'),\n    new DeviceType('Terminal'),\n    new DeviceType('Traffic shaper'),\n    new DeviceType('Transceiver'),\n    new DeviceType('UPS System'),\n    new DeviceType('Workstations'),\n  ]\n\n  public get(): DeviceType[] {\n    return [...this.list]\n  }\n\n  public getRandom(): DeviceType {\n    return this.list[Math.floor(Math.random() * this.list.length)]\n  }\n\n  public getRandomName(): string {\n    return this.getRandom().name\n  }\n\n  public findType(name: string): DeviceType | string {\n    return this.list.find((e) => e.name === name) ?? name\n  }\n\n  /**\n   * Logs the device type if found by name.\n   * @param name - The name to search for.\n   */\n  public logTypeByName(name: string): void {\n    const found = this.list.find((e) => e.name === name)\n    if (found) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dimension.html":{"url":"interfaces/Dimension.html","title":"interface - Dimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Dimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            depth\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        depth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        depth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Dimension {\n  width: number\n  height: number\n  depth: number\n}\n\ninterface Texture {\n  front: string\n  back: string\n  side: string\n  top: string\n  bottom: string\n}\n\nexport class Model {\n  _id: string\n  name: string\n  dimension: Dimension\n  texture: Texture\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.dimension = {\n      width: 0,\n      height: 0,\n      depth: 0,\n    }\n    this.texture = {\n      front: '',\n      back: '',\n      side: '',\n      top: '',\n      bottom: '',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FloorDimension.html":{"url":"interfaces/FloorDimension.html","title":"interface - FloorDimension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FloorDimension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/floors.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            h\n                                        \n                                \n                                \n                                        \n                                            hPos\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            xPos\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            yPos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        h\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        h:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FloorDimension {\n  description: string\n  x: string\n  y: string\n  h: string\n  xPos: string\n  yPos: string\n  hPos: string\n}\n\nexport interface Floors {\n  _id: string\n  name: string\n  address: {\n    street: string\n    city: string\n    country: string\n    postcode: string\n  }\n  dimension: [FloorDimension]\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FloorListComponent.html":{"url":"components/FloorListComponent.html","title":"component - FloorListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FloorListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/floors/floor-list/floor-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-floor-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgbPaginationModule\n                                LogComponent\n                \n            \n\n            \n                styleUrls\n                ./floor-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./floor-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                componentName\n                            \n                            \n                                floorList\n                            \n                            \n                                floorListPage\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                selectedFloor\n                            \n                            \n                                totalItems\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFloor\n                            \n                            \n                                cloneFloor\n                            \n                            \n                                deleteFloor\n                            \n                            \n                                editFloor\n                            \n                            \n                                loadFloors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPageChange\n                            \n                            \n                                onPageSizeChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(floorService: FloorService, logService: LogService, router: Router, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        floorService\n                                                  \n                                                        \n                                                                        FloorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFloor\n                        \n                    \n                \n            \n            \n                \naddFloor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cloneFloor\n                        \n                    \n                \n            \n            \n                \ncloneFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFloor\n                        \n                    \n                \n            \n            \n                \ndeleteFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editFloor\n                        \n                    \n                \n            \n            \n                \neditFloor(floor: Floors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                floor\n                                            \n                                                            Floors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFloors\n                        \n                    \n                \n            \n            \n                \nloadFloors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageSizeChange\n                        \n                    \n                \n            \n            \n                \nonPageSizeChange(pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/floors/floor-list/floor-list.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'floors'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Floor'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        floorList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floors[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        floorListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFloor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floors\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/floors/floor-list/floor-list.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common'\nimport { Component, NgZone, OnInit, OnDestroy } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { FloorService } from '../../../services/floor.service'\nimport { LogService } from '../../../services/log.service'\nimport { Floors } from '../../../shared/floors'\nimport { LogComponent } from '../../log/log.component'\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { Subject, takeUntil } from 'rxjs'\n\n@Component({\n  selector: 'app-floor-list',\n  templateUrl: './floor-list.component.html',\n  styleUrls: ['./floor-list.component.scss'],\n  standalone: true,\n  imports: [CommonModule, NgbPaginationModule, LogComponent],\n})\nexport class FloorListComponent implements OnInit, OnDestroy {\n  floorList: Floors[] = []\n  selectedFloor: Floors\n  component: string = 'floors'\n  componentName: string = 'Floor'\n  pageSize: number = 5 // Number of items per page\n  totalItems: number = 0 // Total number of items\n  page: number = 1 // Current page number\n  floorListPage: number = 1\n\n  private unsubscribe$ = new Subject()\n\n  ngOnInit() {\n    this.loadFloors()\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next()\n    this.unsubscribe$.complete()\n  }\n\n  onPageChange(page: number): void {\n    this.floorListPage = page\n  }\n  onPageSizeChange(pageSize: number): void {\n    this.floorListPage = pageSize\n  }\n\n  constructor(\n    private readonly floorService: FloorService,\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly ngZone: NgZone,\n  ) {}\n\n  loadFloors() {\n    this.floorService\n      .GetFloors()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((data: Floors[]) => {\n        this.floorList = data\n      })\n  }\n\n  deleteFloor(id: string) {\n    console.info('[deleteFloor] delete floor:', id || 'undefined')\n    this.logService\n      .CreateLog({\n        message: { id },\n        objectId: id,\n        operation: 'Delete',\n        component: this.component,\n      })\n      .subscribe({\n        next: () => {\n          // Log created successfully, proceed to delete\n          this.floorService.DeleteFloor(id).subscribe({\n            next: () => {\n              // Remove the deleted floor from the list in place\n              this.floorList = this.floorList.filter((floor) => floor._id !== id)\n            },\n            error: (err) => {\n              console.error('[deleteFloor] Failed to delete floor:', err)\n            },\n            complete: () => {\n              // Optionally, you can call this.loadFloors() here if you want to refresh from backend\n              this.loadFloors()\n              console.log('[deleteFloor] Floor deleted successfully:', id)\n            },\n          })\n        },\n        error: (logError) => {\n          console.error('[deleteFloor] Error creating log:', logError)\n        },\n      })\n  }\n\n  cloneFloor(id: string) {\n    this.floorService.CloneFloor(id).subscribe((id_new: string) => {\n      this.logService\n        .CreateLog({\n          message: { id: id, id_new: id_new },\n          operation: 'Clone',\n          component: this.component,\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('floor-list'))\n        })\n      this.loadFloors()\n    })\n  }\n\n  addFloor() {\n    this.router.navigateByUrl('add-floor')\n  }\n\n  editFloor(floor: Floors) {\n    this.selectedFloor = floor\n    this.router.navigate(['edit-floor/', floor._id])\n  }\n}\n\n    \n\n    \n        \n   Floors\n  \n    \n      \n        Name/Address\n        Dimension\n      \n    \n    \n      @for (floor of floorList | slice: (floorListPage - 1) * 5 : floorListPage * 5; track floor) {\n      \n        \n          {{ floor.name }}\n          {{ floor._id }}\n          \n            {{ floor.address.street }}\n            {{ floor.address.city }} {{ floor.address.postcode }} {{ floor.address.country }}\n          \n        \n        \n          @for (d of floor.dimension; track d) {\n          \n            \n              {{ d.description }}\n               {{ d.x }}\n              {{ d.y }} {{ d.h }}\n              \n              {{ d.xPos }} {{ d.yPos }}\n              {{ d.hPos }}\n            \n          \n          }\n        \n        \n          \n            \n              Edit\n            \n            \n              Delete\n            \n            \n              Clone\n            \n          \n        \n      \n      }\n    \n  \n  \n     Add\n  \n  \n  \n\n\n@if (component) {\n\n}\n\n    \n\n    \n                \n                    ./floor-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Floors                    Name/Address        Dimension                    @for (floor of floorList | slice: (floorListPage - 1) * 5 : floorListPage * 5; track floor) {                        {{ floor.name }}          {{ floor._id }}                      {{ floor.address.street }}            {{ floor.address.city }} {{ floor.address.postcode }} {{ floor.address.country }}                                    @for (d of floor.dimension; track d) {                                    {{ d.description }}               {{ d.x }}              {{ d.y }} {{ d.h }}                            {{ d.xPos }} {{ d.yPos }}              {{ d.hPos }}                                }                                                    Edit                                      Delete                                      Clone                                          }             Add      @if (component) {}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FloorListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FloorService.html":{"url":"injectables/FloorService.html","title":"injectable - FloorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FloorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/floor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneFloor\n                            \n                            \n                                CreateFloor\n                            \n                            \n                                DeleteFloor\n                            \n                            \n                                errorHandl\n                            \n                            \n                                    Private\n                                formatErrorMessage\n                            \n                            \n                                GetFloor\n                            \n                            \n                                GetFloors\n                            \n                            \n                                getFloorSynchronize\n                            \n                            \n                                UpdateFloor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/floor.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneFloor\n                        \n                    \n                \n            \n            \n                \nCloneFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Clones a Floors by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the Floors to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the cloned Floors's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateFloor\n                        \n                    \n                \n            \n            \n                \nCreateFloor(data: Floors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Creates a new Floors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Floors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Floors data to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created Floors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteFloor\n                        \n                    \n                \n            \n            \n                \nDeleteFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Deletes a Floors by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the Floors to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted Floors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorHandl\n                        \n                    \n                \n            \n            \n                \nerrorHandl(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Handles the error response from an API call.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object containing the error message and status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatErrorMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatErrorMessage(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetFloor\n                        \n                    \n                \n            \n            \n                \nGetFloor(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Retrieves a Floors by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the Floors to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved Floors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetFloors\n                        \n                    \n                \n            \n            \n                \nGetFloors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of floors.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Floors objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFloorSynchronize\n                        \n                    \n                \n            \n            \n                \ngetFloorSynchronize(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Retrieves a Floors by its ID as an Observable.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the Floors to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the Floors object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateFloor\n                        \n                    \n                \n            \n            \n                \nUpdateFloor(id: string, data: Floors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/floor.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Updates a Floors with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the Floors to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Floors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated Floors data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated Floors.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/floor.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/floor.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Floors } from '../shared/floors'\nimport { Log, LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FloorService {\n  baseurl = environment.baseurl\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the list of floors.\n   * @returns An Observable that emits an array of Floors objects.\n   */\n  GetFloors(): Observable {\n    return this.http.get(environment.baseurl + '/floors/').pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Retrieves a Floors by its ID as an Observable.\n   * @param id - The ID of the Floors to retrieve.\n   * @returns An Observable that emits the Floors object.\n   */\n  getFloorSynchronize(id: string | null): Observable {\n    return this.http.get(environment.baseurl + '/floors/' + id)\n  }\n\n  /**\n   * Retrieves a Floors by its ID.\n   * @param id - The ID of the Floors to retrieve.\n   * @returns An Observable that emits the retrieved Floors.\n   */\n  GetFloor(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/floors/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Deletes a Floors by its ID.\n   * @param id - The ID of the Floors to delete.\n   * @returns An Observable that emits the deleted Floors.\n   */\n  DeleteFloor(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/floors/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Creates a new Floors.\n   * @param data The Floors data to be created.\n   * @returns An Observable that emits the created Floors.\n   */\n  CreateFloor(data: Floors): Observable {\n    return this.http\n      .post(environment.baseurl + '/floors/', JSON.stringify(data, null, 2), this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Clones a Floors by its ID.\n   * @param id - The ID of the Floors to clone.\n   * @returns An Observable that emits the cloned Floors's ID.\n   */\n  CloneFloor(id: string): Observable {\n    const newId = uuidv4()\n    return new Observable((observer) => {\n      this.GetFloor(id).subscribe({\n        next: (Floors: Floors) => {\n          const clonedFloor = { ...Floors, _id: newId }\n          this.CreateFloor(clonedFloor).subscribe({\n            next: () => {\n              this.ngZone.run(() => this.router.navigateByUrl('floor-list'))\n              observer.next(newId)\n              observer.complete()\n            },\n            error: (err) => observer.error(err),\n          })\n        },\n        error: (err) => observer.error(err),\n      })\n    })\n  }\n\n  /**\n   * Updates a Floors with the specified ID.\n   * @param id - The ID of the Floors to update.\n   * @param data - The updated Floors data.\n   * @returns An Observable that emits the updated Floors.\n   */\n  UpdateFloor(id: string, data: Floors): Observable {\n    return this.http\n      .put(`${environment.baseurl}/floors/${id}`, JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl))\n  }\n\n  /**\n   * Handles the error response from an API call.\n   * @param error - The error object containing the error message and status.\n   * @returns An Observable that emits the error message.\n   */\n  errorHandl(error: any): Observable {\n    const errorMessage = this.formatErrorMessage(error)\n    console.error(errorMessage)\n    return throwError(() => new Error(errorMessage))\n  }\n\n  private formatErrorMessage(error: any): string {\n    if (error.error instanceof ErrorEvent) {\n      return error.error.message\n    }\n    return `Error Code: ${error.status}\\nMessage: ${error.error?.message || error.message}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Floors.html":{"url":"interfaces/Floors.html","title":"interface - Floors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Floors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/floors.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            dimension\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension:     [FloorDimension]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [FloorDimension]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FloorDimension {\n  description: string\n  x: string\n  y: string\n  h: string\n  xPos: string\n  yPos: string\n  hPos: string\n}\n\nexport interface Floors {\n  _id: string\n  name: string\n  address: {\n    street: string\n    city: string\n    country: string\n    postcode: string\n  }\n  dimension: [FloorDimension]\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents a GitHub issue as returned by the GitHub Issues API.\nOnly a subset of fields is included here for demonstration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                httpOptions\n                            \n                            \n                                isDebugMode\n                            \n                            \n                                issues\n                            \n                            \n                                issuesJson\n                            \n                            \n                                md\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                onSuccess\n                            \n                            \n                                toggleDebugMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoad\n                        \n                    \n                \n            \n            \n                \nonLoad(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSuccess\n                        \n                    \n                \n            \n            \n                \nonSuccess(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDebugMode\n                        \n                    \n                \n            \n            \n                \ntoggleDebugMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.github.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDebugMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuesJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { Converter } from 'showdown'\nimport { environment } from '../../../environments/environment'\nimport { CommonModule } from '@angular/common'\n\n/**\n * Represents a GitHub issue as returned by the GitHub Issues API.\n * Only a subset of fields is included here for demonstration.\n */\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  imports: [CommonModule],\n  standalone: true,\n})\nexport class HomeComponent implements OnInit {\n  md: string = ''\n\n  baseUrl = 'https://api.github.com'\n  issues: any[] = []\n  issuesJson: string = ''\n  isDebugMode: boolean = false\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  toggleDebugMode() {\n    this.isDebugMode = !this.isDebugMode\n  }\n\n  constructor(private readonly http: HttpClient) {\n    console.log('Markdown constructor: ' + JSON.stringify(this.md, null, ' '))\n    this.http.get('/assets/README.md', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        data = data.replace(/src\\//g, '')\n        const converter = new Converter()\n        converter.setFlavor('github')\n        converter.setOption('tasklists', true)\n        converter.setOption('tables', 'true')\n        converter.setOption('strikethrough', 'true')\n        converter.setOption('ghCompatibleHeaderId', 'true')\n        converter.setOption('emoji', 'true')\n        converter.setOption('headerLevelStart', 2) // Start headers from level 2\n        converter.setOption('literalMidWordUnderscores', 'true')\n        converter.setOption('literalMidWordAsterisks', 'true')\n        converter.setOption('disableForced4SpacesIndentedSublists', 'true')\n        converter.setOption('ghMentions', 'true')\n        converter.setOption('ghCodeBlocks', 'true')\n        converter.setOption('ghMentionsStyle', 'github')\n        converter.setOption('ghMentionsLink', '{{username}}')\n        const html = converter.makeHtml(data)\n        this.md = html\n      },\n      (err) => {\n        console.error('Error fetching Markdown:', err)\n      },\n      () => {\n        console.log('Markdown fetch completed.')\n      },\n    )\n\n    this.http.get(environment.baseurl + '/github/issues', this.httpOptions).subscribe({\n      next: (data: any[]) => {\n        this.issues = data\n        this.issuesJson = JSON.stringify(data, null, 2)\n      },\n      error: (error) => {\n        console.error('Error fetching issues:', error)\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    console.log('Markdown ngOnInit: ' + JSON.stringify(this.md))\n    // No need to set renderer here; bind [data]=\"md\" in your template\n    // Removed invalid renderer event binding as 'on' does not exist on '_Renderer'\n  }\n\n  onLoad(data: unknown) {\n    console.log('onLoad: ' + this.md)\n  }\n\n  onError(data: unknown) {\n    console.log('onError: ' + this.md)\n  }\n\n  onSuccess(data: unknown) {\n    console.log('onSuccess: ' + this.md)\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\nIssues\n\n  \n    #{{ issue.number }} {{\n      issue.title }} By: {{ issue.user.login }} | Status: {{ issue.state }}\n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Issues      #{{ issue.number }} {{      issue.title }} By: {{ issue.user.login }} | Status: {{ issue.state }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Log.html":{"url":"interfaces/Log.html","title":"interface - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            objectId\n                                        \n                                \n                                \n                                        \n                                            operation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParameters {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: Record // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\n/**\n * Represents the input structure for creating a new log entry.\n * @property objectId - (Optional) The ID of the related object.\n * @property operation - The operation performed (e.g., create, update, delete, clone).\n * @property component - The component associated with the log (e.g., device, model, category, floor).\n * @property message - The log message as a JSON object.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component\n    console.log('[log.service.GetComponentLogs(' + component + ')]: ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/devices/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attributes/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The all logs with ObjectID = id.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogsById(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  private getLogsUrl(): string {\n    return `${environment.baseurl}/logs`\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log data to create.\n   * @returns An Observable that emits the created Log object.\n   */\n  CreateLog(data: LogIn): Observable {\n    console.log('LogService.CreateLog: ' + JSON.stringify(data, null, 2))\n    return this.http.post(this.getLogsUrl(), data, this.httpOptions).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: any): Observable {\n    const sData = JSON.stringify(data, null, 2)\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', null)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request. If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body. Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    // If error.status is 0, it indicates a client-side or network error occurred.\n    if (error.status === 0) {\n      console.error('An unknown error occurred:', error)\n      return throwError(() => new Error('An unknown error occurred. Please check the logs for more details.'))\n    } else {\n      // If error.status is not 0, it indicates a server-side error with a specific status code.\n      const errorMsg = `HTTP error occurred (status: ${error.status}): ${error.message || 'No error message provided'}${error.error ? ' | Details: ' + JSON.stringify(error.error) : ''}`\n      return throwError(() => new Error(errorMsg))\n    }\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operationName - Name of the operation that failed.\n   * @param result - Optional fallback value to return as the observable result in case of an error.\n   *                 This value is used to allow the application to continue functioning gracefully\n   *                 even when an error occurs.\n   */\n  private handleErrorTemplate(operationName = 'operation', result?: T) {\n    return (error: HttpErrorResponse): Observable => {\n      if (environment.production) {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`)\n      } else {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`, error)\n      }\n      // Return the provided fallback result, or null if not specified\n      const fallbackResult = result !== undefined ? result : null\n      return of(fallbackResult as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogIn.html":{"url":"interfaces/LogIn.html","title":"interface - LogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the input structure for creating a new log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            objectId\n                                        \n                                \n                                \n                                        \n                                            operation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParameters {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: Record // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\n/**\n * Represents the input structure for creating a new log entry.\n * @property objectId - (Optional) The ID of the related object.\n * @property operation - The operation performed (e.g., create, update, delete, clone).\n * @property component - The component associated with the log (e.g., device, model, category, floor).\n * @property message - The log message as a JSON object.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component\n    console.log('[log.service.GetComponentLogs(' + component + ')]: ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/devices/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attributes/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The all logs with ObjectID = id.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogsById(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  private getLogsUrl(): string {\n    return `${environment.baseurl}/logs`\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log data to create.\n   * @returns An Observable that emits the created Log object.\n   */\n  CreateLog(data: LogIn): Observable {\n    console.log('LogService.CreateLog: ' + JSON.stringify(data, null, 2))\n    return this.http.post(this.getLogsUrl(), data, this.httpOptions).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: any): Observable {\n    const sData = JSON.stringify(data, null, 2)\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', null)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request. If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body. Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    // If error.status is 0, it indicates a client-side or network error occurred.\n    if (error.status === 0) {\n      console.error('An unknown error occurred:', error)\n      return throwError(() => new Error('An unknown error occurred. Please check the logs for more details.'))\n    } else {\n      // If error.status is not 0, it indicates a server-side error with a specific status code.\n      const errorMsg = `HTTP error occurred (status: ${error.status}): ${error.message || 'No error message provided'}${error.error ? ' | Details: ' + JSON.stringify(error.error) : ''}`\n      return throwError(() => new Error(errorMsg))\n    }\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operationName - Name of the operation that failed.\n   * @param result - Optional fallback value to return as the observable result in case of an error.\n   *                 This value is used to allow the application to continue functioning gracefully\n   *                 even when an error occurs.\n   */\n  private handleErrorTemplate(operationName = 'operation', result?: T) {\n    return (error: HttpErrorResponse): Observable => {\n      if (environment.production) {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`)\n      } else {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`, error)\n      }\n      // Return the provided fallback result, or null if not specified\n      const fallbackResult = result !== undefined ? result : null\n      return of(fallbackResult as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogParameters.html":{"url":"interfaces/LogParameters.html","title":"interface - LogParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the parameters for retrieving logs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParameters {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: Record // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\n/**\n * Represents the input structure for creating a new log entry.\n * @property objectId - (Optional) The ID of the related object.\n * @property operation - The operation performed (e.g., create, update, delete, clone).\n * @property component - The component associated with the log (e.g., device, model, category, floor).\n * @property message - The log message as a JSON object.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component\n    console.log('[log.service.GetComponentLogs(' + component + ')]: ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/devices/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attributes/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The all logs with ObjectID = id.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogsById(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  private getLogsUrl(): string {\n    return `${environment.baseurl}/logs`\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log data to create.\n   * @returns An Observable that emits the created Log object.\n   */\n  CreateLog(data: LogIn): Observable {\n    console.log('LogService.CreateLog: ' + JSON.stringify(data, null, 2))\n    return this.http.post(this.getLogsUrl(), data, this.httpOptions).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: any): Observable {\n    const sData = JSON.stringify(data, null, 2)\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', null)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request. If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body. Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    // If error.status is 0, it indicates a client-side or network error occurred.\n    if (error.status === 0) {\n      console.error('An unknown error occurred:', error)\n      return throwError(() => new Error('An unknown error occurred. Please check the logs for more details.'))\n    } else {\n      // If error.status is not 0, it indicates a server-side error with a specific status code.\n      const errorMsg = `HTTP error occurred (status: ${error.status}): ${error.message || 'No error message provided'}${error.error ? ' | Details: ' + JSON.stringify(error.error) : ''}`\n      return throwError(() => new Error(errorMsg))\n    }\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operationName - Name of the operation that failed.\n   * @param result - Optional fallback value to return as the observable result in case of an error.\n   *                 This value is used to allow the application to continue functioning gracefully\n   *                 even when an error occurs.\n   */\n  private handleErrorTemplate(operationName = 'operation', result?: T) {\n    return (error: HttpErrorResponse): Observable => {\n      if (environment.production) {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`)\n      } else {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`, error)\n      }\n      // Return the provided fallback result, or null if not specified\n      const fallbackResult = result !== undefined ? result : null\n      return of(fallbackResult as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                attributeComponentId\n                            \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateLog\n                            \n                            \n                                DeleteLog\n                            \n                            \n                                GetAttributeLogs\n                            \n                            \n                                GetComponentLogs\n                            \n                            \n                                GetDeviceLogs\n                            \n                            \n                                GetLogs\n                            \n                            \n                                GetLogsById\n                            \n                            \n                                    Private\n                                getLogsUrl\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/log.service.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateLog\n                        \n                    \n                \n            \n            \n                \nCreateLog(data: LogIn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Creates a new log entry.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LogIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log data to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created Log object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteLog\n                        \n                    \n                \n            \n            \n                \nDeleteLog(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Deletes a log by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits a Log object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAttributeLogs\n                        \n                    \n                \n            \n            \n                \nGetAttributeLogs(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetComponentLogs\n                        \n                    \n                \n            \n            \n                \nGetComponentLogs(component: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe component name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetDeviceLogs\n                        \n                    \n                \n            \n            \n                \nGetDeviceLogs(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Retrieves logs for a specific device.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe device ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetLogs\n                        \n                    \n                \n            \n            \n                \nGetLogs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Retrieves all logs.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Log objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetLogsById\n                        \n                    \n                \n            \n            \n                \nGetLogsById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Retrieves a log by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe all logs with ObjectID = id.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits a Log object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLogsUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogsUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Handles the error response from an HTTP request. If the error status is 0, it logs the error message.\nOtherwise, it logs the error status and body. Returns an Observable that throws an Error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HttpErrorResponse object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that throws an Error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operationName: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:183\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\nExample :            This value is used to allow the application to continue functioning gracefully\n            even when an error occurs.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nName of the operation that failed.\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional fallback value to return as the observable result in case of an error.\nThis value is used to allow the application to continue functioning gracefully\neven when an error occurs.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: HttpErrorResponse) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateLog\n                        \n                    \n                \n            \n            \n                \nUpdateLog(id: string | null, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/log.service.ts:150\n                        \n                    \n\n\n            \n                \n                        Updates a log entry.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe log ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated log data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a Log object.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        attributeComponentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/log.service.ts:61\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { catchError, Observable, of, retry, throwError } from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { environment } from '../../environments/environment'\n\n/**\n * Represents the parameters for retrieving logs.\n */\nexport interface LogParameters {\n  component: string\n  id: string // id set then show id object logs\n}\n\n/**\n * Represents a log entry.\n */\nexport interface Log {\n  _id: string\n  date: string\n  objectId?: string\n  operation: string // [create, update, delete, clone]\n  component: string // [device, model, category, floor]\n  message: Record // object json\n}\n\n/**\n * Represents the input for creating a log entry.\n */\n/**\n * Represents the input structure for creating a new log entry.\n * @property objectId - (Optional) The ID of the related object.\n * @property operation - The operation performed (e.g., create, update, delete, clone).\n * @property component - The component associated with the log (e.g., device, model, category, floor).\n * @property message - The log message as a JSON object.\n */\nexport interface LogIn {\n  objectId?: string\n  operation: string\n  component: string\n  message: object\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  baseurl = environment.baseurl\n  attributeComponentId?: string\n\n  constructor(private http: HttpClient) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves all logs.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetLogs(): Observable {\n    return this.http.get(environment.baseurl + '/logs').pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific component.\n   * @param component - The component name.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetComponentLogs(component: string): Observable {\n    const url = environment.baseurl + '/logs/component/' + component\n    console.log('[log.service.GetComponentLogs(' + component + ')]: ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific device.\n   * @param id - The device ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetDeviceLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/devices/' + id\n    console.log('LogComponent.GetDeviceLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves logs for a specific attribute.\n   * @param id - The attribute ID.\n   * @returns An Observable that emits an array of Log objects.\n   */\n  GetAttributeLogs(id: string): Observable {\n    const url = environment.baseurl + '/logs/attributes/' + id\n    console.log('LogComponent.GetAttributeLogs(' + id + ') ' + url)\n    return this.http.get(url).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Retrieves a log by ID.\n   * @param id - The all logs with ObjectID = id.\n   * @returns An Observable that emits a Log object.\n   */\n  GetLogsById(id: string): Observable {\n    return this.http\n      .get(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Deletes a log by ID.\n   * @param id - The log ID.\n   * @returns An Observable that emits a Log object.\n   */\n  DeleteLog(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/logs/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleError))\n  }\n\n  private getLogsUrl(): string {\n    return `${environment.baseurl}/logs`\n  }\n\n  /**\n   * Creates a new log entry.\n   * @param data - The log data to create.\n   * @returns An Observable that emits the created Log object.\n   */\n  CreateLog(data: LogIn): Observable {\n    console.log('LogService.CreateLog: ' + JSON.stringify(data, null, 2))\n    return this.http.post(this.getLogsUrl(), data, this.httpOptions).pipe(retry(1), catchError(this.handleError))\n  }\n\n  /**\n   * Updates a log entry.\n   * @param id - The log ID.\n   * @param data - The updated log data.\n   * @returns An Observable that emits a Log object.\n   */\n  UpdateLog(id: string | null, data: any): Observable {\n    const sData = JSON.stringify(data, null, 2)\n    return this.http\n      .put(environment.baseurl + '/logs/' + id, sData, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('UpdateLog', null)))\n  }\n\n  /**\n   * Handles the error response from an HTTP request. If the error status is 0, it logs the error message.\n   * Otherwise, it logs the error status and body. Returns an Observable that throws an Error.\n   * @param error - The HttpErrorResponse object.\n   * @returns An Observable that throws an Error.\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    // If error.status is 0, it indicates a client-side or network error occurred.\n    if (error.status === 0) {\n      console.error('An unknown error occurred:', error)\n      return throwError(() => new Error('An unknown error occurred. Please check the logs for more details.'))\n    } else {\n      // If error.status is not 0, it indicates a server-side error with a specific status code.\n      const errorMsg = `HTTP error occurred (status: ${error.status}): ${error.message || 'No error message provided'}${error.error ? ' | Details: ' + JSON.stringify(error.error) : ''}`\n      return throwError(() => new Error(errorMsg))\n    }\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operationName - Name of the operation that failed.\n   * @param result - Optional fallback value to return as the observable result in case of an error.\n   *                 This value is used to allow the application to continue functioning gracefully\n   *                 even when an error occurs.\n   */\n  private handleErrorTemplate(operationName = 'operation', result?: T) {\n    return (error: HttpErrorResponse): Observable => {\n      if (environment.production) {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`)\n      } else {\n        console.error(`LogService.handleErrorTemplate: ${operationName} failed. Error message: ${error.message}`, error)\n      }\n      // Return the provided fallback result, or null if not specified\n      const fallbackResult = result !== undefined ? result : null\n      return of(fallbackResult as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Model.html":{"url":"classes/Model.html","title":"class - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                dimension\n                            \n                            \n                                name\n                            \n                            \n                                texture\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dimension\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dimension\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        texture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Texture\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface Dimension {\n  width: number\n  height: number\n  depth: number\n}\n\ninterface Texture {\n  front: string\n  back: string\n  side: string\n  top: string\n  bottom: string\n}\n\nexport class Model {\n  _id: string\n  name: string\n  dimension: Dimension\n  texture: Texture\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.dimension = {\n      width: 0,\n      height: 0,\n      depth: 0,\n    }\n    this.texture = {\n      front: '',\n      back: '',\n      side: '',\n      top: '',\n      bottom: '',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelAddComponent.html":{"url":"components/ModelAddComponent.html","title":"component - ModelAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/models/add-model/add-model.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-model\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./add-model.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-model.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addModelForm\n                            \n                            \n                                deviceCategoryDict\n                            \n                            \n                                deviceTypeDict\n                            \n                            \n                                isProduction\n                            \n                            \n                                isSubmitDisabled\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                model\n                            \n                            \n                                    Public\n                                modelsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeValue\n                            \n                            \n                                generateModel\n                            \n                            \n                                getControl\n                            \n                            \n                                getFormValues\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    textureGroup\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone, router: Router, modelsService: ModelsService, logService: LogService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/models/add-model/add-model.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeValue\n                        \n                    \n                \n            \n            \n                \nchangeValue(controlName: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateModel\n                        \n                    \n                \n            \n            \n                \ngenerateModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControl\n                        \n                    \n                \n            \n            \n                \ngetControl(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormValues\n                        \n                    \n                \n            \n            \n                \ngetFormValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/add-model/add-model.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addModelForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceCategoryDict\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeviceCategoryDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deviceTypeDict\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DeviceTypeDict()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProduction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : environment.production\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/add-model/add-model.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        textureGroup\n                    \n                \n\n                \n                    \n                        gettextureGroup()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/models/add-model/add-model.component.ts:67\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { environment } from 'src/environments/environment'\n\nimport { CommonModule } from '@angular/common'\nimport { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { faker } from '@faker-js/faker'\n\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { DeviceCategoryDict } from '../../../shared/deviceCategories'\nimport { DeviceTypeDict } from '../../../shared/DeviceTypes'\nimport { Model } from '../../../shared/model'\n\n@Component({\n  selector: 'app-add-model',\n  templateUrl: './add-model.component.html',\n  styleUrls: ['./add-model.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n})\nexport class ModelAddComponent implements OnInit {\n  addModelForm: FormGroup\n  model: Model\n  isSubmitted = false\n  deviceTypeDict = new DeviceTypeDict()\n  deviceCategoryDict = new DeviceCategoryDict()\n  isSubmitDisabled: boolean = false\n  isProduction: boolean = environment.production\n\n  constructor(\n    private readonly ngZone: NgZone,\n    private readonly router: Router,\n    public modelsService: ModelsService,\n    private readonly logService: LogService,\n    private readonly formBuilder: FormBuilder,\n  ) {}\n\n  ngOnInit(): void {\n    this.model = new Model()\n    this.addModelForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      dimension: this.formBuilder.group({\n        width: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n        height: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n        depth: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n      }),\n      texture: this.formBuilder.group({\n        front: ['', []],\n        back: ['', []],\n        side: ['', []],\n        top: ['', []],\n        bottom: ['', []],\n      }),\n    })\n  }\n\n  get textureGroup(): FormGroup {\n    return this.addModelForm.get('texture') as FormGroup\n  }\n\n  isFieldInvalid(fieldPath: string): boolean {\n    const control = this.addModelForm.get(fieldPath)\n    return control ? control.invalid && (control.touched || control.dirty) : false\n  }\n\n  changeValue(controlName: string, value: string) {\n    const control = this.getControl(controlName)\n    if (control) {\n      control.setValue(value, { onlySelf: true })\n    }\n  }\n\n  getControl(controlName: string) {\n    return this.addModelForm.get(controlName)\n  }\n\n  generateModel() {\n    if (this.addModelForm.controls.name !== null && this.addModelForm.controls.name !== undefined) {\n      this.addModelForm.controls.name.setValue(faker.company.name() + ' ' + faker.company.buzzPhrase())\n    }\n    const dimensionGroup = this.addModelForm.get('dimension') as FormGroup\n    if (dimensionGroup?.get('depth')) {\n      dimensionGroup.get('depth')?.setValue(faker.number.int(10).toString())\n    }\n    if (dimensionGroup?.get('height')) {\n      dimensionGroup.get('height')?.setValue(faker.number.int(10).toString())\n    }\n    if (dimensionGroup?.get('width')) {\n      dimensionGroup.controls['width'].setValue(faker.number.int(10).toString())\n    }\n    if (this.addModelForm.controls.type) {\n      this.addModelForm.controls.type.setValue(this.deviceTypeDict.getRandomName())\n    }\n    if (this.addModelForm.controls.category) {\n      this.addModelForm.controls.category.setValue(this.deviceCategoryDict.getRandomName())\n    }\n  }\n\n  getFormValues(): string {\n    return JSON.stringify(this.addModelForm.value, null, 2) // Pretty-print the form values\n  }\n\n  submitForm() {\n    console.log('Submit Model: ' + JSON.stringify(this.addModelForm.value))\n    const createModelReturn = this.modelsService.CreateModel(this.addModelForm.value).subscribe((res) => {\n      console.log('Model created: ' + JSON.stringify(res, null, 2))\n      this.logService\n        .CreateLog({\n          message: this.addModelForm.value,\n          objectId: (res as any).insertedId ? (res as any).insertedId : (res as any).id,\n          operation: 'Create',\n          component: 'Model',\n        })\n        .subscribe(() => {\n          this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n        })\n    })\n  }\n}\n\n    \n\n    \n        \n  \n     Add Model\n    \n      \n        \n          \n            Name\n            \n            @if (this.addModelForm.controls.name.errors) {\n              \n                @if (this.addModelForm.controls.name.errors.required) {\n                  Name is required\n                }\n                @if (this.addModelForm.controls.name.errors.minlength) {\n                  Name must be at least 4 characters\n                  \n                }\n                @if (this.addModelForm.get('texture.bottom')?.errors?.minlength) {\n                  \n                    Bottom must be at least 2 characters long\n                  \n                }\n              \n            }\n          \n        \n      \n      \n        \n          \n            Width\n            \n            @if (this.addModelForm.get('dimension.width')?.errors) {\n              \n                @if (this.addModelForm.get('dimension.width')?.errors?.required) {\n                  Width is required\n                }\n                @if (this.addModelForm.get('dimension.width')?.errors?.minlength) {\n                  \n                    Width must be at least 1 number\n                  \n                }\n                @if (this.addModelForm.get('dimension.width')?.errors?.pattern) {\n                  \n                    Width must be a number\n                  \n                }\n                @if (addModelForm.get('dimension.width')?.errors?.pattern) {\n                  Number Only\n                }\n              \n            }\n          \n        \n        \n          \n            Height\n            \n            @if (this.addModelForm.get('dimension.height')?.errors) {\n              \n                @if (this.addModelForm.get('dimension.height')?.errors?.required) {\n                  Height is required\n                }\n                @if (this.addModelForm.get('dimension.height')?.errors?.minlength) {\n                  \n                    Height must be at least 1 number\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            Depth\n            \n            @if (this.addModelForm.get('dimension.depth')?.errors) {\n              \n                @if (this.addModelForm.get('dimension.depth')?.errors?.required) {\n                  Depth is required\n                }\n                @if (this.addModelForm.get('dimension.depth')?.errors?.minlength) {\n                  \n                    Depth must be at least 1 number\n                  \n                }\n              \n            }\n          \n        \n      \n      \n        \n          \n            Front\n            \n            @if (this.addModelForm.get('texture')?.get('front')?.errors) {\n              \n                @if (this.addModelForm.get('texture')?.get('front')?.errors?.required) {\n                  Front is required\n                  \n                }\n                @if (this.addModelForm.get('texture')?.get('front')?.errors?.minlength) {\n                  \n                    Front must be at least 1 number.\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            Back\n            \n            @if (this.addModelForm.get('texture')?.get('back')?.errors) {\n              \n                @if (this.addModelForm.get('texture')?.get('back')?.errors?.required) {\n                  Back is required\n                }\n                @if (this.addModelForm.get('texture')?.get('back')?.errors?.minlength) {\n                  \n                    Back must be at least 1 character\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            Side\n            \n            @if (this.addModelForm.get('texture.side')?.errors) {\n              \n                @if (this.addModelForm.get('texture.side')?.errors?.required) {\n                  Side is required\n                }\n                @if (this.addModelForm.get('texture.side')?.errors?.minlength) {\n                  \n                    Side must be at least 1 character\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            Top\n            \n            @if (this.addModelForm.get('texture.top')?.errors) {\n              \n                @if (this.addModelForm.get('texture')?.get('top')?.errors?.required) {\n                  Top is required\n                }\n                @if (this.addModelForm.get('texture')?.get('top')?.errors?.minlength) {\n                  \n                    Top must be at least 1 character\n                  \n                }\n              \n            }\n          \n        \n        \n          \n            Bottom\n            \n            @if (this.addModelForm.get('texture.bottom')?.errors) {\n              \n                @if (this.addModelForm.get('texture.bottom')?.errors?.required) {\n                  Bottom is required\n                }\n                @if (this.addModelForm.get('texture.bottom')?.errors?.minlength) {\n                  \n                    Bottom must be at least 2 characters.\n                  \n                }\n                @if (addModelForm.get('texture.bottom')?.errors?.minlength) {\n                  Bottom must be at least 2\n                    characters...\n                  \n                }\n              \n            }\n          \n        \n      \n      \n        \n          \n             Add Model\n          \n        \n        \n          \n            \n               Generate Random Model Data\n            \n          \n          @if (!isProduction) {\n            \n            {{ getFormValues() }}\n            Current Form Values:\n            @if (!isProduction) {\n              {{ addModelForm.value | json }}\n            }\n          }\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-model.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Add Model                                        Name                        @if (this.addModelForm.controls.name.errors) {                              @if (this.addModelForm.controls.name.errors.required) {                  Name is required                }                @if (this.addModelForm.controls.name.errors.minlength) {                  Name must be at least 4 characters                                  }                @if (this.addModelForm.get(\\'texture.bottom\\')?.errors?.minlength) {                                      Bottom must be at least 2 characters long                                  }                          }                                                            Width                        @if (this.addModelForm.get(\\'dimension.width\\')?.errors) {                              @if (this.addModelForm.get(\\'dimension.width\\')?.errors?.required) {                  Width is required                }                @if (this.addModelForm.get(\\'dimension.width\\')?.errors?.minlength) {                                      Width must be at least 1 number                                  }                @if (this.addModelForm.get(\\'dimension.width\\')?.errors?.pattern) {                                      Width must be a number                                  }                @if (addModelForm.get(\\'dimension.width\\')?.errors?.pattern) {                  Number Only                }                          }                                                Height                        @if (this.addModelForm.get(\\'dimension.height\\')?.errors) {                              @if (this.addModelForm.get(\\'dimension.height\\')?.errors?.required) {                  Height is required                }                @if (this.addModelForm.get(\\'dimension.height\\')?.errors?.minlength) {                                      Height must be at least 1 number                                  }                          }                                                Depth                        @if (this.addModelForm.get(\\'dimension.depth\\')?.errors) {                              @if (this.addModelForm.get(\\'dimension.depth\\')?.errors?.required) {                  Depth is required                }                @if (this.addModelForm.get(\\'dimension.depth\\')?.errors?.minlength) {                                      Depth must be at least 1 number                                  }                          }                                                            Front                        @if (this.addModelForm.get(\\'texture\\')?.get(\\'front\\')?.errors) {                              @if (this.addModelForm.get(\\'texture\\')?.get(\\'front\\')?.errors?.required) {                  Front is required                                  }                @if (this.addModelForm.get(\\'texture\\')?.get(\\'front\\')?.errors?.minlength) {                                      Front must be at least 1 number.                                  }                          }                                                Back                        @if (this.addModelForm.get(\\'texture\\')?.get(\\'back\\')?.errors) {                              @if (this.addModelForm.get(\\'texture\\')?.get(\\'back\\')?.errors?.required) {                  Back is required                }                @if (this.addModelForm.get(\\'texture\\')?.get(\\'back\\')?.errors?.minlength) {                                      Back must be at least 1 character                                  }                          }                                                Side                        @if (this.addModelForm.get(\\'texture.side\\')?.errors) {                              @if (this.addModelForm.get(\\'texture.side\\')?.errors?.required) {                  Side is required                }                @if (this.addModelForm.get(\\'texture.side\\')?.errors?.minlength) {                                      Side must be at least 1 character                                  }                          }                                                Top                        @if (this.addModelForm.get(\\'texture.top\\')?.errors) {                              @if (this.addModelForm.get(\\'texture\\')?.get(\\'top\\')?.errors?.required) {                  Top is required                }                @if (this.addModelForm.get(\\'texture\\')?.get(\\'top\\')?.errors?.minlength) {                                      Top must be at least 1 character                                  }                          }                                                Bottom                        @if (this.addModelForm.get(\\'texture.bottom\\')?.errors) {                              @if (this.addModelForm.get(\\'texture.bottom\\')?.errors?.required) {                  Bottom is required                }                @if (this.addModelForm.get(\\'texture.bottom\\')?.errors?.minlength) {                                      Bottom must be at least 2 characters.                                  }                @if (addModelForm.get(\\'texture.bottom\\')?.errors?.minlength) {                  Bottom must be at least 2                    characters...                                  }                          }                                                             Add Model                                                               Generate Random Model Data                                @if (!isProduction) {                        {{ getFormValues() }}            Current Form Values:            @if (!isProduction) {              {{ addModelForm.value | json }}            }          }                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelEditComponent.html":{"url":"components/ModelEditComponent.html","title":"component - ModelEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/models/edit-model/edit-model.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CommonModule\n                                LogComponent\n                \n            \n\n\n            \n                selector\n                app-edit-model\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                LogComponent\n                \n            \n\n            \n                styleUrls\n                ./edit-model.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-model.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                attributeComponent\n                            \n                            \n                                attributeComponentObject\n                            \n                            \n                                component\n                            \n                            \n                                componentName\n                            \n                            \n                                editModelForm\n                            \n                            \n                                inputId\n                            \n                            \n                                model\n                            \n                            \n                                    Public\n                                modelsService\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteForm\n                            \n                            \n                                    Private\n                                getModel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, activatedRoute: ActivatedRoute, modelsService: ModelsService, ngZone: NgZone, router: Router, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteForm\n                        \n                    \n                \n            \n            \n                \ndeleteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/edit-model/edit-model.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributeComponentObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'models'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Models'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editModelForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/edit-model/edit-model.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/models/edit-model/edit-model.component.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/models/edit-model/edit-model.component.ts:103\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Subscription } from 'rxjs'\n\nimport { CommonModule } from '@angular/common'\nimport { Component, Input, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\n\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Model } from '../../../shared/model'\nimport { LogComponent } from '../../log/log.component' // Import the standalone app-log component\n\n@Component({\n  selector: 'app-edit-model',\n  templateUrl: './edit-model.component.html',\n  styleUrls: ['./edit-model.component.scss'],\n  providers: [CommonModule, LogComponent],\n  imports: [CommonModule, ReactiveFormsModule, LogComponent],\n})\nexport class ModelEditComponent implements OnInit {\n  attributeComponent: string = ''\n  attributeComponentObject: string = ''\n  inputId: string\n  model: Model\n  component = 'models'\n  componentName = 'Models'\n  submitted = false\n  editModelForm: FormGroup\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public activatedRoute: ActivatedRoute,\n    public modelsService: ModelsService,\n    private ngZone: NgZone,\n    private router: Router,\n    private logService: LogService,\n  ) {}\n\n  ngOnInit() {\n    this.editModelForm = this.formBuilder.group({\n      id: ['', [Validators.required, Validators.minLength(10)]],\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      dimension: this.formBuilder.group({\n        width: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n        height: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n        depth: [\n          '',\n          [Validators.required, Validators.minLength(1), Validators.maxLength(6), Validators.pattern('^[0-9]*$')],\n        ],\n      }),\n      texture: this.formBuilder.group({\n        front: ['', null],\n        back: ['', null],\n        side: ['', null],\n        top: ['', null],\n        bottom: ['', null],\n      }),\n    })\n\n    this.inputId = this.activatedRoute.snapshot.paramMap.get('id') as string\n    this.component = this.inputId.toString()\n    this.getModel()\n  }\n\n  private getModel(): Subscription {\n    return this.modelsService.GetModel(this.inputId).subscribe((data: Model) => {\n      console.log('GetModel ' + JSON.stringify(data, null, ' '))\n      this.model = data\n      this.editModelForm.setValue({\n        id: data._id,\n        name: data.name,\n        dimension: {\n          width: data.dimension.width.toString(),\n          height: data.dimension.height.toString(),\n          depth: data.dimension.depth.toString(),\n        },\n        texture: {\n          front: data.texture.front,\n          back: data.texture.back,\n          side: data.texture.side,\n          top: data.texture.top,\n          bottom: data.texture.bottom,\n        },\n      })\n    })\n  }\n\n  onChange(event: Event) {\n    const newValue = (event.target as HTMLInputElement).value\n    console.log('Input value changed:', newValue)\n  }\n\n  get id() {\n    return this.editModelForm.get('id') as FormControl\n  }\n\n  get name() {\n    return this.editModelForm.get('name') as FormControl\n  }\n\n  deleteForm() {\n    this.logService.CreateLog({\n      objectId: this.editModelForm.value.id,\n      operation: 'Delete',\n      component: 'models',\n      message: { id: this.editModelForm.value },\n    })\n    this.modelsService.DeleteModel(this.inputId).subscribe(() => {\n      this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n    })\n  }\n\n  submitForm() {\n    this.submitted = true\n    if (this.editModelForm.valid && this.editModelForm.touched) {\n      this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n      const log = {\n        message: { model: this.editModelForm.value },\n        operation: 'Update',\n        component: 'models',\n        objectId: this.editModelForm.value.id,\n      }\n      this.logService.CreateLog(log).subscribe(() => {\n        console.log('logService.CreateLog(log): ' + JSON.stringify(log))\n      })\n      this.modelsService\n        .UpdateModel(this.inputId.toString(), this.editModelForm.value as unknown as Model)\n        .subscribe(() => {\n          this.router.navigate(['edit-model/', this.model._id])\n        })\n    }\n  }\n}\n\n    \n\n    \n        \n   Edit Model\n  \n    \n      \n        \n          Id\n          \n          @if (editModelForm.get('id')?.errors) {\n          \n            @if (editModelForm.controls.id.errors?.required || editModelForm.controls.id.errors?.minlength) {\n            \n              Id is required and must be at least 4 characters\n            \n            }\n          \n          }\n        \n      \n      \n        \n          Name\n          \n          @if (editModelForm.get('name')?.errors) {\n          \n            @if (editModelForm.controls.name.errors?.required || editModelForm.controls.name.errors?.minlength) {\n            \n              Name is required and must be at least 4 characters\n            \n            }\n          \n          }\n        \n      \n    \n    \n      \n        \n          Width\n          \n          @if (editModelForm.get('dimension.width')?.errors) {\n          \n          }\n          Width is required and must be at least 1 number\n          @if (editModelForm.get('dimension.width')?.errors?.maxlength) {\n          Width must be less than 6 numbers\n          \n          }\n        \n      \n      \n        \n          Height\n          \n          @if (editModelForm.get('dimension.height')?.errors) {\n          \n            @if (\n            editModelForm.get('dimension.height')?.errors?.required ||\n            editModelForm.get('dimension.height')?.errors?.minlength\n            ) {\n            \n              Height is required and must be at least 1 number\n            \n            }\n            @if (editModelForm.get('dimension.height')?.errors?.maxlength) {\n            \n              Height must be less than 6 numbers\n            \n            }\n          \n          }\n        \n      \n      \n        \n          Depth\n          \n\n          @if (editModelForm.get('dimension.depth')?.errors) {\n          \n            @if (\n            editModelForm.get('dimension.depth')?.errors?.required ||\n            editModelForm.get('dimension.depth')?.errors?.minlength\n            ) {\n            \n              Depth is required and must be at least 1 number\n            \n            }\n            @if (editModelForm.get('dimension.depth')?.errors?.maxlength) {\n            Depth must be less than 4 numbers\n            \n            }\n          \n          }\n        \n      \n    \n    \n      \n        \n          Front\n          \n          @if (editModelForm.get('texture.front')?.errors) {\n          \n          }\n          @if (\n          editModelForm.get('texture.front')?.errors?.required ||\n          editModelForm.get('texture.front')?.errors?.minlength\n          ) {\n          \n            Front is required and must be at least 1 number\n          \n          }\n        \n      \n      \n        \n          Back\n          \n          @if (editModelForm.get('texture.back')?.errors) {\n          \n            @if (editModelForm.get('texture.back')?.errors?.minlength) {\n            \n              Back side is required and must be at least 1 number\n            \n            }\n          \n          }\n        \n      \n      \n        \n          Side\n          \n          @if (editModelForm.get('texture.side')?.errors) {\n          \n            @if (\n            editModelForm.get('texture.side')?.errors?.required ||\n            editModelForm.get('texture.side')?.errors?.minlength\n            ) {\n            \n              Side is required and must be at least 1 number\n            \n            }\n          \n          }\n        \n      \n      \n        \n          Top\n          \n          @if (editModelForm.get('texture.top')?.errors) {\n          \n            @if (\n            editModelForm.get('texture.top')?.errors?.required ||\n            editModelForm.get('texture.top')?.errors?.minlength\n            ) {\n            \n              Top is required and must be at least 1 number\n            \n            }\n          \n          }\n        \n      \n      \n        \n          Bottom\n          \n          @if (editModelForm.get('texture.bottom')?.errors) {\n          \n            @if (\n            editModelForm.get('texture.bottom')?.errors?.required ||\n            editModelForm.get('texture.bottom')?.errors?.minlength\n            ) {\n            \n              Bottom is required and must be at least 2 characters\n            \n            }\n          \n          }\n        \n      \n    \n    \n      \n        \n          \n             Update\n          \n          \n             Delete\n          \n        \n      \n      @if (editModelForm !== null && editModelForm.valid && editModelForm.touched) {\n      \n        Form is valid\n      \n      }\n      Form Status: {{ editModelForm.status }}.\n    \n  \n\n\n\n    \n\n    \n                \n                    ./edit-model.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Edit Model                              Id                    @if (editModelForm.get(\\'id\\')?.errors) {                      @if (editModelForm.controls.id.errors?.required || editModelForm.controls.id.errors?.minlength) {                          Id is required and must be at least 4 characters                        }                    }                                      Name                    @if (editModelForm.get(\\'name\\')?.errors) {                      @if (editModelForm.controls.name.errors?.required || editModelForm.controls.name.errors?.minlength) {                          Name is required and must be at least 4 characters                        }                    }                                              Width                    @if (editModelForm.get(\\'dimension.width\\')?.errors) {                    }          Width is required and must be at least 1 number          @if (editModelForm.get(\\'dimension.width\\')?.errors?.maxlength) {          Width must be less than 6 numbers                    }                                      Height                    @if (editModelForm.get(\\'dimension.height\\')?.errors) {                      @if (            editModelForm.get(\\'dimension.height\\')?.errors?.required ||            editModelForm.get(\\'dimension.height\\')?.errors?.minlength            ) {                          Height is required and must be at least 1 number                        }            @if (editModelForm.get(\\'dimension.height\\')?.errors?.maxlength) {                          Height must be less than 6 numbers                        }                    }                                      Depth                    @if (editModelForm.get(\\'dimension.depth\\')?.errors) {                      @if (            editModelForm.get(\\'dimension.depth\\')?.errors?.required ||            editModelForm.get(\\'dimension.depth\\')?.errors?.minlength            ) {                          Depth is required and must be at least 1 number                        }            @if (editModelForm.get(\\'dimension.depth\\')?.errors?.maxlength) {            Depth must be less than 4 numbers                        }                    }                                              Front                    @if (editModelForm.get(\\'texture.front\\')?.errors) {                    }          @if (          editModelForm.get(\\'texture.front\\')?.errors?.required ||          editModelForm.get(\\'texture.front\\')?.errors?.minlength          ) {                      Front is required and must be at least 1 number                    }                                      Back                    @if (editModelForm.get(\\'texture.back\\')?.errors) {                      @if (editModelForm.get(\\'texture.back\\')?.errors?.minlength) {                          Back side is required and must be at least 1 number                        }                    }                                      Side                    @if (editModelForm.get(\\'texture.side\\')?.errors) {                      @if (            editModelForm.get(\\'texture.side\\')?.errors?.required ||            editModelForm.get(\\'texture.side\\')?.errors?.minlength            ) {                          Side is required and must be at least 1 number                        }                    }                                      Top                    @if (editModelForm.get(\\'texture.top\\')?.errors) {                      @if (            editModelForm.get(\\'texture.top\\')?.errors?.required ||            editModelForm.get(\\'texture.top\\')?.errors?.minlength            ) {                          Top is required and must be at least 1 number                        }                    }                                      Bottom                    @if (editModelForm.get(\\'texture.bottom\\')?.errors) {                      @if (            editModelForm.get(\\'texture.bottom\\')?.errors?.required ||            editModelForm.get(\\'texture.bottom\\')?.errors?.minlength            ) {                          Bottom is required and must be at least 2 characters                        }                    }                                                           Update                                 Delete                              @if (editModelForm !== null && editModelForm.valid && editModelForm.touched) {              Form is valid            }      Form Status: {{ editModelForm.status }}.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelsListComponent.html":{"url":"components/ModelsListComponent.html","title":"component - ModelsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/models/model-list/model-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-models-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgbPagination\n                                LogComponent\n                \n            \n\n            \n                styleUrls\n                ./model-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./model-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                componentName\n                            \n                            \n                                modelListPage\n                            \n                            \n                                ModelsList\n                            \n                            \n                                    Public\n                                modelsService\n                            \n                            \n                                pageSize\n                            \n                            \n                                selectedModel\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddModel\n                            \n                            \n                                CloneModel\n                            \n                            \n                                DeleteModel\n                            \n                            \n                                EditModel\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                loadModels\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, ngZone: NgZone, modelsService: ModelsService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/models/model-list/model-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddModel\n                        \n                    \n                \n            \n            \n                \nAddModel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CloneModel\n                        \n                    \n                \n            \n            \n                \nCloneModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Clones a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to clone.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                The ID of the newly cloned model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteModel\n                        \n                    \n                \n            \n            \n                \nDeleteModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Deletes a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditModel\n                        \n                    \n                \n            \n            \n                \nEditModel(model: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Edits the specified model.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The model to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:116\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the error result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadModels\n                        \n                    \n                \n            \n            \n                \nloadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Loads the models by calling the GetModels method of the models service.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the loaded models data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/models/model-list/model-list.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'models'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Models'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelListPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/models/model-list/model-list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport { of, Observable } from 'rxjs'\n\nimport { LogService } from '../../../services/log.service'\nimport { ModelsService } from '../../../services/models.service'\nimport { Model } from '../../../shared/model'\nimport { LogComponent } from '../../log/log.component'\nimport { NgbPagination } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n  selector: 'app-models-list',\n  templateUrl: './model-list.component.html',\n  styleUrls: ['./model-list.component.scss'],\n  standalone: true,\n  imports: [CommonModule, NgbPagination, LogComponent], // Add LogComponent to imports\n})\nexport class ModelsListComponent implements OnInit {\n  modelListPage: number = 1\n  pageSize = 10 // Number of items per page\n  totalItems = 0 // Total number of items\n  ModelsList: Array = []\n  component: string = 'models'\n  componentName: string = 'Models'\n  selectedModel: Model | null = null // Declare selectedModel property\n\n  constructor(\n    private readonly router: Router,\n    private readonly ngZone: NgZone,\n    public modelsService: ModelsService,\n    private readonly logService: LogService,\n  ) {}\n\n  /**\n   * Loads the models by calling the GetModels method of the models service.\n   * @returns An Observable that emits the loaded models data.\n   */\n  loadModels(): Observable {\n    return this.modelsService.GetModels()\n  }\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit(): void {\n    this.loadModels().subscribe((data: Model[]) => {\n      this.ModelsList = data\n    })\n    console.log(`ModelsListComponent initialized with component: ${this.component}`)\n  }\n\n  /**\n   * Deletes a model with the specified ID.\n   * @param id The ID of the model to delete.\n   */\n  DeleteModel(id: string) {\n    this.logService.CreateLog({ message: { id: id }, objectId: id, operation: 'Delete', component: this.component })\n    return this.modelsService.DeleteModel(id).subscribe(() => {\n      console.log(id + ' deleted')\n      this.ngOnInit()\n      this.router.navigate(['/models-list/'])\n    })\n  }\n\n  /**\n   * Clones a model with the specified ID.\n   *\n   * @param id The ID of the model to clone.\n   * @returns The ID of the newly cloned model.\n   */\n  CloneModel(id: string): void {\n    try {\n      const clonedId = this.modelsService.CloneModel(id)\n      this.logService\n        .CreateLog({ message: { id, new_id: clonedId }, operation: 'Clone', component: this.component })\n        .subscribe({\n          next: () => {\n            console.log(`Model cloned with new ID: ${clonedId}`)\n            this.loadModels().subscribe((data: Model[]) => {\n              this.ModelsList = data\n            })\n            this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n          },\n          error: (err) => {\n            console.error('Error occurred while logging clone operation:', err)\n          },\n        })\n    } catch (error) {\n      console.error('Error occurred while cloning model:', error)\n    }\n  }\n\n  AddModel(): void {\n    this.router.navigate(['/add-model'])\n  }\n\n  /**\n   * Edits the specified model.\n   *\n   * @param model The model to be edited.\n   */\n  EditModel(model: Model): void {\n    this.selectedModel = model // Assign the selected model\n    this.router.navigate(['edit-model', model._id])\n    this.ngZone.run(() => this.router.navigateByUrl(`edit-model/${model._id}`))\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   * @returns An Observable with the error result.\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T): (error: Error) => Observable {\n    return (error: Error): Observable => {\n      console.error(`ModelsListComponent.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n    \n        \n   Models\n  \n    \n      \n        Name\n        Dimensions\n        Textures\n        \n      \n    \n    \n      @for (model of ModelsList | slice: (modelListPage - 1) * pageSize : modelListPage * pageSize; track model) {\n      \n        \n          {{ model.name }}\n          {{ model._id }}\n        \n        ({{ model.dimension.width + ', ' + model.dimension.height + ', ' + model.dimension.depth }})\n        \n          @if (model.texture) {\n          front\n          },\n          @if (model.texture) {\n          back\n          },\n          @if (model.texture) {\n          side\n          },\n          @if (model.texture) {\n          top\n          },\n          @if (model.texture) {\n          bottom\n          }\n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      }\n    \n  \n  \n    \n       Add\n    \n  \n  \n  \n\n\n\n    \n\n    \n                \n                    ./model-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Models                    Name        Dimensions        Textures                            @for (model of ModelsList | slice: (modelListPage - 1) * pageSize : modelListPage * pageSize; track model) {                        {{ model.name }}          {{ model._id }}                ({{ model.dimension.width + \\', \\' + model.dimension.height + \\', \\' + model.dimension.depth }})                  @if (model.texture) {          front          },          @if (model.texture) {          back          },          @if (model.texture) {          side          },          @if (model.texture) {          top          },          @if (model.texture) {          bottom          }                                                                                                                                                                          }                   Add          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AttributeAddComponent', 'selector': 'app-add-attribute'},{'name': 'AttributeDictionaryAddComponent', 'selector': 'app-add-attribute-dictionary'},{'name': 'AttributeDictionaryEditComponent', 'selector': 'app-edit-attribute-dictionary'},{'name': 'AttributeDictionaryListComponent', 'selector': 'app-attribute-dictionary-list'},{'name': 'AttributeEditComponent', 'selector': 'app-edit-attribute'},{'name': 'AttributeListComponent', 'selector': 'app-attribute-list'},{'name': 'ConnectionAddComponent', 'selector': 'app-add-connection'},{'name': 'ConnectionEditComponent', 'selector': 'app-edit-connection'},{'name': 'ConnectionListComponent', 'selector': 'app-connection-list'},{'name': 'CubeComponent', 'selector': 'app-cube'},{'name': 'DeviceAddComponent', 'selector': 'app-add-device'},{'name': 'DeviceEditComponent', 'selector': 'app-edit-device'},{'name': 'DeviceListComponent', 'selector': 'app-device-list'},{'name': 'FloorAddComponent', 'selector': 'app-add-floor'},{'name': 'FloorEditComponent', 'selector': 'app-edit-floor'},{'name': 'FloorListComponent', 'selector': 'app-floor-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LogComponent', 'selector': 'app-log'},{'name': 'ModelAddComponent', 'selector': 'app-add-model'},{'name': 'ModelEditComponent', 'selector': 'app-edit-model'},{'name': 'ModelsListComponent', 'selector': 'app-models-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelsService.html":{"url":"injectables/ModelsService.html","title":"injectable - ModelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/models.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseurl\n                            \n                            \n                                httpOptions\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CloneModel\n                            \n                            \n                                CreateModel\n                            \n                            \n                                DeleteModel\n                            \n                            \n                                GetModel\n                            \n                            \n                                GetModels\n                            \n                            \n                                    Private\n                                handleErrorTemplate\n                            \n                            \n                                UpdateModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService, ngZone: NgZone, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/models.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CloneModel\n                        \n                    \n                \n            \n            \n                \nCloneModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Clones a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the model to clone.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The UUID of the cloned model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateModel\n                        \n                    \n                \n            \n            \n                \nCreateModel(data: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Creates a new model.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data of the model to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteModel\n                        \n                    \n                \n            \n            \n                \nDeleteModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Deletes a model by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the deleted model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetModel\n                        \n                    \n                \n            \n            \n                \nGetModel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Retrieves a model by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the model to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the retrieved model.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetModels\n                        \n                    \n                \n            \n            \n                \nGetModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Retrieves the models from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Model objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorTemplate(operation: string, result?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:134\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handle Http operation that failed. Let the app continue.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nname of the operation that failed\n\n\n                                            \n                                        \n                                        \n                                                result\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \noptional value to return as the observable result\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (error: any) => Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateModel\n                        \n                    \n                \n            \n            \n                \nUpdateModel(id: string, data: Model)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/models.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Updates a model with the specified ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the model to update.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data for the model.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated model.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseurl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/models.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/models.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Default value : {} as Model\n                    \n                \n                    \n                        \n                                Defined in src/app/services/models.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable, NgZone } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\nimport { Model } from '../shared/model'\nimport { LogService } from './log.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModelsService {\n  baseurl = environment.baseurl\n  model: Model = {} as Model\n  constructor(\n    private http: HttpClient,\n    private logService: LogService,\n    private ngZone: NgZone,\n    private router: Router,\n  ) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n\n  /**\n   * Retrieves the models from the server.\n   * @returns An Observable that emits an array of Model objects.\n   */\n  GetModels(): Observable {\n    return this.http\n      .get(`${this.baseurl}/models`, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('GetModels', [])))\n  }\n  /**\n   * Retrieves a model by its ID.\n   * @param id The ID of the model to retrieve.\n   * @returns An Observable that emits the retrieved model.\n   */\n  GetModel(id: string): Observable {\n    return this.http\n      .get(`${this.baseurl}/models/${encodeURIComponent(id)}`, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('GetModel', {} as Model))\n      )\n  }\n\n  /**\n   * Deletes a model by its ID.\n   * @param id The ID of the model to delete.\n   * @returns An Observable that emits the deleted model.\n   */\n  DeleteModel(id: string): Observable {\n    return this.http\n      .delete(environment.baseurl + '/models/' + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.handleErrorTemplate('DeleteModel', id as unknown as Model)))\n  }\n\n  /**\n   * Creates a new model.\n   * @param data The data of the model to be created.\n   * @returns An Observable that emits the created model.\n   */\n  CreateModel(data: Model): Observable {\n    console.log('Service.CreateModel: ' + JSON.stringify(data, null, ' '))\n    return this.http\n      .post(environment.baseurl + '/models/', JSON.stringify(data, null, ' '), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(\n          this.handleErrorTemplate('CreateModel', data),\n        ),\n      )\n  }\n\n  /**\n   * Clones a model with the specified ID.\n   * @param id - The ID of the model to clone.\n   * @returns The UUID of the cloned model.\n   */\n  CloneModel(id: string): string {\n    console.log(`ModelService.CloneModel: ${JSON.stringify(id, null, ' ')}`)\n    let idConed = ''\n    this.GetModel(id).subscribe((value: Model) => {\n      console.log('Get Model: ' + JSON.stringify(value, null, ' '))\n      this.CreateModel(value).subscribe(\n        (v: Model | { acknowledged: boolean; insertedId: string }) => {\n          console.log('Create Model: ' + JSON.stringify(v, null, ' '))\n          if ('_id' in v) {\n            idConed = String(v._id) // Convert 'ObjectId' to string\n          } else if ('insertedId' in v) {\n            idConed = String(v.insertedId)\n          }\n          this.ngZone.run(() => this.router.navigateByUrl('models-list'))\n        },\n        (err: any) => {\n          console.error(err)\n          catchError(this.handleErrorTemplate('CloneModel', value))\n        },\n        () => this.ngZone.run(() => this.router.navigateByUrl('models-list')),\n      )\n    })\n    console.log('Get after Model: ' + JSON.stringify(this.model, null, ' '))\n    return idConed\n  }\n\n  /**\n   * Updates a model with the specified ID.\n   * @param id - The ID of the model to update.\n   * @param data - The updated data for the model.\n   * @returns An Observable that emits the updated model.\n   */\n  UpdateModel(id: string, data: Model): Observable {\n    return this.http\n      .put(`${this.baseurl}/models/${id}`, data, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleErrorTemplate('UpdateModel', {} as Model))\n      )\n  }\n\n  /**\n   * Handle Http operation that failed. Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   * @template T - The type of the result expected from the operation\n   */\n  private handleErrorTemplate(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      console.error(\n        `ModelsService.handleErrorTemplate: ${operation} failed: ${error.message}, Status: ${(error as any)?.status || 'N/A'}, Stack: ${error.stack || 'N/A'}`,\n      )\n      console.error(`ModelsService.handleErrorTemplate: ${operation} failed: ${error.message}`)\n      return of(result as T)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/device.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a position in a 3D space.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            h\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        h\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        h:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Position {\n  x: number\n  y: number\n  h: number\n}\n\n/**\n * Interface for a device object.\n * @property _id - The unique identifier of the device.\n * @property name - The name of the device.\n * @property modelId - The model identifier associated with the device.\n * @property position - The position of the device in 3D space.\n */\nexport interface DeviceInterface {\n  _id: string\n  name: string\n  modelId: string\n  position: Position\n}\n\n/**\n * Represents a device with a unique ID, name, model ID, and position.\n */\nexport class Device {\n  /**\n   * The unique identifier of the device.\n   */\n  _id: string = ''\n\n  /**\n   * The name of the device.\n   */\n  name: string = ''\n\n  /**\n   * The model identifier associated with the device.\n   */\n  modelId: string = ''\n\n  /**\n   * The position of the device in 3D space.\n   */\n  position: Position = { x: 0, y: 0, h: 0 }\n\n  /**\n   * Indicates whether debug mode is enabled.\n   */\n  isDebugMode: boolean = false\n\n  /**\n   * Creates an instance of the Device class.\n   * @param name - The name of the device. Defaults to an empty string.\n   * @param modelId - The model identifier of the device. Defaults to an empty string.\n   * @param position - The position of the device in 3D space. Defaults to { x: 0, y: 0, h: 0 }.\n   */\n  constructor(name: string = '', modelId: string = '', position: Position = { x: 0, y: 0, h: 0 }) {\n    this.name = name\n    this.modelId = modelId\n    this.position = position\n  }\n\n  /**\n   * Returns a string representation of the device.\n   * @returns A string containing the device ID and name.\n   */\n  toString(): string {\n    return `Device ID: ${this._id || 'N/A'}, Name: ${this.name || 'N/A'}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResolverDevice.html":{"url":"guards/ResolverDevice.html","title":"guard - ResolverDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResolverDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolverDevice.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DeviceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolverDevice.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        DeviceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/resolverDevice.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable } from 'rxjs'\n\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\n\nimport { DeviceService } from './services/device.service'\nimport { Device } from './shared/device'\n\n@Injectable({\n  providedIn: 'root', // This ensures it is available application-wide\n})\nexport class ResolverDevice implements Resolve> {\n  constructor(private api: DeviceService) {}\n\n  resolve(route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable {\n    console.log('Resolver')\n    return this.api.GetDevices()\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResolverModel.html":{"url":"guards/ResolverModel.html","title":"guard - ResolverModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResolverModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolverModel.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(modelsService: ModelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolverModel.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelsService\n                                                  \n                                                        \n                                                                        ModelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/resolverModel.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\n\nimport { ModelsService } from './services/models.service';\nimport { Model } from './shared/model';\n\n@Injectable({\n  providedIn: 'root', // This ensures it is available application-wide\n})\nexport class ResolverModel implements Resolve> {\n  constructor(private modelsService: ModelsService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log('ResolverModel')\n    return this.modelsService.GetModels()\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplatePageTitleStrategy.html":{"url":"injectables/TemplatePageTitleStrategy.html","title":"injectable - TemplatePageTitleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplatePageTitleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TitleStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                updateTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing.module.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTitle(routerState: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app-routing.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                routerState\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgModule } from '@angular/core'\nimport { Title } from '@angular/platform-browser'\nimport { RouterModule, RouterStateSnapshot, Routes, TitleStrategy } from '@angular/router'\n\nimport { CubeComponent } from './components/3d/3d.component'\nimport { AttributeDictionaryAddComponent } from './components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component'\nimport { AttributeDictionaryListComponent } from './components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component'\nimport { AttributeDictionaryEditComponent } from './components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component'\nimport { AttributeAddComponent } from './components/attribute/add-attribute/add-attribute.component'\nimport { AttributeListComponent } from './components/attribute/attribute-list/attribute-list.component'\nimport { AttributeEditComponent } from './components/attribute/edit-attribute/edit-attribute.component'\nimport { ConnectionAddComponent } from './components/connection/add-connection/add-connection.component'\nimport { ConnectionListComponent } from './components/connection/connection-list/connection-list.component'\nimport { ConnectionEditComponent } from './components/connection/edit-connection/edit-connection.component'\nimport { DeviceAddComponent } from './components/devices/add-device/add-device.component'\nimport { DeviceListComponent } from './components/devices/devices-list/devices-list.component'\nimport { DeviceEditComponent } from './components/devices/edit-device/edit-device.component'\nimport { FloorAddComponent } from './components/floors/add-floor/add-floor.component'\nimport { FloorEditComponent } from './components/floors/edit-floor/edit-floor.component'\nimport { FloorListComponent } from './components/floors/floor-list/floor-list.component'\nimport { HomeComponent } from './components/home/home.component'\nimport { ModelAddComponent } from './components/models/add-model/add-model.component'\nimport { ModelEditComponent } from './components/models/edit-model/edit-model.component'\nimport { ModelsListComponent } from './components/models/model-list/model-list.component'\nimport { ResolverDevice } from './resolverDevice'\nimport { ResolverModel } from './resolverModel'\n\n@Injectable()\nexport class TemplatePageTitleStrategy extends TitleStrategy {\n  constructor(private readonly title: Title) {\n    super()\n  }\n\n  override updateTitle(routerState: RouterStateSnapshot) {\n    const title = this.buildTitle(routerState)\n    if (title !== undefined) {\n      this.title.setTitle(`3d-inventory: ${title}`)\n    }\n  }\n}\n\nexport const routes: Routes = [\n  { path: '', component: HomeComponent, title: 'Home' },\n  { path: 'home', component: HomeComponent, title: 'Home' },\n  {\n    path: '3d',\n    component: CubeComponent,\n    title: '3d',\n    resolve: { resolveDeviceList: ResolverDevice, resolveModelList: ResolverModel },\n  },\n  { path: 'device-list', component: DeviceListComponent, title: 'Device List' },\n  { path: 'edit-device/:id', component: DeviceEditComponent, title: 'Edit Device' },\n  { path: 'add-device', component: DeviceAddComponent, title: 'Add Device' },\n  { path: 'models-list', component: ModelsListComponent, title: 'Models List' },\n  { path: 'edit-model/:id', component: ModelEditComponent, title: 'Edit Model' },\n  { path: 'add-model', component: ModelAddComponent, title: 'Add Model' },\n  {\n    path: 'attribute-dictionary-list',\n    component: AttributeDictionaryListComponent,\n    title: 'Attribute Dictionary List',\n  },\n  { path: 'add-attribute-dictionary', component: AttributeDictionaryAddComponent, title: 'Add Attribute Dictionary' },\n  {\n    path: 'edit-attribute-dictionary/:id',\n    component: AttributeDictionaryEditComponent,\n    title: 'Edit Attribute Dictionary',\n  },\n  { path: 'attribute-list', component: AttributeListComponent, title: 'Attribute List' },\n  { path: 'add-attribute', component: AttributeAddComponent, title: 'Add Attribute' },\n  { path: 'edit-attribute/:id', component: AttributeEditComponent, title: 'Edit Attribute' },\n  { path: 'connection-list', component: ConnectionListComponent, title: 'Connections List' },\n  { path: 'add-connection', component: ConnectionAddComponent, title: 'Add Connections' },\n  { path: 'edit-connection/:id', component: ConnectionEditComponent, title: 'Edit Connections' },\n  { path: 'floor-list', component: FloorListComponent, title: 'Floor List' },\n  { path: 'add-floor', component: FloorAddComponent, title: 'Add Floor' },\n  { path: 'edit-floor/:id', component: FloorEditComponent, title: 'Edit Floor' },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Texture.html":{"url":"interfaces/Texture.html","title":"interface - Texture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Texture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            back\n                                        \n                                \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        back\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        back:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Dimension {\n  width: number\n  height: number\n  depth: number\n}\n\ninterface Texture {\n  front: string\n  back: string\n  side: string\n  top: string\n  bottom: string\n}\n\nexport class Model {\n  _id: string\n  name: string\n  dimension: Dimension\n  texture: Texture\n\n  constructor() {\n    this._id = ''\n    this.name = ''\n    this.dimension = {\n      width: 0,\n      height: 0,\n      depth: 0,\n    }\n    this.texture = {\n      front: '',\n      back: '',\n      side: '',\n      top: '',\n      bottom: '',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tools3D.html":{"url":"classes/Tools3D.html","title":"class - Tools3D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tools3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/3d/3dTools.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deviceList\n                            \n                            \n                                getRandomH\n                            \n                            \n                                getRandomX\n                            \n                            \n                                getRandomY\n                            \n                            \n                                    Private\n                                modelList\n                            \n                            \n                                    Private\n                                racks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDistanceInDeviceList\n                            \n                            \n                                generateRacksList\n                            \n                            \n                                generateRandomDeviceRack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deviceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Device[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        racks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/3d/3dTools.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkDistanceInDeviceList\n                        \n                    \n                \n            \n            \n                \ncheckDistanceInDeviceList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/3d/3dTools.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRacksList\n                        \n                    \n                \n            \n            \n                \ngenerateRacksList(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/3d/3dTools.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomDeviceRack\n                        \n                    \n                \n            \n            \n                \ngenerateRandomDeviceRack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/3d/3dTools.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Device\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid'\n\nimport { faker } from '@faker-js/faker'\n\nimport { Device } from '../../shared/device'\nimport { Model } from '../../shared/model'\n\nclass Tools3D {\n  private racks: Array = []\n  private deviceList: Device[] = []\n  private modelList: Model[] = []\n\n  getRandomX = () => Math.round(Math.random() * 40 - 20)\n  getRandomY = () => Math.round(Math.random() * 40 - 20)\n  getRandomH = () => Math.round(Math.random() * 10)\n\n  checkDistanceInDeviceList() {\n    let x = this.getRandomX()\n    let y = this.getRandomY()\n    let distance = true\n    let counter = 0\n    while (distance == true && counter  {\n        // console.log('Generate rack (' + x + ', ' + y + ') ' + Math.sqrt(Math.pow(Math.abs(x - element.x), 2) + Math.pow(Math.abs(y - element.y), 2)))\n        if (\n          Math.sqrt(Math.pow(Math.abs(x - element.position.x), 2) + Math.pow(Math.abs(y - element.position.y), 2))  {\n  //     this.createRack3d(element.position.x, element.position.y, Math.round(Math.random() * 10))\n  //   })\n  // }\n\n  // createRack3d(floor_x: number, floor_y: number, h: number): void {\n  //   for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnitDictionary.html":{"url":"classes/UnitDictionary.html","title":"class - UnitDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnitDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/UnitDictionary.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findUnitByName\n                            \n                            \n                                getAllUnits\n                            \n                            \n                                getRandomUnit\n                            \n                            \n                                getRandomUnitName\n                            \n                            \n                                logUnitIfExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnitDictionaryItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: '', description: 'No unit' },\n    { name: 'm', description: 'Meter (length)' },\n    { name: 'cm', description: 'Centimeter (length)' },\n    { name: 'mm', description: 'Millimeter (length)' },\n    { name: 'km', description: 'Kilometer (length)' },\n    { name: 'g', description: 'Gram (mass)' },\n    { name: 'kg', description: 'Kilogram (mass)' },\n    { name: 'mg', description: 'Milligram (mass)' },\n    { name: 'l', description: 'Liter (volume)' },\n    { name: 'ml', description: 'Milliliter (volume)' },\n    { name: 's', description: 'Second (time)' },\n    { name: 'min', description: 'Minute (time)' },\n    { name: 'h', description: 'Hour (time)' },\n    // IT values\n    { name: 'B', description: 'Byte (data size)' },\n    { name: 'KB', description: 'Kilobyte (data size)' },\n    { name: 'MB', description: 'Megabyte (data size)' },\n    { name: 'GB', description: 'Gigabyte (data size)' },\n    { name: 'TB', description: 'Terabyte (data size)' },\n    { name: 'bit', description: 'Bit (data size)' },\n    { name: 'kbit', description: 'Kilobit (data size)' },\n    { name: 'Mbit', description: 'Megabit (data size)' },\n    { name: 'Gbps', description: 'Gigabits per second (data rate)' },\n    { name: 'Mbps', description: 'Megabits per second (data rate)' },\n    { name: 'Kbps', description: 'Kilobits per second (data rate)' },\n    { name: 'Hz', description: 'Hertz (frequency)' },\n    { name: 'GHz', description: 'Gigahertz (frequency)' },\n    { name: 'MHz', description: 'Megahertz (frequency)' },\n    { name: 'kHz', description: 'Kilohertz (frequency)' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/UnitDictionary.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findUnitByName\n                        \n                    \n                \n            \n            \n                \nfindUnitByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/UnitDictionary.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UnitDictionaryItem | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUnits\n                        \n                    \n                \n            \n            \n                \ngetAllUnits()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/UnitDictionary.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UnitDictionaryItem[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomUnit\n                        \n                    \n                \n            \n            \n                \ngetRandomUnit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/UnitDictionary.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UnitDictionaryItem\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomUnitName\n                        \n                    \n                \n            \n            \n                \ngetRandomUnitName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/UnitDictionary.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logUnitIfExists\n                        \n                    \n                \n            \n            \n                \nlogUnitIfExists(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/UnitDictionary.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface UnitDictionaryItem {\n  name: string\n  description: string\n}\n// | 'm' | 'cm' | 'mm' | 'km' | 'g' | 'kg' | 'mg' | 'l' | 'ml' | 's' | 'min' | 'h' = ''\nexport class UnitDictionary {\n  private readonly list: UnitDictionaryItem[] = [\n    { name: '', description: 'No unit' },\n    { name: 'm', description: 'Meter (length)' },\n    { name: 'cm', description: 'Centimeter (length)' },\n    { name: 'mm', description: 'Millimeter (length)' },\n    { name: 'km', description: 'Kilometer (length)' },\n    { name: 'g', description: 'Gram (mass)' },\n    { name: 'kg', description: 'Kilogram (mass)' },\n    { name: 'mg', description: 'Milligram (mass)' },\n    { name: 'l', description: 'Liter (volume)' },\n    { name: 'ml', description: 'Milliliter (volume)' },\n    { name: 's', description: 'Second (time)' },\n    { name: 'min', description: 'Minute (time)' },\n    { name: 'h', description: 'Hour (time)' },\n    // IT values\n    { name: 'B', description: 'Byte (data size)' },\n    { name: 'KB', description: 'Kilobyte (data size)' },\n    { name: 'MB', description: 'Megabyte (data size)' },\n    { name: 'GB', description: 'Gigabyte (data size)' },\n    { name: 'TB', description: 'Terabyte (data size)' },\n    { name: 'bit', description: 'Bit (data size)' },\n    { name: 'kbit', description: 'Kilobit (data size)' },\n    { name: 'Mbit', description: 'Megabit (data size)' },\n    { name: 'Gbps', description: 'Gigabits per second (data rate)' },\n    { name: 'Mbps', description: 'Megabits per second (data rate)' },\n    { name: 'Kbps', description: 'Kilobits per second (data rate)' },\n    { name: 'Hz', description: 'Hertz (frequency)' },\n    { name: 'GHz', description: 'Gigahertz (frequency)' },\n    { name: 'MHz', description: 'Megahertz (frequency)' },\n    { name: 'kHz', description: 'Kilohertz (frequency)' },\n  ]\n\n  getAllUnits(): UnitDictionaryItem[] {\n    return [...this.list]\n  }\n\n  getRandomUnit(): UnitDictionaryItem {\n    const idx = Math.floor(Math.random() * this.list.length)\n    return this.list[idx]\n  }\n\n  getRandomUnitName(): string {\n    return this.getRandomUnit().name\n  }\n\n  findUnitByName(name: string): UnitDictionaryItem | undefined {\n    return this.list.find((item) => item.name === name)\n  }\n\n  logUnitIfExists(name: string): void {\n    const item = this.findUnitByName(name)\n    if (item) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UnitDictionaryItem.html":{"url":"interfaces/UnitDictionaryItem.html","title":"interface - UnitDictionaryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UnitDictionaryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/UnitDictionary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UnitDictionaryItem {\n  name: string\n  description: string\n}\n// | 'm' | 'cm' | 'mm' | 'km' | 'g' | 'kg' | 'mg' | 'l' | 'ml' | 's' | 'min' | 'h' = ''\nexport class UnitDictionary {\n  private readonly list: UnitDictionaryItem[] = [\n    { name: '', description: 'No unit' },\n    { name: 'm', description: 'Meter (length)' },\n    { name: 'cm', description: 'Centimeter (length)' },\n    { name: 'mm', description: 'Millimeter (length)' },\n    { name: 'km', description: 'Kilometer (length)' },\n    { name: 'g', description: 'Gram (mass)' },\n    { name: 'kg', description: 'Kilogram (mass)' },\n    { name: 'mg', description: 'Milligram (mass)' },\n    { name: 'l', description: 'Liter (volume)' },\n    { name: 'ml', description: 'Milliliter (volume)' },\n    { name: 's', description: 'Second (time)' },\n    { name: 'min', description: 'Minute (time)' },\n    { name: 'h', description: 'Hour (time)' },\n    // IT values\n    { name: 'B', description: 'Byte (data size)' },\n    { name: 'KB', description: 'Kilobyte (data size)' },\n    { name: 'MB', description: 'Megabyte (data size)' },\n    { name: 'GB', description: 'Gigabyte (data size)' },\n    { name: 'TB', description: 'Terabyte (data size)' },\n    { name: 'bit', description: 'Bit (data size)' },\n    { name: 'kbit', description: 'Kilobit (data size)' },\n    { name: 'Mbit', description: 'Megabit (data size)' },\n    { name: 'Gbps', description: 'Gigabits per second (data rate)' },\n    { name: 'Mbps', description: 'Megabits per second (data rate)' },\n    { name: 'Kbps', description: 'Kilobits per second (data rate)' },\n    { name: 'Hz', description: 'Hertz (frequency)' },\n    { name: 'GHz', description: 'Gigahertz (frequency)' },\n    { name: 'MHz', description: 'Megahertz (frequency)' },\n    { name: 'kHz', description: 'Kilohertz (frequency)' },\n  ]\n\n  getAllUnits(): UnitDictionaryItem[] {\n    return [...this.list]\n  }\n\n  getRandomUnit(): UnitDictionaryItem {\n    const idx = Math.floor(Math.random() * this.list.length)\n    return this.list[idx]\n  }\n\n  getRandomUnitName(): string {\n    return this.getRandomUnit().name\n  }\n\n  findUnitByName(name: string): UnitDictionaryItem | undefined {\n    return this.list.find((item) => item.name === name)\n  }\n\n  logUnitIfExists(name: string): void {\n    const item = this.findUnitByName(name)\n    if (item) {\n      console.log('-->', name)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOneValidator\n                            \n                            \n                                numberValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        atLeastOneValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validation.ts:48\n                        \n                    \n\n            \n                \n                    One of deviceId, modelId and connectionId have to set\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validation.ts:68\n                        \n                    \n\n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validation.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n/**\n * @description custom validation form shared module\n * @export\n * @class Validation\n */\nexport default class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n\n  /**\n   * One of deviceId, modelId and connectionId have to set\n   *\n   * @param {AbstractControl} control\n   * @type {ValidatorFn}\n   * @memberof Validation\n   */\n  atLeastOneValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    let i = 0\n    if (control.get('deviceId')?.value != '') i++\n    if (control.get('modelId')?.value != '') i++\n    if (control.get('connectionId')?.value != '') i++\n    console.log('count Ids => ' + i)\n    if (i > 1 || i == 0) {\n      return { atLeastOneValidator: true }\n    } else if (i == 1) {\n      return null\n    } else {\n      return { atLeastOneValidator: true }\n    }\n  }\n  /**\n   * @description check is it number\n   * @param {AbstractControl} control\n   * @type {ValidatorFn}\n   * @memberof Validation\n   */\n  numberValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    try {\n      const value = control?.value;\n      // Accept both numbers and numeric strings\n      if (value === null || value === undefined || value === '') {\n        return { number: true };\n      }\n      const num = typeof value === 'number' ? value : Number(value);\n      if (typeof num !== 'number' || isNaN(num)) {\n        return { number: true };\n      }\n      return null;\n    } catch (error) {\n      return { number: true, error: (error as Error).message };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            injectable\n            TemplatePageTitleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/3d/3d.component.ts\n            \n            component\n            CubeComponent\n            \n                9 %\n                (5/51)\n            \n        \n        \n            \n                \n                src/app/components/3d/3dTools.ts\n            \n            class\n            Tools3D\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/attribute-dictionary/add-attribute-dictionary/add-attribute-dictionary.component.ts\n            \n            component\n            AttributeDictionaryAddComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/attribute-dictionary/attribute-dictionary-list/attribute-dictionary-list.component.ts\n            \n            component\n            AttributeDictionaryListComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/attribute-dictionary/edit-attribute-dictionary/edit-attribute-dictionary.component.ts\n            \n            component\n            AttributeDictionaryEditComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/attribute/add-attribute/add-attribute.component.ts\n            \n            component\n            AttributeAddComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/components/attribute/attribute-list/attribute-list.component.ts\n            \n            component\n            AttributeListComponent\n            \n                2 %\n                (1/36)\n            \n        \n        \n            \n                \n                src/app/components/attribute/edit-attribute/edit-attribute.component.ts\n            \n            component\n            AttributeEditComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/connection/add-connection/add-connection.component.ts\n            \n            component\n            ConnectionAddComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/connection/connection-list/connection-list.component.ts\n            \n            component\n            ConnectionListComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/connection/edit-connection/edit-connection.component.ts\n            \n            component\n            ConnectionEditComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/devices/add-device/add-device.component.ts\n            \n            component\n            DeviceAddComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/devices/devices-list/devices-list.component.ts\n            \n            component\n            DeviceListComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/devices/edit-device/edit-device.component.ts\n            \n            component\n            DeviceEditComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/floors/add-floor/add-floor.component.ts\n            \n            component\n            FloorAddComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/floors/edit-floor/edit-floor.component.ts\n            \n            component\n            FloorEditComponent\n            \n                2 %\n                (1/34)\n            \n        \n        \n            \n                \n                src/app/components/floors/floor-list/floor-list.component.ts\n            \n            component\n            FloorListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/components/log/log.component.ts\n            \n            component\n            LogComponent\n            \n                38 %\n                (18/47)\n            \n        \n        \n            \n                \n                src/app/components/models/add-model/add-model.component.ts\n            \n            component\n            ModelAddComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/models/edit-model/edit-model.component.ts\n            \n            component\n            ModelEditComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/models/model-list/model-list.component.ts\n            \n            component\n            ModelsListComponent\n            \n                35 %\n                (6/17)\n            \n        \n        \n            \n                \n                src/app/resolverDevice.ts\n            \n            guard\n            ResolverDevice\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolverModel.ts\n            \n            guard\n            ResolverModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/attribute-dictionary.service.ts\n            \n            injectable\n            AttributeDictionaryService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/services/attribute.service.ts\n            \n            injectable\n            AttributeService\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                src/app/services/connection.service.ts\n            \n            injectable\n            ConnectionService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/app/services/device.service.ts\n            \n            injectable\n            DeviceService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/floor.service.ts\n            \n            injectable\n            FloorService\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            injectable\n            LogService\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            interface\n            Log\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            interface\n            LogIn\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            interface\n            LogParameters\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/models.service.ts\n            \n            injectable\n            ModelsService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/shared/AttributesDictionary.ts\n            \n            class\n            AttributesDictionary\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/ComponentDictionary.ts\n            \n            class\n            ComponentDictionary\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/ComponentDictionary.ts\n            \n            interface\n            ComponentDictionaryItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/DeviceTypes.ts\n            \n            class\n            DeviceType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/DeviceTypes.ts\n            \n            class\n            DeviceTypeDict\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/DeviceTypes.ts\n            \n            interface\n            DeviceTypeInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/UnitDictionary.ts\n            \n            class\n            UnitDictionary\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/UnitDictionary.ts\n            \n            interface\n            UnitDictionaryItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/attribute.ts\n            \n            class\n            Attribute\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/connection.ts\n            \n            class\n            Connection\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/connection.ts\n            \n            interface\n            ConnectionInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            class\n            Device\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            interface\n            DeviceInterface\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/device.ts\n            \n            interface\n            Position\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/deviceCategories.ts\n            \n            class\n            DeviceCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/deviceCategories.ts\n            \n            class\n            DeviceCategoryDict\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/floors.ts\n            \n            interface\n            FloorDimension\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/floors.ts\n            \n            interface\n            Floors\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/model.ts\n            \n            class\n            Model\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/model.ts\n            \n            interface\n            Dimension\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/model.ts\n            \n            interface\n            Texture\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/validation.ts\n            \n            class\n            Validation\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.0.4\n        \n            @angular/common : ^20.0.4\n        \n            @angular/compiler : ^20.0.4\n        \n            @angular/core : ^20.0.4\n        \n            @angular/forms : ^20.0.4\n        \n            @angular/platform-browser : ^20.0.4\n        \n            @angular/platform-browser-dynamic : ^20.0.4\n        \n            @angular/platform-server : ^20.0.4\n        \n            @angular/router : ^20.0.4\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @faker-js/faker : ^9.8.0\n        \n            @jest/globals : ^30.0.2\n        \n            @ng-bootstrap/ng-bootstrap : ^19.0.0\n        \n            @octokit/core : ^7.0.2\n        \n            bootstrap : ^5.3.7\n        \n            bootstrap-icons : ^1.13.1\n        \n            browserify-zlib : ^0.2.0\n        \n            chalk : ^5.4.1\n        \n            cors : ^2.8.5\n        \n            date-fns : ^4.1.0\n        \n            depcheck : ^1.4.7\n        \n            eslint-scope : ^8.4.0\n        \n            express : ^5.1.0\n        \n            firebase : ^11.9.1\n        \n            font-awesome : ^4.7.0\n        \n            https-browserify : ^1.0.0\n        \n            install : ^0.13.0\n        \n            jquery : ^3.7.1\n        \n            jsdom : ^26.1.0\n        \n            lodash : ^4.17.21\n        \n            mkdirp : ^3.0.1\n        \n            mongodb : ^6.17.0\n        \n            ngx-markdown : ^20.0.0\n        \n            node-gyp : ^11.2.0\n        \n            node-sass : ^9.0.0\n        \n            npm-check-updates : ^18.0.1\n        \n            path-browserify : ^1.0.1\n        \n            prismjs : ^1.30.0\n        \n            process : ^0.11.10\n        \n            rimraf : ^6.0.1\n        \n            rxjs : ~7.8.2\n        \n            showdown : ^2.1.0\n        \n            stream : ^0.0.3\n        \n            stream-browserify : ^3.0.0\n        \n            three-orbitcontrols-ts : ^0.1.2\n        \n            timers : ^0.1.1\n        \n            timers-browserify : ^2.0.12\n        \n            ts-sync-request : ^1.4.1\n        \n            tslib : ^2.8.1\n        \n            winston : ^3.17.0\n        \n            zone.js : ^0.15.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n3d inventory\n\n3d inventory\nAbout\nMotivation\nArchitecture\nTechnology stack\nDemo video\nData Model\nLogical model\n\n\nApplication\nList devices\nModels\nAttributes\nAttribute Dictionary\nConnections\n\n\nRun\nDeploy\nContainers\nContributing\nLicense\n\n\n\n   \n   \nAbout\nProject creates ✨3d inventory✨—a solution that allows you to build a spatial and database representation of your warehouses or datacenters.\nMotivation\nI am developing this project as a sandbox to explore database systems. It covers relevant topics and issues related to creating a simple and efficient platform for graphical representation of IT inventory.\nArchitecture\nProject contain three repos:\n\n⚓ https://github.com/karol-preiskorn/3d-inventory-angular-ui\n⚓ https://github.com/karol-preiskorn/3d-inventory-mongo-api\n⚓ https://github.com/karol-preiskorn/3d-inventory-oracle-api\n\nTechnology stack\n\nAngular 19+ - as a Corp framework.\nBootstrap 5.3+ - logic for insert UI data\ntree.js 163+ - as best graph framework.\nMongoAtlas|Oracle - I want to try different solutions and data structures, including both relational and NoSQL data models using MongoAtlas and Oracle.\nREST - prepared API documented and used in Swagger.\nDocker as containers\n\nDemo video\nThe 3d inventory project leverages Angular for building the user interface and utilizes the three.js library to render interactive 3D graphics.\n\nData Model\nThe data model is based on a parametric, generic attribute class. All attributes for Devices, Models, and Connections are stored in this model.\nParameter types are defined in the Attribute Dictionary.\nAttributes store values defined in the Attribute Dictionary for Devices, Models, and Connections. The Attribute Dictionary specifies parameters for these entities.\nI had a lot of fun learning how to convert relational DB structures to correct collections in NoSQL MongoDB.\nLogical model\nRelational data model is mapped to a NoSQL model in MongoDB.\n\n\nApplication\nList devices\n\n\nModels\n\n\nAttributes\n\n\nAttribute Dictionary\n\n\nConnections\n\n\nRun\nExample :git clone https://github.com/karol-preiskorn/3d-inventory-angular-ui.git\ncd 3d-inventory-angular-ui\nnpm install\nnpm run startGoto in browser http://localhost:4200\nhttp://localhost:4200/\nDeploy\nhttps://angular.io/guide/deployment\nBuild in first terminal: ng build --watch in npm alias:\nExample :npm run buildContainers\nDocker is used for containerization, and deployment to Google Cloud is planned.\nContributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please make sure to update tests as appropriate. Do not forget about code guidelines.\nLicense\nCreative Commons Legal Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.41.7\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseurl: 'http://localhost:8080',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  baseurl: 'https://172.17.0.2:3001', \n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
